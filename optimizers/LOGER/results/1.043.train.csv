filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,339.184,674.3803024291992,962.3873233795166,592.709,674.3576526641846,0.5722605865610275,1.0000335871698425,False,1.4271170788637355,"((((((((((cn mc) mi) it1) mi_idx) it2) ci) t) n) mk) k) NoHashJoin(cn mc mi it1) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk n t k)/*+ NoHashJoin(cn mc mi it1) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk n t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id
inner join name AS n
on n.id = ci.person_id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,2263.719,4087.230443954468,2722.367286682129,4053.487,4087.2275829315186,0.5584621339602175,1.0000006999911042,False,0.6660669687322723,"(((((((it pi) an) n) ci) ml) lt) t) NoHashJoin(it pi an) NoNestLoop(an ci it n pi ml)/*+ NoHashJoin(it pi an) NoNestLoop(an ci it n pi ml) */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join name AS n
on n.id = an.person_id AND n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'))
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in')
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010;","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,164.499,305.33313751220703,616.2731647491455,274.653,305.32169342041016,0.5989339275376565,1.000037482078881,False,2.018438840179539,"((((((cn mc) t) ci) rt) chn) ct) NoHashJoin(ci cn mc t rt)/*+ NoHashJoin(ci cn mc t rt) */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,558.129,1372.5221157073975,953.3216953277588,1327.554,1372.5178241729736,0.42041905639996563,1.0000031267604312,False,0.6945787359098187,"((((((((it1 mi) at) mk) k) mc) cn) t) ct) NoHashJoin(it1 mi at) NoHashJoin(it1 mi) NoMergeJoin(at cn it1 k mc mi mk t ct) NoMergeJoin(at it1 k mc mi mk cn) NoMergeJoin(at it1 k mi mk mc)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi at) NoMergeJoin(at it1 k mi mk mc) NoMergeJoin(at it1 k mc mi mk cn) NoMergeJoin(at cn it1 k mc mi mk t ct) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join movie_keyword AS mk
on mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,46.984,4159.348726272583,1094.6810245513916,36.001,4159.344434738159,1.3050748590316936,1.000001031781448,False,0.2631859519516576,"((((((((((((((((k mk) cc) cct2) t) mc) cct1) ci) chn) pi) an) it3) mi) rt) n) it) cn) NoMergeJoin(cc cct1 cct2 chn ci k mc mk t pi)/*+ NoMergeJoin(cc cct1 cct2 chn ci k mc mk t pi) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info like 'USA:%200%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,268.514,726.2759208679199,1082.0176601409912,585.987,726.2659072875977,0.45822518246991834,1.000013787760408,False,1.4898367791791687,"(((((((((((k mk) cc) cct2) t) ci) mi) mi_idx) it2) it1) cct1) n) NoHashJoin(cc cct2 ci k mi mk t mi_idx) NoHashJoin(cc cct2 k mk t ci) NoNestLoop(cc cct2 ci it2 k mi mi_idx mk t it1)/*+ NoHashJoin(cc cct2 k mk t ci) NoHashJoin(cc cct2 ci k mi mk t mi_idx) NoNestLoop(cc cct2 ci it2 k mi mi_idx mk t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,5250.619,12675.872325897217,5696.192026138306,12621.243,12675.866842269897,0.4160144131604153,1.0000004326037333,False,0.4493729775657911,"(((((((((rt ci) an) n) t) chn) mc) cn) mi) it)/*+  */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f'
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,715.233,791.9354438781738,943.9489841461182,752.763,791.9316291809082,0.9501436707170782,1.0000048169527835,False,1.1919576758443666,"((((mk k) mc) cn) t) NoHashJoin(k mc mk cn)/*+ NoHashJoin(k mc mk cn) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,402.776,793.2305335998535,1041.1596298217773,747.424,793.2217121124268,0.5388855589330822,1.0000111210866924,False,1.3125707654283287,"((((((((it1 mi) at) t) mc) cn) mk) k) ct) NoHashJoin(it1 mi at) NoHashJoin(it1 mi) NoMergeJoin(at cn it1 k mc mi mk t ct) NoMergeJoin(at cn it1 mc mi mk t k) NoMergeJoin(at it1 mi t mc)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi at) NoMergeJoin(at it1 mi t mc) NoMergeJoin(at cn it1 mc mi mk t k) NoMergeJoin(at cn it1 k mc mi mk t ct) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join title AS t
on t.id = at.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,43.273,145.35212516784668,523.8626003265381,77.149,145.34354209899902,0.5609016319070889,1.000059053665018,False,3.6043059964075685,"((((((((((k mk) cc) cct1) t) mi) mc) cn) it1) kt) ct) NoHashJoin(cc cct1 cn k mc mi mk t it1) NoMergeJoin(cc cct1 k mc mi mk t cn) NoMergeJoin(cc cct1 k mi mk t mc) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct) NoNestLoop(cc cct1 cn it1 k mc mi mk t kt) NoNestLoop(cc k mk cct1)/*+ NoNestLoop(cc k mk cct1) NoMergeJoin(cc cct1 k mi mk t mc) NoMergeJoin(cc cct1 k mc mi mk t cn) NoHashJoin(cc cct1 cn k mc mi mk t it1) NoNestLoop(cc cct1 cn it1 k mc mi mk t kt) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,399.633,826.458215713501,1227.9319763183594,756.62,826.4541625976562,0.5281819143030847,1.0000049042234018,False,1.48578352180937,"((((((((((it1 mi) cc) mk) cct1) k) mc) cn) t) ct) kt) NoHashJoin(it1 mi) NoMergeJoin(cc cct1 cn it1 k mc mi mk t) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 it1 k mi mk mc) NoNestLoop(cc cct1 cn ct it1 k mc mi mk t kt) NoNestLoop(cc cct1 cn it1 k mc mi mk t ct) NoNestLoop(cc it1 mi mk cct1)/*+ NoHashJoin(it1 mi) NoNestLoop(cc it1 mi mk cct1) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 cn it1 k mc mi mk t) NoNestLoop(cc cct1 cn it1 k mc mi mk t ct) NoNestLoop(cc cct1 cn ct it1 k mc mi mk t kt) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game');","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,4.224,92.29850769042969,425.18067359924316,59.813,92.27228164672852,0.07062009930951466,1.0002842245063537,False,4.607891622611868,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(lt mc ml t cn) NoMergeJoin(lt ml t mc)/*+ NoMergeJoin(lt ml t mc) NoMergeJoin(lt mc ml t cn) NoMergeJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,203.259,450.8390426635742,987.3206615447998,372.788,450.82902908325195,0.5452401901348756,1.000022211480797,False,2.190011285547624,"((((((((((k mk) t) kt) mi_idx) it2) mc) ct) cn) mi) it1) NoNestLoop(cn ct it2 k kt mc mi mi_idx mk t it1)/*+ NoNestLoop(cn ct it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,0.728,209.80453491210938,90.92450141906738,186.695,209.79881286621094,0.0038994081255523715,1.0000272739669984,False,0.43338901768262195,"((((it mi_idx) t) mc) ct) NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct)/*+ NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,147.099,279.79016304016113,408.8025093078613,222.656,279.7870635986328,0.6606558996838171,1.0000110778585989,False,1.4611201248900736,"(((((((((ci t) an) chn) rt) mi) it) n) mc) cn)/*+  */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note = '(voice)' AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,3.849,224.35784339904785,467.0689105987549,202.212,224.34425354003906,0.019034478665954545,1.0000605759175658,False,2.0819294598753624,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,166.655,248.74424934387207,628.3764839172363,216.348,248.7356662750244,0.7703098711335441,1.0000345067877727,False,2.526282190759274,"(((((((k mk) ml) lt) mc) cn) t) ct) NoHashJoin(k mk ml)/*+ NoHashJoin(k mk ml) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,224.736,383.7721347808838,547.5976467132568,353.871,383.76903533935547,0.635078884678315,1.0000080763199812,False,1.4268937727845412,"((((((mi_idx it2) t) mi) ci) it1) n) NoHashJoin(it2 mi mi_idx t ci) NoHashJoin(it2 mi_idx t mi) NoHashJoin(mi_idx it2)/*+ NoHashJoin(mi_idx it2) NoHashJoin(it2 mi_idx t mi) NoHashJoin(it2 mi mi_idx t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join cast_info AS ci
on ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,1300.275,1012.6819610595703,2057.4660301208496,969.875,1012.6783847808838,1.3406624565021266,1.0000035315049085,False,2.031707263669926,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 cct2 k mk t) NoNestLoop(cc cct2 k mk cct1) NoNestLoop(cc k mk cct2)/*+ NoNestLoop(cc k mk cct2) NoNestLoop(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 k mk t) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,5381.527,11825.72627067566,5706.146240234375,11787.336,11825.722694396973,0.4565515906223425,1.0000003024152333,False,0.4825198753339571,"((((((k mk) t) mc) cn) ci) n) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t n)/*+ NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,996.308,1891.4320468902588,1363.624095916748,1860.566,1891.4291858673096,0.5354865132438194,1.0000015126249349,False,0.7209490612208471,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,1416.51,5043.77555847168,2419.614791870117,4944.504,5043.771743774414,0.28648171788312843,1.0000007563183784,False,0.47972329335812547,"(((((((((((k mk) cc) mi_idx) t) kt) it2) cct2) cct1) ci) chn) n) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct2 it2 k kt mi_idx mk t cct1) NoMergeJoin(cc it2 k kt mi_idx mk t cct2)/*+ NoMergeJoin(cc it2 k kt mi_idx mk t cct2) NoMergeJoin(cc cct2 it2 k kt mi_idx mk t cct1) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join movie_info_idx AS mi_idx
on cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = mi_idx.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,55.697,90.39592742919922,455.7774066925049,45.102,90.3925895690918,1.2349119772959072,1.0000369262582622,False,5.042198800424124,"((((((((cn mc) t) mi) it1) at) mk) k) ct) NoHashJoin(cn it1 mc mi t at) NoHashJoin(cn mc mi t it1)/*+ NoHashJoin(cn mc mi t it1) NoHashJoin(cn it1 mc mi t at) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join aka_title AS at
on mc.movie_id = at.movie_id AND t.id = at.movie_id AND mi.movie_id = at.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,1271.81,1600.3553867340088,2034.8494052886963,1504.342,1600.339412689209,0.845426106563534,1.000009981660561,False,1.2715111489189266,"((((((((((k mk) t) mi) mi_idx) it2) it1) mc) kt) cn) ct) NoHashJoin(k mi mi_idx mk t it2) NoHashJoin(k mi mk t mi_idx) NoHashJoin(k mk t mi) NoMergeJoin(it1 it2 k mi mi_idx mk t mc) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(it1 it2 k mc mi mi_idx mk t kt) NoNestLoop(it2 k mi mi_idx mk t it1)/*+ NoHashJoin(k mk t mi) NoHashJoin(k mi mk t mi_idx) NoHashJoin(k mi mi_idx mk t it2) NoNestLoop(it2 k mi mi_idx mk t it1) NoMergeJoin(it1 it2 k mi mi_idx mk t mc) NoNestLoop(it1 it2 k mc mi mi_idx mk t kt) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,121.713,158.7080955505371,453.02724838256836,138.689,158.69474411010742,0.8775966370800856,1.0000841328457635,False,2.8547085848554867,"(((mk k) t) mi) NoMergeJoin(k mk t mi) NoMergeJoin(mk k)/*+ NoMergeJoin(mk k) NoMergeJoin(k mk t mi) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,278.94,305.5124282836914,605.8385372161865,278.213,305.509090423584,1.0026131057858547,1.000010925567232,False,1.9830458608488541,"((((mc ct) mi) it) t) NoHashJoin(ct mc mi it)/*+ NoHashJoin(ct mc mi it) */ select min(t.title) AS american_vhs_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%' AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year > 2010;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,155.918,420.778751373291,586.2512588500977,376.891,420.7456111907959,0.4136952063063326,1.0000787653670382,False,1.3933627428480764,"(((((((it pi) n) ci) t) an) ml) lt) NoHashJoin(it pi n) NoMergeJoin(ci it n pi t an) NoMergeJoin(ci it n pi t)/*+ NoHashJoin(it pi n) NoMergeJoin(ci it n pi t) NoMergeJoin(ci it n pi t an) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join cast_info AS ci
on ci.person_id = n.id AND pi.person_id = ci.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1984
inner join aka_name AS an
on n.id = an.person_id AND an.person_id = ci.person_id AND pi.person_id = an.person_id AND an.name like '%a%'
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id AND ml.linked_movie_id = t.id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,11514.479,7276.62467956543,12192.922353744507,7233.483,7276.619434356689,1.5918305192671358,1.0000007208304333,False,1.6756300729670435,"((((((((mi_idx it2) mi) it1) t) ci) n) mk) k) NoHashJoin(mi_idx it2) NoMergeJoin(ci it1 it2 mi mi_idx mk n t k) NoMergeJoin(ci it1 it2 mi mi_idx n t mk) NoMergeJoin(it1 it2 mi mi_idx t)/*+ NoHashJoin(mi_idx it2) NoMergeJoin(it1 it2 mi mi_idx t) NoMergeJoin(ci it1 it2 mi mi_idx n t mk) NoMergeJoin(ci it1 it2 mi mi_idx mk n t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mi.movie_id
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND ci.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,364.956,397.2516059875488,540.229320526123,385.849,397.2506523132324,0.9458518746970966,1.0000024006865964,False,1.3599205372736602,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,306.36,5532.968997955322,995.114803314209,546.548,5532.965183258057,0.5605363115407979,1.0000006894489915,False,0.17985199081412637,"((((((((((((((((k mk) cc) cct1) t) ci) chn) rt) an) mi) pi) it3) cct2) n) it) mc) cn) NoHashJoin(an cc cct1 cct2 chn ci it3 k mi mk n pi rt t it) NoHashJoin(an cc cct1 chn ci k mk rt t mi) NoMergeJoin(an cc cct1 chn ci k mi mk rt t pi) NoNestLoop(cc cct1 chn ci k mk t rt)/*+ NoNestLoop(cc cct1 chn ci k mk t rt) NoHashJoin(an cc cct1 chn ci k mk rt t mi) NoMergeJoin(an cc cct1 chn ci k mi mk rt t pi) NoHashJoin(an cc cct1 cct2 chn ci it3 k mi mk n pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1150.211,2315.1156902313232,1474.91455078125,2284.1,2315.1142597198486,0.5035729609036382,1.0000006179010252,False,0.6370806730548707,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,26.032,156.4924716949463,384.56010818481445,110.166,156.49175643920898,0.2362979503658116,1.0000045705649523,False,2.4573825288631177,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoMergeJoin(cn lt mc mi mk ml t k) NoMergeJoin(cn lt mc mi ml t mk)/*+ NoMergeJoin(cn lt mc mi ml t mk) NoMergeJoin(cn lt mc mi mk ml t k) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,273.46,443.58015060424805,478.93261909484863,404.193,443.57943534851074,0.6765579809645392,1.0000016124636995,False,1.0796997807586857,"((((ct mc) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,101.268,131.78443908691406,312.11209297180176,108.736,131.78372383117676,0.9313198940553267,1.0000054274967842,False,2.3683660159098023,"((((mk k) t) mi_idx) it) NoHashJoin(mk k) NoMergeJoin(k mk t mi_idx)/*+ NoHashJoin(mk k) NoMergeJoin(k mk t mi_idx) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '9.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,871.091,3028.050661087036,1315.8073425292969,2960.094,3028.0497074127197,0.294278154680223,1.0000003149467178,False,0.43453954514292714,"((((((((((k mk) t) mi) mi_idx) it2) it1) mc) kt) cn) ct) NoHashJoin(it2 k mi mi_idx mk t it1) NoHashJoin(k mi mi_idx mk t it2) NoHashJoin(k mk t mi) NoMergeJoin(k mi mk t mi_idx)/*+ NoHashJoin(k mk t mi) NoMergeJoin(k mi mk t mi_idx) NoHashJoin(k mi mi_idx mk t it2) NoHashJoin(it2 k mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,19.316,472.72396087646484,219.68436241149902,48.959,472.72229194641113,0.3945342020874609,1.0000035304661576,False,0.4647218169191034,"(((((((((((((lt ml) t2) kt2) mi_idx1) it1) mc1) t1) cn1) mi_idx2) it2) kt1) mc2) cn2) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(cn1 it1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 it2) NoMergeJoin(cn1 it1 kt2 lt mc1 mi_idx1 ml t1 t2 mi_idx2) NoMergeJoin(it1 kt2 lt mc1 mi_idx1 ml t1 t2 cn1) NoMergeJoin(it1 kt2 lt mc1 mi_idx1 ml t2 t1) NoMergeJoin(it1 kt2 lt mi_idx1 ml t2 mc1)/*+ NoMergeJoin(it1 kt2 lt mi_idx1 ml t2 mc1) NoMergeJoin(it1 kt2 lt mc1 mi_idx1 ml t2 t1) NoMergeJoin(it1 kt2 lt mc1 mi_idx1 ml t1 t2 cn1) NoMergeJoin(cn1 it1 kt2 lt mc1 mi_idx1 ml t1 t2 mi_idx2) NoMergeJoin(cn1 it1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 it2) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 kt1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join movie_companies AS mc1
on mi_idx1.movie_id = mc1.movie_id AND ml.movie_id = mc1.movie_id
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = mc1.movie_id AND t1.id = ml.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]'
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,204.461,206.62569999694824,283.937931060791,174.777,206.62474632263184,1.1698392809122484,1.0000046154893514,False,1.3741719523635345,"(((((((kt t) mk) k) mi) it1) mi_idx) it2) NoHashJoin(k kt mi mk t it1) NoMergeJoin(kt mk t k) NoMergeJoin(kt t)/*+ NoMergeJoin(kt t) NoMergeJoin(kt mk t k) NoHashJoin(k kt mi mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie' AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%')
inner join movie_keyword AS mk
on t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,61.536,151.3822078704834,420.14527320861816,107.32,151.3807773590088,0.5733879985091316,1.0000094497564325,False,2.7754202385433517,"((((((((lt ml) mk) k) mc) ct) cn) t) mi) NoMergeJoin(ct k lt mc mk ml cn)/*+ NoMergeJoin(ct k lt mc mk ml cn) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_keyword AS mk
on ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,594.643,2671.039819717407,911.9472503662109,2639.086,2671.03910446167,0.22532156966464909,1.0000002677818292,False,0.3414204040827803,"(((((((n an) ci) chn) t) rt) mc) cn) NoHashJoin(n an) NoMergeJoin(an chn ci n rt t mc) NoMergeJoin(an chn ci n t rt) NoMergeJoin(an chn ci n t) NoMergeJoin(an ci n chn)/*+ NoHashJoin(n an) NoMergeJoin(an ci n chn) NoMergeJoin(an chn ci n t) NoMergeJoin(an chn ci n t rt) NoMergeJoin(an chn ci n rt t mc) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on ci.movie_id = t.id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,189.141,732.5465679168701,504.8940181732178,678.114,732.5458526611328,0.27892212813774675,1.0000009763972244,False,0.6892319659432649,"(((((((k mk) ml) lt) mc) cn) t) ct) NoMergeJoin(cn k lt mc mk ml t) NoMergeJoin(k lt mk ml mc)/*+ NoMergeJoin(k lt mk ml mc) NoMergeJoin(cn k lt mc mk ml t) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,312.962,2067.7220821380615,871.859073638916,1716.01,2067.721128463745,0.18237772507153222,1.000000461219989,False,0.42165215687798346,"(((((((((((((k mk) cc) t) mi_idx) it2) mi) it1) kt) cct2) mc) cct1) cn) ct) NoHashJoin(cc it2 k mi mi_idx mk t it1) NoHashJoin(cc it2 k mi_idx mk t mi) NoHashJoin(cc k mi_idx mk t it2) NoHashJoin(cc k mk t mi_idx) NoNestLoop(cc cct2 it1 it2 k kt mc mi mi_idx mk t cct1) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) NoHashJoin(cc k mk t mi_idx) NoHashJoin(cc k mi_idx mk t it2) NoHashJoin(cc it2 k mi_idx mk t mi) NoHashJoin(cc it2 k mi mi_idx mk t it1) NoNestLoop(cc cct2 it1 it2 k kt mc mi mi_idx mk t cct1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,4462.037,4133.401393890381,4780.854225158691,4100.673,4133.400440216064,1.0881230958918209,1.0000002307239113,False,1.1566395016178936,"(((((((rt ci) t) chn) an) n) mc) cn) NoHashJoin(chn ci rt t an)/*+ NoHashJoin(chn ci rt t an) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join title AS t
on ci.movie_id = t.id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,31.934,374.65929985046387,591.1083221435547,47.789,374.65834617614746,0.6682290903764465,1.0000025454506116,False,1.5777262889684625,"(((((((((((((lt ml) t2) mi_idx2) it2) kt2) mi_idx1) it1) t1) mc2) cn2) kt1) mc1) cn1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it1 it2 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1)/*+ NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(it1 it2 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.5'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]';","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,5248.961,4021.876811981201,5609.619855880737,3982.514,4021.876096725464,1.3180018952852395,1.000000177841316,False,1.3947768954016222,"((((((((miidx it) mc) cn) t) kt) ct) mi) it2) NoHashJoin(miidx it)/*+ NoHashJoin(miidx it) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from movie_info_idx AS miidx
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on mc.movie_id = t.id AND miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,90.211,293.1394577026367,569.7593688964844,201.473,293.1368350982666,0.44775726772321844,1.000008946689928,False,1.9436635068584511,"(((((((((((k mk) cc) t) mi_idx) it2) cct1) cct2) kt) ci) chn) n) NoMergeJoin(cc cct1 it2 k mi_idx mk t cct2)/*+ NoMergeJoin(cc cct1 it2 k mi_idx mk t cct2) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '8.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,145.627,1343.724250793457,494.45462226867676,1309.807,1343.7223434448242,0.11118202910810525,1.000001419451453,False,0.36797380402343516,"((((((((kt t) mc) cn) miidx) it) ct) mi) it2) NoMergeJoin(cn kt mc miidx t it) NoMergeJoin(cn kt mc t miidx) NoMergeJoin(kt t) NoNestLoop(cn ct it kt mc mi miidx t it2)/*+ NoMergeJoin(kt t) NoMergeJoin(cn kt mc t miidx) NoMergeJoin(cn kt mc miidx t it) NoNestLoop(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie' AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%')
inner join movie_companies AS mc
on mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,607.062,10208.648920059204,998.0800151824951,10157.513,10208.64725112915,0.05976482629163261,1.0000001634819984,False,0.09776809704851935,"(((((((((n an) ci) rt) chn) mi) it) mc) t) cn) NoHashJoin(an chn ci mi n rt it) NoHashJoin(an chn ci n rt mi) NoHashJoin(an ci n rt chn) NoHashJoin(an ci n rt) NoHashJoin(n an) NoMergeJoin(an chn ci it mc mi n rt t cn) NoMergeJoin(an chn ci it mc mi n rt t) NoMergeJoin(an chn ci it mi n rt mc) NoMergeJoin(an n ci)/*+ NoHashJoin(n an) NoMergeJoin(an n ci) NoHashJoin(an ci n rt) NoHashJoin(an ci n rt chn) NoHashJoin(an chn ci n rt mi) NoHashJoin(an chn ci mi n rt it) NoMergeJoin(an chn ci it mi n rt mc) NoMergeJoin(an chn ci it mc mi n rt t) NoMergeJoin(an chn ci it mc mi n rt t cn) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,1.699,229.2790412902832,220.7036018371582,208.296,229.2783260345459,0.00815666167377194,1.00000311959595,False,0.9626012438868917,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,8482.491,6674.763441085815,8759.352684020996,6644.501,6674.762725830078,1.2766182140690474,1.0000001071582267,False,1.3123092226370754,"((((((mi_idx it2) mi) it1) t) ci) n) NoHashJoin(mi_idx it2)/*+ NoHashJoin(mi_idx it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mi.movie_id
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,4322.071,9771.301984786987,4603.276252746582,9752.614,9771.30103111267,0.44317051818107434,1.0000000975995227,False,0.4711016719359429,"((((((k mk) t) ci) n) mc) cn) NoNestLoop(ci k mk t n)/*+ NoNestLoop(ci k mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,329.951,2660.752534866333,718.0502414703369,2616.249,2660.7518196105957,0.12611605393829106,1.000000268817156,False,0.2698674247549418,"(((((((((n ci) cc) mk) cct2) chn) t) cct1) k) kt) NoHashJoin(cc cct1 cct2 chn ci k mk n t kt) NoHashJoin(cc cct2 chn ci mk n t cct1) NoHashJoin(cc cct2 chn ci mk n t) NoHashJoin(cc cct2 ci mk n chn) NoHashJoin(cc ci mk n cct2) NoHashJoin(cc ci n mk)/*+ NoHashJoin(cc ci n mk) NoHashJoin(cc ci mk n cct2) NoHashJoin(cc cct2 ci mk n chn) NoHashJoin(cc cct2 chn ci mk n t) NoHashJoin(cc cct2 chn ci mk n t cct1) NoHashJoin(cc cct1 cct2 chn ci k mk n t kt) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join complete_cast AS cc
on ci.movie_id = cc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,528.151,859.5142364501953,840.6236171722412,829.482,859.513521194458,0.6367238830981262,1.0000008321634501,False,0.9780225632797892,"(((((((k mk) t) mi_idx) it2) mi) it1) kt) NoHashJoin(it2 k mi_idx mk t mi) NoHashJoin(k mi_idx mk t it2) NoHashJoin(k mk t mi_idx) NoMergeJoin(it1 it2 k mi mi_idx mk t kt)/*+ NoHashJoin(k mk t mi_idx) NoHashJoin(k mi_idx mk t it2) NoHashJoin(it2 k mi_idx mk t mi) NoMergeJoin(it1 it2 k mi mi_idx mk t kt) */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode');","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,35.353,61.72585487365723,240.08679389953613,38.339,61.72513961791992,0.9221158611335716,1.0000115877540614,False,3.8896111922253898,"((((k mk) t) ci) n) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t ci)/*+ NoMergeJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,6949.31,20912.995100021362,7007.956027984619,20876.243,20912.993907928467,0.33288125645979505,1.000000057002498,False,0.33510056278110356,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,1546.112,2045.5241203308105,1866.8262958526611,2012.594,2045.5231666564941,0.7682185279296272,1.0000004662251358,False,0.9126400161500388,"(((((((it2 mi_idx) t) mi) it1) mc) cn) ct) NoHashJoin(it2 mi_idx) NoMergeJoin(it1 it2 mc mi mi_idx t cn) NoNestLoop(cn it1 it2 mc mi mi_idx t ct)/*+ NoHashJoin(it2 mi_idx) NoMergeJoin(it1 it2 mc mi mi_idx t cn) NoNestLoop(cn it1 it2 mc mi mi_idx t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,79.173,203.55558395385742,556.0402870178223,74.068,203.55486869812012,1.0689231516984394,1.0000035138227932,False,2.7316481820066505,"(((((((((((lt ml) cc) cct1) mk) cct2) mc) ct) cn) t) k) mi) NoHashJoin(cc cct1 cct2 cn ct lt mc mk ml t k) NoHashJoin(cc cct1 lt mk ml cct2) NoMergeJoin(cc cct1 cct2 cn ct lt mc mk ml t) NoMergeJoin(cc cct1 cct2 ct lt mc mk ml cn) NoMergeJoin(cc cct1 cct2 lt mc mk ml ct) NoMergeJoin(cc cct1 cct2 lt mk ml mc) NoMergeJoin(cc cct1 lt ml mk)/*+ NoMergeJoin(cc cct1 lt ml mk) NoHashJoin(cc cct1 lt mk ml cct2) NoMergeJoin(cc cct1 cct2 lt mk ml mc) NoMergeJoin(cc cct1 cct2 lt mc mk ml ct) NoMergeJoin(cc cct1 cct2 ct lt mc mk ml cn) NoMergeJoin(cc cct1 cct2 cn ct lt mc mk ml t) NoHashJoin(cc cct1 cct2 cn ct lt mc mk ml t k) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.id = mc.movie_id AND t.production_year BETWEEN 1950 AND 2010
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,3256.04,4402.710676193237,3540.106773376465,4376.881,4402.708053588867,0.7439178721102995,1.0000005956798266,False,0.8040748399137543,"((((((rt ci) an1) t) mc) cn) n1) NoHashJoin(an1 ci rt t) NoMergeJoin(an1 ci cn mc rt t n1) NoMergeJoin(an1 ci mc rt t cn) NoMergeJoin(an1 ci rt t mc)/*+ NoHashJoin(an1 ci rt t) NoMergeJoin(an1 ci rt t mc) NoMergeJoin(an1 ci mc rt t cn) NoMergeJoin(an1 ci cn mc rt t n1) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,3319.921,5814.097881317139,3484.5619201660156,5792.294,5814.095735549927,0.5731616868895122,1.0000003690629307,False,0.5993299867526911,"((((k mk) t) ci) n) NoNestLoop(ci k mk t n)/*+ NoNestLoop(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,45.443,990.6003475189209,97.57137298583984,964.729,990.5991554260254,0.047104419997740295,1.0000012034059276,False,0.09849733108633378,"((((cn mc) t) mk) k)/*+  */ select min(t.title) AS movie_title
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join title AS t
on mc.movie_id = t.id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,4242.562,7356.930255889893,4303.714036941528,7322.837,7356.928825378418,0.5793604309368077,1.0000001944441095,False,0.5849878582616516,"((((((n ci) mc) t) cn) mk) k) NoMergeJoin(ci cn mc n t mk)/*+ NoMergeJoin(ci cn mc n t mk) */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,5717.249,6437.62993812561,5997.203350067139,6411.656,6437.628269195557,0.891696154628383,1.000000259246105,False,0.9315858417554369,"((((((rt ci) a1) t) mc) cn) n1) NoHashJoin(a1 ci rt t) NoMergeJoin(a1 ci cn mc rt t n1) NoMergeJoin(a1 ci mc rt t cn) NoMergeJoin(a1 ci rt t mc)/*+ NoHashJoin(a1 ci rt t) NoMergeJoin(a1 ci rt t mc) NoMergeJoin(a1 ci mc rt t cn) NoMergeJoin(a1 ci cn mc rt t n1) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'writer'
inner join aka_name AS a1
on a1.person_id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join name AS n1
on n1.id = ci.person_id AND a1.person_id = n1.id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,2030.912,3383.7926387786865,2510.1442337036133,3263.655,3383.789539337158,0.6222814605097658,1.0000009159675838,False,0.7418145261467174,"(((((((((((k mk) cc) cct2) mi_idx) cct1) it2) t) ci) n) mi) it1) NoHashJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n t it1) NoHashJoin(cc cct1 cct2 ci it2 k mi_idx mk n t mi) NoHashJoin(cc cct1 cct2 ci it2 k mi_idx mk t n) NoHashJoin(cc cct1 cct2 it2 k mi_idx mk t ci) NoHashJoin(cc cct1 cct2 it2 k mi_idx mk t)/*+ NoHashJoin(cc cct1 cct2 it2 k mi_idx mk t) NoHashJoin(cc cct1 cct2 it2 k mi_idx mk t ci) NoHashJoin(cc cct1 cct2 ci it2 k mi_idx mk t n) NoHashJoin(cc cct1 cct2 ci it2 k mi_idx mk n t mi) NoHashJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,81.245,169.86560821533203,282.336950302124,156.806,169.86393928527832,0.5181243064678648,1.0000098250991984,False,1.6621358923505989,"((((k mk) t) mi_idx) it)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,21.277,50.89521408081055,228.08098793029785,25.731,50.89402198791504,0.8269014029769538,1.0000234230435903,False,4.481488768650599,"((((t mk) k) ci) n) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t ci)/*+ NoMergeJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from title AS t
inner join movie_keyword AS mk
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,2.511,216.31622314453125,313.56143951416016,187.253,216.31550788879395,0.013409664998691612,1.0000033065393428,False,1.4495559868752432,"(((((((mi_idx it2) t) mc) cn) mi) it1) ct) NoHashJoin(cn it1 it2 mc mi mi_idx t ct) NoHashJoin(mi_idx it2) NoNestLoop(cn it2 mc mi mi_idx t it1)/*+ NoHashJoin(mi_idx it2) NoNestLoop(cn it2 mc mi mi_idx t it1) NoHashJoin(cn it1 it2 mc mi mi_idx t ct) */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from movie_info_idx AS mi_idx
inner join info_type AS it2
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors');","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,485.004,6127.150774002075,699.1920471191406,6087.617,6127.148866653442,0.07967058374401675,1.0000003112946452,False,0.11411376846487964,"((((n ci) mk) k) t) NoHashJoin(ci k mk n t) NoHashJoin(ci mk n k)/*+ NoHashJoin(ci mk n k) NoHashJoin(ci k mk n t) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,48.895,531.1551094055176,527.9572010040283,369.648,531.1541557312012,0.1322744881617106,1.000001795475581,False,0.9939811169833137,"(((((((((((cn mc) t) mk) k) ci) chn) rt) mi) an) it) n) NoHashJoin(an chn ci cn it k mc mi mk rt t n) NoHashJoin(an chn ci cn k mc mi mk rt t it) NoHashJoin(chn ci cn k mc mi mk rt t an) NoHashJoin(chn ci cn k mc mk rt t mi) NoHashJoin(chn ci cn k mc mk t rt)/*+ NoHashJoin(chn ci cn k mc mk t rt) NoHashJoin(chn ci cn k mc mk rt t mi) NoHashJoin(chn ci cn k mc mi mk rt t an) NoHashJoin(an chn ci cn k mc mi mk rt t it) NoHashJoin(an chn ci cn it k mc mi mk rt t n) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mc.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join aka_name AS an
on ci.person_id = an.person_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,14.122,34.459829330444336,218.8875675201416,15.677,34.45911407470703,0.9008101039739747,1.0000207566490467,False,6.352095037777101,"((((mk t) k) ci) n) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t ci) NoMergeJoin(mk t k) NoMergeJoin(mk t)/*+ NoMergeJoin(mk t) NoMergeJoin(mk t k) NoMergeJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,196.267,1418.3928966522217,560.2176189422607,1387.02,1418.391466140747,0.14150264596040432,1.0000010085448967,False,0.39496685669333426,"((((((((kt t) mc) cn) miidx) it) ct) mi) it2) NoMergeJoin(cn kt mc miidx t it) NoMergeJoin(cn kt mc t miidx) NoMergeJoin(kt t) NoNestLoop(cn ct it kt mc mi miidx t it2)/*+ NoMergeJoin(kt t) NoMergeJoin(cn kt mc t miidx) NoMergeJoin(cn kt mc miidx t it) NoNestLoop(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie' AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%')
inner join movie_companies AS mc
on mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,7062.764,7628.947019577026,7360.895395278931,7592.011,7628.945827484131,0.930288957695135,1.00000015625919,False,0.9648640273156065,"((((((k mk) t) ci) n) mc) cn)/*+  */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'Z%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,56.438,256.9136619567871,495.7766532897949,171.25,256.9127082824707,0.32956496350364967,1.0000037120558294,False,1.9297474874022105,"((((((((((cn mc) t) mi) it1) mi_idx) mk) k) ci) n) it2) NoHashJoin(ci cn it1 k mc mi mi_idx mk t n) NoHashJoin(cn it1 mc mi t mi_idx) NoHashJoin(cn mc mi t it1) NoMergeJoin(cn it1 k mc mi mi_idx mk t ci) NoMergeJoin(cn it1 mc mi mi_idx mk t k) NoMergeJoin(cn it1 mc mi mi_idx t mk) NoMergeJoin(cn mc t mi) NoMergeJoin(cn mc t)/*+ NoMergeJoin(cn mc t) NoMergeJoin(cn mc t mi) NoHashJoin(cn mc mi t it1) NoHashJoin(cn it1 mc mi t mi_idx) NoMergeJoin(cn it1 mc mi mi_idx t mk) NoMergeJoin(cn it1 mc mi mi_idx mk t k) NoMergeJoin(cn it1 k mc mi mi_idx mk t ci) NoHashJoin(ci cn it1 k mc mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND t.id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,188.503,2152.1172523498535,740.1280403137207,1792.402,2152.116298675537,0.10516781391674411,1.0000004431332623,False,0.34390708381754875,"(((((((((((((k mk) cc) cct1) mi_idx) it2) t) cct2) mi) it1) mc) kt) cn) ct) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 k mi_idx mk it2) NoHashJoin(cc k mk cct1) NoMergeJoin(cc cct1 it2 k mi_idx mk t cct2) NoMergeJoin(cc cct1 k mk mi_idx) NoNestLoop(cc cct1 cct2 it1 it2 k mc mi mi_idx mk t kt)/*+ NoHashJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mk mi_idx) NoHashJoin(cc cct1 k mi_idx mk it2) NoMergeJoin(cc cct1 it2 k mi_idx mk t cct2) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoNestLoop(cc cct1 cct2 it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,844.302,470.17741203308105,1195.2707767486572,429.494,470.17669677734375,1.9658062743600608,1.0000015212488034,False,2.5421735805734498,"((((((((mi_idx it2) t) mk) k) ci) n) mi) it1) NoHashJoin(ci it2 k mi mi_idx mk n t it1) NoHashJoin(ci it2 k mi_idx mk t n) NoHashJoin(it2 k mi_idx mk t ci) NoHashJoin(mi_idx it2) NoMergeJoin(ci it2 k mi_idx mk n t mi) NoMergeJoin(it2 mi_idx mk t k)/*+ NoHashJoin(mi_idx it2) NoMergeJoin(it2 mi_idx mk t k) NoHashJoin(it2 k mi_idx mk t ci) NoHashJoin(ci it2 k mi_idx mk t n) NoMergeJoin(ci it2 k mi_idx mk n t mi) NoHashJoin(ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join movie_keyword AS mk
on mi_idx.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,849.994,7953.12237739563,1133.0187320709229,7926.64,7953.121662139893,0.1072325726915818,1.0000000899339614,False,0.14246214005056088,"((((((n ci) mc) t) cn) mk) k) NoMergeJoin(ci cn mc n t mk)/*+ NoMergeJoin(ci cn mc n t mk) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,931.037,966.7794704437256,1151.0963439941406,945.158,966.7785167694092,0.9850596408219578,1.000000986445499,False,1.190651554650437,"((((k mk) t) mc) cn) NoMergeJoin(k mc mk t cn)/*+ NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,146.768,248.41022491455078,424.7579574584961,221.97,248.40927124023438,0.661206469342704,1.0000038391252937,False,1.7099118536832567,"((((((ci t) an) rt) n) mc) cn) NoHashJoin(an ci mc n rt t cn) NoMergeJoin(an ci n rt t mc)/*+ NoMergeJoin(an ci n rt t mc) NoHashJoin(an ci mc n rt t cn) */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from cast_info AS ci
inner join title AS t
on ci.movie_id = t.id AND ci.note = '(voice: English version)' AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%')
inner join aka_name AS an
on an.person_id = ci.person_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,21.17,169.2965030670166,496.9494342803955,17.057,169.2960262298584,1.241132672802955,1.0000028165880135,False,2.93538747097154,"(((((((((((lt ml) cc) cct2) t) mc) ct) mk) k) cn) mi) cct1) NoHashJoin(cc cct2 cn ct k lt mc mk ml t mi) NoHashJoin(cc cct2 ct lt mc mk ml t k) NoNestLoop(cc cct2 cn ct k lt mc mi mk ml t cct1)/*+ NoHashJoin(cc cct2 ct lt mc mk ml t k) NoHashJoin(cc cct2 cn ct k lt mc mk ml t mi) NoNestLoop(cc cct2 cn ct k lt mc mi mk ml t cct1) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year = 1998
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,3758.89,5129.036664962769,4034.6972942352295,5068.25,5129.035711288452,0.7416544172051497,1.0000001859363767,False,0.7866385654822597,"((((((rt ci) chn) t) mc) cn) ct) NoMergeJoin(chn ci mc rt t cn) NoMergeJoin(chn ci rt t mc)/*+ NoMergeJoin(chn ci rt t mc) NoMergeJoin(chn ci mc rt t cn) */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND ci.note like '%(producer)%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,326.606,186.47050857543945,574.6026039123535,162.144,186.46931648254395,2.0142959344779947,1.0000063929708007,False,3.081486084420458,"(((((k mk) t1) ml) lt) t2)/*+  */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,541.517,2302.3126125335693,858.3393096923828,2232.44,2302.311420440674,0.24256732543763776,1.000000517780907,False,0.37281633669179837,"(((((((n ci) t) mc) cn) chn) an) rt) NoHashJoin(an chn ci cn mc n t rt) NoHashJoin(chn ci cn mc n t an) NoMergeJoin(ci cn mc n t chn) NoMergeJoin(ci mc n t cn) NoMergeJoin(ci n t mc)/*+ NoMergeJoin(ci n t mc) NoMergeJoin(ci mc n t cn) NoMergeJoin(ci cn mc n t chn) NoHashJoin(chn ci cn mc n t an) NoHashJoin(an chn ci cn mc n t rt) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%' AND ci.note = '(voice)'
inner join title AS t
on ci.movie_id = t.id AND t.production_year BETWEEN 2007 AND 2010
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
