filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,881.653,674.3597984313965,1330.580711364746,592.709,674.3576526641846,1.4874972372614557,1.0000031819424062,False,1.9731083440782815,"((((((((((cn mc) mi_idx) mk) k) mi) ci) n) t) it2) it1) NoHashJoin(ci cn it2 k mc mi mi_idx mk n t it1) NoHashJoin(ci cn k mc mi mi_idx mk n t) NoHashJoin(ci cn k mc mi mi_idx mk n) NoHashJoin(cn k mc mi mi_idx mk ci) NoHashJoin(cn k mc mi_idx mk mi) NoHashJoin(cn mc mi_idx mk k) NoHashJoin(cn mc mi_idx mk) NoMergeJoin(cn mc mi_idx)/*+ NoMergeJoin(cn mc mi_idx) NoHashJoin(cn mc mi_idx mk) NoHashJoin(cn mc mi_idx mk k) NoHashJoin(cn k mc mi_idx mk mi) NoHashJoin(cn k mc mi mi_idx mk ci) NoHashJoin(ci cn k mc mi mi_idx mk n) NoHashJoin(ci cn k mc mi mi_idx mk n t) NoHashJoin(ci cn it2 k mc mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,2607.002,4087.229013442993,2930.3386211395264,4053.487,4087.2275829315186,0.6431504529310196,1.000000349995552,False,0.7169501970912453,"(((((((it pi) n) an) ci) ml) lt) t) NoHashJoin(an ci it lt ml n pi t) NoHashJoin(it pi)/*+ NoHashJoin(it pi) NoHashJoin(an ci it lt ml n pi t) */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'))
inner join aka_name AS an
on n.id = an.person_id AND pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in')
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010;","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,150.969,305.32312393188477,390.25378227233887,274.653,305.32169342041016,0.5496717676486329,1.00000468525986,False,1.2781724675389579,"((((((cn mc) t) ci) chn) ct) rt) NoHashJoin(chn ci cn ct mc t rt) NoHashJoin(chn ci cn mc t ct) NoHashJoin(ci cn mc t chn) NoHashJoin(cn mc t ci)/*+ NoHashJoin(cn mc t ci) NoHashJoin(ci cn mc t chn) NoHashJoin(chn ci cn mc t ct) NoHashJoin(chn ci cn ct mc t rt) */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor';","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,605.112,1372.5192546844482,976.3636589050293,1327.554,1372.5178241729736,0.45580970717575325,1.000001042253477,False,0.7113668337920117,"((((((((it1 mi) mk) k) at) mc) cn) ct) t) NoHashJoin(at cn ct it1 k mc mi mk t) NoHashJoin(at it1 k mi mk mc) NoHashJoin(it1 k mi mk at) NoHashJoin(it1 mi mk k) NoHashJoin(it1 mi)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi mk k) NoHashJoin(it1 k mi mk at) NoHashJoin(at it1 k mi mk mc) NoHashJoin(at cn ct it1 k mc mi mk t) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join aka_title AS at
on mi.movie_id = at.movie_id AND mk.movie_id = at.movie_id
inner join movie_companies AS mc
on mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,79.492,4159.346342086792,755.7361125946045,36.001,4159.344434738159,2.2080497763951006,1.0000004585695326,False,0.1816959678267616,"((((((((((((((((k mk) cc) cct1) cct2) mi) ci) pi) rt) t) it3) mc) cn) it) an) n) chn) NoHashJoin(cc cct1 cct2 ci k mi mk pi rt) NoHashJoin(cc cct1 cct2 k mk mi) NoMergeJoin(an cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt t chn)/*+ NoHashJoin(cc cct1 cct2 k mk mi) NoHashJoin(cc cct1 cct2 ci k mi mk pi rt) NoMergeJoin(an cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt t chn) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info like 'USA:%200%'
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,2610.014,726.2716293334961,3101.517915725708,585.987,726.2659072875977,4.4540476153907855,1.0000078787202331,False,4.270499116926774,"(((((((((((k mk) cc) cct2) cct1) mi) mi_idx) ci) n) it1) it2) t) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) NoHashJoin(cc cct1 cct2 ci it1 k mi mi_idx mk n it2) NoHashJoin(cc cct1 cct2 ci k mi mi_idx mk n it1) NoHashJoin(cc cct1 cct2 ci k mi mi_idx mk n) NoHashJoin(cc cct1 cct2 k mi mi_idx mk ci) NoHashJoin(cc cct1 cct2 k mi mk mi_idx) NoHashJoin(cc cct1 cct2 k mk mi) NoMergeJoin(cc k mk cct2)/*+ NoMergeJoin(cc k mk cct2) NoHashJoin(cc cct1 cct2 k mk mi) NoHashJoin(cc cct1 cct2 k mi mk mi_idx) NoHashJoin(cc cct1 cct2 k mi mi_idx mk ci) NoHashJoin(cc cct1 cct2 ci k mi mi_idx mk n) NoHashJoin(cc cct1 cct2 ci k mi mi_idx mk n it1) NoHashJoin(cc cct1 cct2 ci it1 k mi mi_idx mk n it2) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%');","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,10883.495,12675.868511199951,11296.9229221344,12621.243,12675.866842269897,0.8623156213694642,1.0000001316620057,False,0.8912150200618101,"(((((((((n ci) rt) chn) an) t) mi) it) mc) cn) NoHashJoin(an chn ci n rt t mi) NoMergeJoin(ci n rt chn)/*+ NoMergeJoin(ci n rt chn) NoHashJoin(an chn ci n rt t mi) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,435.296,791.9330596923828,648.8730907440186,752.763,791.9316291809082,0.5782643408350304,1.000001806357294,False,0.8193549377679806,"((((mk k) mc) cn) t) NoHashJoin(cn k mc mk t) NoHashJoin(k mc mk cn)/*+ NoHashJoin(k mc mk cn) NoHashJoin(cn k mc mk t) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,440.953,793.2257652282715,810.6119632720947,747.424,793.2217121124268,0.589963661857259,1.0000051096884803,False,1.0219235692797113,"((((((((it1 mi) mk) k) at) mc) cn) ct) t) NoHashJoin(at cn ct it1 k mc mi mk t) NoHashJoin(at it1 k mc mi mk cn) NoHashJoin(at it1 k mi mk mc) NoHashJoin(it1 k mi mk at) NoHashJoin(it1 mi)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 k mi mk at) NoHashJoin(at it1 k mi mk mc) NoHashJoin(at it1 k mc mi mk cn) NoHashJoin(at cn ct it1 k mc mi mk t) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join aka_title AS at
on mi.movie_id = at.movie_id AND mk.movie_id = at.movie_id
inner join movie_companies AS mc
on mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,43.207,145.34473419189453,490.1390075683594,77.149,145.34354209899902,0.5600461444736808,1.0000082018979193,False,3.3722792254127607,"((((((((((k mk) cc) cct1) t) kt) mi) mc) ct) cn) it1) NoHashJoin(cc cct1 cn ct k kt mc mi mk t it1) NoHashJoin(cc k mk cct1) NoMergeJoin(cc cct1 ct k kt mc mi mk t cn) NoMergeJoin(cc cct1 k kt mc mi mk t ct) NoMergeJoin(cc cct1 k kt mk t mi)/*+ NoHashJoin(cc k mk cct1) NoMergeJoin(cc cct1 k kt mk t mi) NoMergeJoin(cc cct1 k kt mc mi mk t ct) NoMergeJoin(cc cct1 ct k kt mc mi mk t cn) NoHashJoin(cc cct1 cn ct k kt mc mi mk t it1) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,426.592,826.45583152771,875.4146099090576,756.62,826.4541625976562,0.5638127461605561,1.0000020193861066,False,1.0592415762750982,"((((((((((it1 mi) mk) cc) k) cct1) t) kt) mc) ct) cn) NoHashJoin(cc it1 k mi mk cct1) NoHashJoin(it1 mi)/*+ NoHashJoin(it1 mi) NoHashJoin(cc it1 k mi mk cct1) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,10.082,92.27371215820312,332.5989246368408,59.813,92.27228164672852,0.16855867453563608,1.000015503154892,False,3.604537773436894,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(lt mc ml t cn)/*+ NoMergeJoin(lt mc ml t cn) NoMergeJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,225.71,450.8318901062012,671.9961166381836,372.788,450.82902908325195,0.6054647681792332,1.0000063461373705,False,1.4905786302285562,"((((((((((k mk) t) kt) mc) cn) mi) mi_idx) ct) it2) it1) NoHashJoin(cn ct it2 k kt mc mi mi_idx mk t it1) NoHashJoin(cn ct k kt mc mi mi_idx mk t it2) NoMergeJoin(cn k kt mc mi mi_idx mk t ct) NoMergeJoin(cn k kt mc mk t mi) NoMergeJoin(k kt mc mk t cn) NoMergeJoin(k kt mk t mc)/*+ NoMergeJoin(k kt mk t mc) NoMergeJoin(k kt mc mk t cn) NoMergeJoin(cn k kt mc mk t mi) NoMergeJoin(cn k kt mc mi mi_idx mk t ct) NoHashJoin(cn ct k kt mc mi mi_idx mk t it2) NoHashJoin(cn ct it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,0.609,209.80048179626465,213.1798267364502,186.695,209.79881286621094,0.003262004874260157,1.0000079549070413,False,1.0161155052502386,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,165.119,279.7894477844238,574.9096870422363,222.656,279.7870635986328,0.7415879203794193,1.0000085214296914,False,2.0548115400609452,"(((((((((t mc) cn) mi) ci) chn) an) rt) it) n) NoHashJoin(an chn ci cn mc mi t rt) NoHashJoin(cn mc t mi) NoMergeJoin(an chn ci cn mc mi rt t it) NoMergeJoin(mc t cn)/*+ NoMergeJoin(mc t cn) NoHashJoin(cn mc t mi) NoHashJoin(an chn ci cn mc mi t rt) NoMergeJoin(an chn ci cn mc mi rt t it) */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%' AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join cast_info AS ci
on t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mi.movie_id = ci.movie_id AND ci.note = '(voice)'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,3.849,224.34568405151367,216.7668342590332,202.212,224.34425354003906,0.019034478665954545,1.0000063764123754,False,0.966224143647818,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,147.177,248.73781204223633,467.62585639953613,216.348,248.7356662750244,0.6802789949525764,1.0000086266969432,False,1.880011272217339,"(((((((k mk) ml) lt) t) mc) cn) ct) NoHashJoin(k lt mk ml t) NoHashJoin(k mk ml lt) NoMergeJoin(k lt mc mk ml t cn)/*+ NoHashJoin(k mk ml lt) NoHashJoin(k lt mk ml t) NoMergeJoin(k lt mc mk ml t cn) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,434.054,383.7723731994629,566.0877227783203,353.871,383.76903533935547,1.2265882200010738,1.0000086975753646,False,1.4750739915161364,"((((((it2 mi_idx) t) ci) n) mi) it1) NoHashJoin(ci it2 mi mi_idx n t it1) NoHashJoin(ci it2 mi_idx n t mi) NoHashJoin(ci it2 mi_idx t n) NoHashJoin(it2 mi_idx t ci) NoHashJoin(it2 mi_idx)/*+ NoHashJoin(it2 mi_idx) NoHashJoin(it2 mi_idx t ci) NoHashJoin(ci it2 mi_idx t n) NoHashJoin(ci it2 mi_idx n t mi) NoHashJoin(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from info_type AS it2
inner join movie_info_idx AS mi_idx
on it2.id = mi_idx.info_type_id AND it2.info = 'rating' AND mi_idx.info > '8.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,812.811,1012.6800537109375,1216.0732746124268,969.875,1012.6783847808838,0.8380574816342312,1.000001648035624,False,1.2008484558259354,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoHashJoin(cc cct1 cct2 k mk t) NoHashJoin(cc k mk cct2) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 cct2 ci k kt mk t chn) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct2 k mk cct1)/*+ NoHashJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoHashJoin(cc cct1 cct2 k mk t) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct1 cct2 ci k kt mk t chn) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,19291.861,11825.724601745605,19573.601007461548,11787.336,11825.722694396973,1.6366599713455188,1.0000001612881244,False,1.6551716553217943,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(ci k mk t n) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) NoHashJoin(ci k mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,1089.64,1891.4306163787842,1418.6489582061768,1860.566,1891.4291858673096,0.5856497431426781,1.0000007563124675,False,0.7500407463341849,"(((((((k mk) t) mc) cn) ci) n) an) NoHashJoin(ci cn k mc mk t n) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc)/*+ NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoHashJoin(ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,846.427,5043.773412704468,1070.1532363891602,4944.504,5043.771743774414,0.1711854212272859,1.0000003308892904,False,0.2121732090097183,"(((((((((((k mk) cc) cct2) cct1) mi_idx) t) kt) it2) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 k mk mi_idx)/*+ NoMergeJoin(cc cct1 cct2 k mk mi_idx) NoMergeJoin(cc cct1 cct2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,51.076,90.39473533630371,415.98033905029297,45.102,90.3925895690918,1.1324553234889807,1.0000237383088828,False,4.60192966075319,"((((((((cn mc) at) ct) mi) mk) k) t) it1) NoHashJoin(at cn ct k mc mi mk t it1) NoHashJoin(at cn ct k mc mi mk t) NoHashJoin(at cn ct mc mi mk) NoMergeJoin(at cn ct mc mi mk k) NoMergeJoin(at cn ct mc mi) NoMergeJoin(at cn mc ct) NoMergeJoin(cn mc at)/*+ NoMergeJoin(cn mc at) NoMergeJoin(at cn mc ct) NoMergeJoin(at cn ct mc mi) NoHashJoin(at cn ct mc mi mk) NoMergeJoin(at cn ct mc mi mk k) NoHashJoin(at cn ct k mc mi mk t) NoHashJoin(at cn ct k mc mi mk t it1) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join aka_title AS at
on mc.movie_id = at.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = at.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates';","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,1894.375,1600.3410816192627,2358.0448627471924,1504.342,1600.339412689209,1.2592714954445199,1.0000010428600585,False,1.4734654686687594,"((((((((((k mk) t) kt) mi) mi_idx) it2) mc) cn) it1) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(k kt mk t mi) NoMergeJoin(cn it2 k kt mc mi mi_idx mk t it1) NoMergeJoin(it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(it2 k kt mi mi_idx mk t mc)/*+ NoHashJoin(k kt mk t mi) NoMergeJoin(it2 k kt mi mi_idx mk t mc) NoMergeJoin(it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(cn it2 k kt mc mi mi_idx mk t it1) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,90.426,158.69617462158203,264.5907402038574,138.689,158.69474411010742,0.652005566411179,1.0000090142334745,False,1.6672936566839038,"(((k mk) t) mi) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,271.089,305.5107593536377,485.2297306060791,278.213,305.509090423584,0.9743937199196299,1.0000054627836161,False,1.5882660968723223,"((((ct mc) mi) it) t) NoHashJoin(ct it mc mi t) NoHashJoin(ct mc mi it) NoHashJoin(ct mc mi) NoMergeJoin(ct mc)/*+ NoMergeJoin(ct mc) NoHashJoin(ct mc mi) NoHashJoin(ct mc mi it) NoHashJoin(ct it mc mi t) */ select min(t.title) AS american_vhs_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year > 2010;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,356.265,420.7489490509033,680.9594631195068,376.891,420.7456111907959,0.9452733018299719,1.0000079332024354,False,1.618458862095442,"(((((((lt ml) t) ci) n) an) pi) it) NoHashJoin(an ci lt ml n t pi) NoHashJoin(lt ml t) NoMergeJoin(an ci lt ml n pi t it)/*+ NoHashJoin(lt ml t) NoHashJoin(an ci lt ml n t pi) NoMergeJoin(an ci lt ml n pi t it) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.production_year BETWEEN 1980 AND 1984
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = ml.linked_movie_id
inner join name AS n
on ci.person_id = n.id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join aka_name AS an
on n.id = an.person_id AND an.person_id = ci.person_id AND an.name like '%a%'
inner join person_info AS pi
on n.id = pi.person_id AND pi.person_id = an.person_id AND pi.person_id = ci.person_id AND pi.note = 'Volker Boehm'
inner join info_type AS it
on it.id = pi.info_type_id AND it.info = 'mini biography';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,7466.204,7276.621580123901,7840.195894241333,7233.483,7276.619434356689,1.0321727444441355,1.0000002948851774,False,1.0774503139773544,"((((((((k mk) mi_idx) it2) mi) ci) n) t) it1) NoHashJoin(ci it2 k mi mi_idx mk n t) NoHashJoin(it2 k mi_idx mk mi) NoMergeJoin(k mi_idx mk it2) NoMergeJoin(k mk mi_idx)/*+ NoMergeJoin(k mk mi_idx) NoMergeJoin(k mi_idx mk it2) NoHashJoin(it2 k mi_idx mk mi) NoHashJoin(ci it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join cast_info AS ci
on ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,364.956,397.2625732421875,683.2821369171143,385.849,397.2506523132324,0.9458518746970966,1.0000300085824545,False,1.720027727930188,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,953.776,5532.983064651489,2497.7197647094727,546.548,5532.965183258057,1.7450910075601775,1.0000032317921477,False,0.4514251729375069,"((((((((((((((((k mk) cc) cct2) cct1) t) mi) ci) pi) chn) rt) an) it3) it) mc) cn) n) NoHashJoin(an cc cct1 cct2 chn ci k mi mk pi rt t it3) NoHashJoin(cc cct1 cct2 k mk t mi) NoMergeJoin(an cc cct1 cct2 chn ci it3 k mi mk pi rt t it) NoMergeJoin(cc cct1 cct2 chn ci k mi mk pi t rt)/*+ NoHashJoin(cc cct1 cct2 k mk t mi) NoMergeJoin(cc cct1 cct2 chn ci k mi mk pi t rt) NoHashJoin(an cc cct1 cct2 chn ci k mi mk pi rt t it3) NoMergeJoin(an cc cct1 cct2 chn ci it3 k mi mk pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1354.608,2315.12451171875,1926.3803958892822,2284.1,2315.1142597198486,0.5930598485180159,1.0000044282906808,False,0.8320886918654257,"(((((((k mk) t) mc) cn) ci) n) an) NoHashJoin(ci cn k mc mk t n) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc)/*+ NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoHashJoin(ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,44.631,156.494140625,560.0979328155518,110.166,156.49175643920898,0.40512499319209194,1.0000152352165077,False,3.579089055934574,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mi mk ml t ct) NoHashJoin(cn lt mc mi mk ml t k) NoHashJoin(lt ml t mi) NoMergeJoin(lt mc mi ml t cn)/*+ NoHashJoin(lt ml t mi) NoMergeJoin(lt mc mi ml t cn) NoHashJoin(cn lt mc mi mk ml t k) NoHashJoin(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,370.097,443.58301162719727,621.0007667541504,404.193,443.57943534851074,0.9156442590544616,1.000008062318497,False,1.3999764580299885,"((((ct mc) mi) it) t) NoHashJoin(ct it mc mi t) NoHashJoin(ct mc mi it) NoHashJoin(ct mc mi) NoMergeJoin(ct mc)/*+ NoMergeJoin(ct mc) NoHashJoin(ct mc mi) NoHashJoin(ct mc mi it) NoHashJoin(ct it mc mi t) */ select min(t.title) AS american_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year > 1990;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,95.871,131.7923069000244,354.82120513916016,108.736,131.78372383117676,0.8816859181871688,1.0000651299614105,False,2.6924508947228447,"((((k mk) t) mi_idx) it) NoHashJoin(k mi_idx mk t it) NoMergeJoin(k mk t mi_idx)/*+ NoMergeJoin(k mk t mi_idx) NoHashJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '9.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,1449.763,3028.0532836914062,2321.4428424835205,2960.094,3028.0497074127197,0.4897692438145545,1.0000011810501914,False,0.7666462135019075,"((((((((((k mk) t) kt) mi) mc) cn) mi_idx) it2) it1) ct) NoHashJoin(cn k kt mc mi mi_idx mk t it2) NoMergeJoin(cn it2 k kt mc mi mi_idx mk t it1) NoMergeJoin(cn k kt mc mi mk t mi_idx) NoMergeJoin(k kt mc mi mk t cn) NoMergeJoin(k kt mi mk t mc) NoMergeJoin(k kt mk t mi)/*+ NoMergeJoin(k kt mk t mi) NoMergeJoin(k kt mi mk t mc) NoMergeJoin(k kt mc mi mk t cn) NoMergeJoin(cn k kt mc mi mk t mi_idx) NoHashJoin(cn k kt mc mi mi_idx mk t it2) NoMergeJoin(cn it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join movie_info_idx AS mi_idx
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,19.23,472.72729873657227,451.68542861938477,48.959,472.72229194641113,0.392777630262056,1.0000105913984731,False,0.9554984740820914,"(((((((((((((lt ml) t2) kt2) mi_idx1) it1) t1) kt1) mi_idx2) it2) mc1) cn1) mc2) cn2) NoHashJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoHashJoin(it1 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 it2) NoHashJoin(it1 kt2 lt mi_idx1 ml t1 t2 kt1) NoHashJoin(it1 kt2 lt mi_idx1 ml t2 t1) NoHashJoin(kt2 lt ml t2 mi_idx1) NoHashJoin(lt ml t2 kt2) NoMergeJoin(it1 kt1 kt2 lt mi_idx1 ml t1 t2 mi_idx2) NoMergeJoin(kt2 lt mi_idx1 ml t2 it1)/*+ NoHashJoin(lt ml t2 kt2) NoHashJoin(kt2 lt ml t2 mi_idx1) NoMergeJoin(kt2 lt mi_idx1 ml t2 it1) NoHashJoin(it1 kt2 lt mi_idx1 ml t2 t1) NoHashJoin(it1 kt2 lt mi_idx1 ml t1 t2 kt1) NoMergeJoin(it1 kt1 kt2 lt mi_idx1 ml t1 t2 mi_idx2) NoHashJoin(it1 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 it2) NoHashJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,118.48,206.63213729858398,270.5814838409424,174.777,206.62474632263184,0.6778924000297523,1.000035770042474,False,1.3095308701235913,"(((((((k mk) t) kt) mi) mi_idx) it2) it1) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(k kt mi mi_idx mk t it2) NoHashJoin(k kt mi mk t mi_idx) NoHashJoin(k kt mk t mi) NoHashJoin(k mk t kt)/*+ NoHashJoin(k mk t kt) NoHashJoin(k kt mk t mi) NoHashJoin(k kt mi mk t mi_idx) NoHashJoin(k kt mi mi_idx mk t it2) NoHashJoin(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,60.887,151.39102935791016,811.4418983459473,107.32,151.3807773590088,0.5673406634364517,1.000067723254433,False,5.360270389030723,"((((((((lt ml) mk) k) mc) cn) t) ct) mi) NoHashJoin(cn k lt mc mk ml t) NoHashJoin(lt mk ml k) NoMergeJoin(cn k lt mc mk ml t ct) NoMergeJoin(k lt mc mk ml cn)/*+ NoHashJoin(lt mk ml k) NoMergeJoin(k lt mc mk ml cn) NoHashJoin(cn k lt mc mk ml t) NoMergeJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_keyword AS mk
on ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,694.359,2671.0431575775146,1125.2858638763428,2639.086,2671.03910446167,0.2631058631662629,1.0000015174303656,False,0.4212914225017071,"(((((((n an) ci) rt) chn) t) mc) cn) NoHashJoin(an chn ci n rt t)/*+ NoHashJoin(an chn ci n rt t) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,181.345,732.5494289398193,733.5596084594727,678.114,732.5458526611328,0.26742553611929554,1.0000048819861223,False,1.0013838803327562,"(((((((k mk) ml) lt) mc) cn) t) ct) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(cn k lt mc mk ml t) NoHashJoin(k lt mc mk ml cn)/*+ NoHashJoin(k lt mc mk ml cn) NoHashJoin(cn k lt mc mk ml t) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,630.494,2067.7337646484375,1594.9420928955078,1716.01,2067.721128463745,0.3674186047866854,1.0000061111648562,False,0.7713526117907892,"(((((((((((((k mk) cc) cct1) cct2) t) mi) mi_idx) it2) mc) kt) cn) it1) ct) NoHashJoin(cc cct1 cct2 k mk t mi) NoMergeJoin(cc cct1 cct2 cn it2 k kt mc mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk t it2)/*+ NoHashJoin(cc cct1 cct2 k mk t mi) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(cc cct1 cct2 cn it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,4714.188,4133.408784866333,5115.343809127808,4100.673,4133.400440216064,1.149613246411016,1.0000020188342236,False,1.237563087127463,"(((((((n an) ci) rt) chn) mc) cn) t) NoMergeJoin(an chn ci mc n rt cn) NoMergeJoin(an chn ci n rt mc)/*+ NoMergeJoin(an chn ci n rt mc) NoMergeJoin(an chn ci mc n rt cn) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id;","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,30.821,374.6674060821533,915.1854515075684,47.789,374.65834617614746,0.6449392119525414,1.00002418178081,False,2.4427200430690243,"(((((((((((((ml lt) mi_idx2) it2) mi_idx1) t2) kt2) it1) t1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it2 lt mi_idx2 ml mi_idx1) NoHashJoin(lt mi_idx2 ml it2) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(it2 lt mi_idx1 mi_idx2 ml t2 kt2) NoMergeJoin(lt ml mi_idx2)/*+ NoMergeJoin(lt ml mi_idx2) NoHashJoin(lt mi_idx2 ml it2) NoHashJoin(it2 lt mi_idx2 ml mi_idx1) NoMergeJoin(it2 lt mi_idx1 mi_idx2 ml t2 kt2) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from movie_link AS ml
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join movie_info_idx AS mi_idx2
on ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.5'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join title AS t2
on t2.id = mi_idx2.movie_id AND t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,10426.822,4021.894693374634,10883.105278015137,3982.514,4021.876096725464,2.618150745986078,1.0000046238742126,False,2.7059772644104965,"((((((((it miidx) t) kt) mi) it2) mc) ct) cn) NoHashJoin(it miidx) NoNestLoop(it it2 kt mc mi miidx t ct) NoNestLoop(it kt mi miidx t it2)/*+ NoHashJoin(it miidx) NoNestLoop(it kt mi miidx t it2) NoNestLoop(it it2 kt mc mi miidx t ct) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info AS mi
on mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,139.807,293.1485176086426,1011.293888092041,201.473,293.1368350982666,0.6939242479141124,1.0000398534369523,False,3.4499038230832735,"(((((((((((k mk) cc) cct2) t) kt) cct1) mi_idx) it2) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn)/*+ NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '8.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,150.745,1343.7256813049316,554.5096397399902,1309.807,1343.7223434448242,0.11508947501425783,1.0000024840400428,False,0.4126668299035838,"((((((((t kt) miidx) it) mc) ct) cn) mi) it2) NoHashJoin(cn ct it kt mc mi miidx t it2) NoHashJoin(cn ct it kt mc miidx t mi) NoMergeJoin(ct it kt mc miidx t cn) NoMergeJoin(it kt mc miidx t ct) NoMergeJoin(kt miidx t it) NoMergeJoin(kt t miidx)/*+ NoMergeJoin(kt t miidx) NoMergeJoin(kt miidx t it) NoMergeJoin(it kt mc miidx t ct) NoMergeJoin(ct it kt mc miidx t cn) NoHashJoin(cn ct it kt mc miidx t mi) NoHashJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,689.084,10208.66060256958,1400.1336097717285,10157.513,10208.64725112915,0.06783983441616072,1.0000013078559873,False,0.13715172787627308,"(((((((((n an) ci) mi) chn) rt) it) mc) cn) t) NoHashJoin(an chn ci cn it mc mi n rt t) NoHashJoin(an chn ci it mc mi n rt cn) NoHashJoin(an chn ci mi n rt) NoHashJoin(an ci n mi) NoMergeJoin(an chn ci mi n rt it)/*+ NoHashJoin(an ci n mi) NoHashJoin(an chn ci mi n rt) NoMergeJoin(an chn ci mi n rt it) NoHashJoin(an chn ci it mc mi n rt cn) NoHashJoin(an chn ci cn it mc mi n rt t) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,1.699,229.28237915039062,268.73183250427246,208.296,229.2783260345459,0.00815666167377194,1.0000176777103829,False,1.1720769125982802,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,4951.44,6674.774408340454,5507.2760581970215,6644.501,6674.762725830078,0.7451936571309117,1.000001750251036,False,0.8250894128243537,"((((((mi_idx it2) mi) ci) n) t) it1) NoHashJoin(ci it2 mi mi_idx n t) NoHashJoin(it2 mi_idx mi) NoMergeJoin(mi_idx it2)/*+ NoMergeJoin(mi_idx it2) NoHashJoin(it2 mi_idx mi) NoHashJoin(ci it2 mi mi_idx n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,9466.424,9771.304845809937,9783.685684204102,9752.614,9771.30103111267,0.9706550469443374,1.0000003903980907,False,1.0012674518011466,"((((((k mk) t) ci) n) mc) cn)/*+  */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,337.048,2660.7658863067627,885.7619762420654,2616.249,2660.7518196105957,0.12882871622693406,1.0000052867374039,False,0.33289913388904413,"(((((((((n ci) cc) mk) cct1) cct2) chn) k) t) kt) NoHashJoin(cc cct1 cct2 chn ci k mk n t kt) NoHashJoin(cc cct1 cct2 chn ci k mk n t) NoHashJoin(cc cct1 cct2 chn ci mk n k) NoHashJoin(cc cct1 cct2 ci mk n chn) NoHashJoin(cc cct1 ci mk n cct2) NoHashJoin(cc ci mk n cct1)/*+ NoHashJoin(cc ci mk n cct1) NoHashJoin(cc cct1 ci mk n cct2) NoHashJoin(cc cct1 cct2 ci mk n chn) NoHashJoin(cc cct1 cct2 chn ci mk n k) NoHashJoin(cc cct1 cct2 chn ci k mk n t) NoHashJoin(cc cct1 cct2 chn ci k mk n t kt) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join complete_cast AS cc
on ci.movie_id = cc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,578.553,859.5163822174072,1032.6244831085205,829.482,859.513521194458,0.6974871064109891,1.0000033286538008,False,1.2014057459776686,"(((((((k mk) t) mi) mi_idx) it2) kt) it1) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(k mi mi_idx mk t it2) NoHashJoin(k mi mk t mi_idx) NoHashJoin(k mk t mi)/*+ NoHashJoin(k mk t mi) NoHashJoin(k mi mk t mi_idx) NoHashJoin(k mi mi_idx mk t it2) NoHashJoin(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,35.105,61.73849105834961,442.11268424987793,38.339,61.72513961791992,0.9156472521453349,1.0002163047424815,False,7.162603227575764,"((((k mk) t) ci) n) NoMergeJoin(ci k mk t n)/*+ NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,16517.018,20913.00058364868,17012.279987335205,20876.243,20912.993907928467,0.7911872840338178,1.0000003192139895,False,0.8134789338261875,"(((((((k mk) t) mc) cn) ci) n) an) NoHashJoin(ci cn k mc mk t n) NoHashJoin(k mk t) NoMergeJoin(k mc mk t cn)/*+ NoHashJoin(k mk t) NoMergeJoin(k mc mk t cn) NoHashJoin(ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,910.354,2045.5262660980225,1284.163236618042,2012.594,2045.5231666564941,0.45232868626260436,1.0000015152316917,False,0.6277920766436825,"(((((((it2 mi_idx) t) mi) mc) ct) it1) cn) NoHashJoin(ct it1 it2 mc mi mi_idx t cn) NoHashJoin(it2 mi_idx t mi) NoHashJoin(it2 mi_idx) NoMergeJoin(ct it2 mc mi mi_idx t it1) NoMergeJoin(it2 mc mi mi_idx t ct)/*+ NoHashJoin(it2 mi_idx) NoHashJoin(it2 mi_idx t mi) NoMergeJoin(it2 mc mi mi_idx t ct) NoMergeJoin(ct it2 mc mi mi_idx t it1) NoHashJoin(ct it1 it2 mc mi mi_idx t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join movie_companies AS mc
on mc.movie_id = mi.movie_id AND mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,37.525,203.55844497680664,716.4807319641113,74.068,203.55486869812012,0.5066290435815737,1.000017569113966,False,3.5198408004019814,"(((((((((((lt ml) cc) cct1) cct2) mk) k) t) mc) cn) ct) mi) NoHashJoin(cc cct1 cct2 lt mk ml k) NoMergeJoin(cc cct1 cct2 cn k lt mc mk ml t ct) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn)/*+ NoHashJoin(cc cct1 cct2 lt mk ml k) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoMergeJoin(cc cct1 cct2 cn k lt mc mk ml t ct) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,3598.775,4402.710914611816,3953.4904956817627,4376.881,4402.708053588867,0.8222236336788685,1.0000006498325382,False,0.8979678978393935,"((((((rt ci) n1) t) mc) cn) an1) NoHashJoin(ci n1 rt t) NoMergeJoin(ci mc n1 rt t cn) NoMergeJoin(ci n1 rt t mc) NoMergeJoin(ci rt n1) NoMergeJoin(rt ci)/*+ NoMergeJoin(rt ci) NoMergeJoin(ci rt n1) NoHashJoin(ci n1 rt t) NoMergeJoin(ci n1 rt t mc) NoMergeJoin(ci mc n1 rt t cn) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join name AS n1
on n1.id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join aka_name AS an1
on an1.person_id = ci.person_id AND an1.person_id = n1.id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,5012.723,5814.099073410034,5332.489967346191,5792.294,5814.095735549927,0.8654123910146826,1.0000005740978923,False,0.9171658345322753,"((((k mk) t) ci) n) NoMergeJoin(ci k mk t n)/*+ NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,42.795,990.6020164489746,269.1047191619873,964.729,990.5991554260254,0.04435960772403442,1.0000028881742262,False,0.2716585388630317,"((((cn mc) mk) k) t) NoHashJoin(cn k mc mk t) NoHashJoin(cn mc mk k)/*+ NoHashJoin(cn mc mk k) NoHashJoin(cn k mc mk t) */ select min(t.title) AS movie_title
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,4063.628,7356.935262680054,4418.577194213867,7322.837,7356.928825378418,0.554925365674533,1.000000874998493,False,0.6006007804468041,"((((((n ci) mk) t) k) mc) cn) NoHashJoin(ci mk n t) NoMergeJoin(ci mk n t k)/*+ NoHashJoin(ci mk n t) NoMergeJoin(ci mk n t k) */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ci.movie_id = t.id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,7037.861,6437.6325607299805,7371.320724487305,6411.656,6437.628269195557,1.0976666558530277,1.0000006666328412,False,1.1450367148037304,"((((((rt ci) n1) t) mc) cn) a1) NoHashJoin(ci n1 rt t) NoMergeJoin(ci mc n1 rt t cn) NoMergeJoin(ci n1 rt t mc) NoMergeJoin(ci rt n1) NoMergeJoin(rt ci)/*+ NoMergeJoin(rt ci) NoMergeJoin(ci rt n1) NoHashJoin(ci n1 rt t) NoMergeJoin(ci n1 rt t mc) NoMergeJoin(ci mc n1 rt t cn) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'writer'
inner join name AS n1
on n1.id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join aka_name AS a1
on a1.person_id = ci.person_id AND a1.person_id = n1.id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,4412.128,3383.794069290161,4951.072454452515,3263.655,3383.789539337158,1.351897795569691,1.0000013387218532,False,1.4631738755899006,"(((((((((((k mk) cc) cct1) cct2) mi_idx) mi) ci) n) it2) t) it1) NoHashJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n t it1) NoHashJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n t) NoHashJoin(cc cct1 cct2 ci k mi mi_idx mk n) NoMergeJoin(cc cct1 cct2 ci k mi mi_idx mk n it2) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk ci) NoMergeJoin(cc cct1 cct2 k mi_idx mk mi) NoMergeJoin(cc cct1 cct2 k mk mi_idx) NoMergeJoin(cc cct1 k mk cct2) NoMergeJoin(cc k mk cct1)/*+ NoMergeJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mk cct2) NoMergeJoin(cc cct1 cct2 k mk mi_idx) NoMergeJoin(cc cct1 cct2 k mi_idx mk mi) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk ci) NoHashJoin(cc cct1 cct2 ci k mi mi_idx mk n) NoMergeJoin(cc cct1 cct2 ci k mi mi_idx mk n it2) NoHashJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n t) NoHashJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,101.396,169.86799240112305,357.18321800231934,156.806,169.86393928527832,0.6466334196395546,1.0000238609551961,False,2.102760712516194,"((((k mk) t) mi_idx) it) NoMergeJoin(k mi_idx mk t it)/*+ NoMergeJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,27.814,50.904035568237305,388.1363868713379,25.731,50.89402198791504,1.08095293614706,1.0001967535661584,False,7.626364977865224,"((((mk t) k) ci) n) NoHashJoin(mk t k) NoMergeJoin(ci k mk t n)/*+ NoHashJoin(mk t k) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,64.005,216.31956100463867,645.6198692321777,187.253,216.31550788879395,0.3418102780729815,1.0000187370562763,False,2.984621285516366,"(((((((it2 mi_idx) mc) cn) t) ct) mi) it1) NoHashJoin(cn ct it2 mc mi_idx t mi) NoHashJoin(cn it2 mc mi_idx t) NoHashJoin(it2 mi_idx)/*+ NoHashJoin(it2 mi_idx) NoHashJoin(cn it2 mc mi_idx t) NoHashJoin(cn ct it2 mc mi_idx t mi) */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,3942.619,6127.151250839233,4165.078163146973,6087.617,6127.148866653442,0.6476457043864619,1.0000003891183065,False,0.6797742724703663,"((((k mk) t) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,84.514,531.1763286590576,846.3313579559326,369.648,531.1541557312012,0.22863372722157294,1.0000417448072603,False,1.593381787234348,"(((((((((((k mk) t) mc) cn) mi) ci) chn) rt) an) it) n) NoHashJoin(k mk t) NoMergeJoin(an chn ci cn it k mc mi mk rt t n) NoMergeJoin(an chn ci cn k mc mi mk rt t it) NoMergeJoin(chn ci cn k mc mi mk t rt) NoMergeJoin(k mc mk t cn)/*+ NoHashJoin(k mk t) NoMergeJoin(k mc mk t cn) NoMergeJoin(chn ci cn k mc mi mk t rt) NoMergeJoin(an chn ci cn k mc mi mk rt t it) NoMergeJoin(an chn ci cn it k mc mi mk rt t n) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,19.035,34.46316719055176,365.3218746185303,15.677,34.45911407470703,1.214199145244626,1.000117621011264,False,10.601603797083,"((((mk t) k) ci) n) NoHashJoin(mk t k) NoMergeJoin(ci k mk t n)/*+ NoHashJoin(mk t k) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,196.383,1418.398141860962,603.5041809082031,1387.02,1418.391466140747,0.1415862784963447,1.000004706542851,False,0.42548492099311414,"((((((((t kt) miidx) it) mc) ct) cn) mi) it2) NoHashJoin(cn ct it kt mc mi miidx t it2) NoHashJoin(cn ct it kt mc miidx t mi) NoMergeJoin(ct it kt mc miidx t cn) NoMergeJoin(it kt mc miidx t ct) NoMergeJoin(kt miidx t it) NoMergeJoin(kt t miidx)/*+ NoMergeJoin(kt t miidx) NoMergeJoin(kt miidx t it) NoMergeJoin(it kt mc miidx t ct) NoMergeJoin(ct it kt mc miidx t cn) NoHashJoin(cn ct it kt mc miidx t mi) NoHashJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,7062.764,7628.956317901611,7630.404472351074,7592.011,7628.945827484131,0.930288957695135,1.0000013750808718,False,1.0001911987448762,"((((((k mk) t) ci) n) mc) cn)/*+  */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'Z%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,201.484,256.9165229797363,805.6647777557373,171.25,256.9127082824707,1.176548905109489,1.0000148482233173,False,3.135947548651132,"((((((((((cn mc) mi_idx) mk) k) mi) ci) n) it2) it1) t) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk n t) NoHashJoin(ci cn it2 k mc mi mi_idx mk n it1) NoHashJoin(ci cn k mc mi mi_idx mk n it2) NoHashJoin(ci cn k mc mi mi_idx mk n) NoHashJoin(cn k mc mi mi_idx mk ci) NoHashJoin(cn k mc mi_idx mk mi) NoHashJoin(cn mc mi_idx mk k) NoHashJoin(cn mc mi_idx mk) NoMergeJoin(cn mc mi_idx)/*+ NoMergeJoin(cn mc mi_idx) NoHashJoin(cn mc mi_idx mk) NoHashJoin(cn mc mi_idx mk k) NoHashJoin(cn k mc mi_idx mk mi) NoHashJoin(cn k mc mi mi_idx mk ci) NoHashJoin(ci cn k mc mi mi_idx mk n) NoHashJoin(ci cn k mc mi mi_idx mk n it2) NoHashJoin(ci cn it2 k mc mi mi_idx mk n it1) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,179.174,2152.120351791382,1246.706485748291,1792.402,2152.116298675537,0.09996306632105967,1.000001883316365,False,0.5792932689165281,"(((((((((((((k mk) cc) cct1) t) mi) cct2) mi_idx) it2) kt) mc) cn) it1) ct) NoHashJoin(cc cct1 k mk t mi) NoHashJoin(cc k mk cct1) NoMergeJoin(cc cct1 cct2 cn it2 k kt mc mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 k mi mk t mi_idx)/*+ NoHashJoin(cc k mk cct1) NoHashJoin(cc cct1 k mk t mi) NoMergeJoin(cc cct1 cct2 k mi mk t mi_idx) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(cc cct1 cct2 cn it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,177.827,470.1862335205078,625.3542900085449,429.494,470.17669677734375,0.4140383800472183,1.000020283317377,False,1.3300410128677365,"((((((((t mi_idx) mk) k) mi) ci) n) it2) it1) NoHashJoin(ci it2 k mi mi_idx mk n t it1) NoHashJoin(ci k mi mi_idx mk t n) NoHashJoin(mi_idx mk t k) NoHashJoin(t mi_idx) NoMergeJoin(ci k mi mi_idx mk n t it2) NoMergeJoin(k mi mi_idx mk t ci) NoMergeJoin(k mi_idx mk t mi)/*+ NoHashJoin(t mi_idx) NoHashJoin(mi_idx mk t k) NoMergeJoin(k mi_idx mk t mi) NoMergeJoin(k mi mi_idx mk t ci) NoHashJoin(ci k mi mi_idx mk t n) NoMergeJoin(ci k mi mi_idx mk n t it2) NoHashJoin(ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info = 'Horror'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,424.593,7953.134298324585,849.6232032775879,7926.64,7953.121662139893,0.053565318975000754,1.0000015888333198,False,0.1068288955420035,"((((((n ci) mk) t) k) mc) cn) NoHashJoin(ci mk n t) NoMergeJoin(ci mk n t k)/*+ NoHashJoin(ci mk n t) NoMergeJoin(ci mk n t k) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ci.movie_id = t.id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,860.221,966.7830467224121,1167.212724685669,945.158,966.7785167694092,0.9101346018337675,1.0000046856161202,False,1.2073217437495731,"((((k mk) t) mc) cn)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,139.536,248.42262268066406,580.0621509552002,221.97,248.40927124023438,0.6286254899310718,1.0000537477541116,False,2.3351066892919117,"((((((t mc) cn) ci) an) n) rt) NoHashJoin(an ci cn mc n t rt) NoMergeJoin(mc t cn)/*+ NoMergeJoin(mc t cn) NoHashJoin(an ci cn mc n t rt) */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%') AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mc.movie_id AND ci.note = '(voice: English version)'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,29.001,169.29960250854492,719.9485301971436,17.057,169.2960262298584,1.7002403705223663,1.000021124410101,False,4.25260147110392,"(((((((((((lt ml) t) mk) k) mc) ct) mi) cn) cc) cct2) cct1) NoHashJoin(ct k lt mc mk ml t mi) NoHashJoin(k lt mc mk ml t ct) NoHashJoin(lt mk ml t k)/*+ NoHashJoin(lt mk ml t k) NoHashJoin(k lt mc mk ml t ct) NoHashJoin(ct k lt mc mk ml t mi) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998
inner join movie_keyword AS mk
on t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join complete_cast AS cc
on t.id = cc.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,3781.135,5129.038572311401,4104.59566116333,5068.25,5129.035711288452,0.746043506141173,1.0000005578091302,False,0.800266539796079,"((((((rt ci) chn) t) mc) ct) cn)/*+  */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND ci.note like '%(producer)%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,303.135,186.48123741149902,722.8050231933594,162.144,186.46931648254395,1.8695418886915334,1.0000639297080074,False,3.8762678859340576,"(((((mk k) t1) ml) lt) t2) NoHashJoin(k mk t1)/*+ NoHashJoin(k mk t1) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from movie_keyword AS mk
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,3352.018,2302.3152351379395,3925.9889125823975,2232.44,2302.311420440674,1.5015041837630574,1.0000016568989025,False,1.7052379959227861,"(((((((ci t) mc) cn) chn) rt) an) n) NoHashJoin(chn ci cn mc t rt) NoMergeJoin(an chn ci cn mc rt t n)/*+ NoHashJoin(chn ci cn mc t rt) NoMergeJoin(an chn ci cn mc rt t n) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from cast_info AS ci
inner join title AS t
on ci.movie_id = t.id AND ci.note = '(voice)' AND t.production_year BETWEEN 2007 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
