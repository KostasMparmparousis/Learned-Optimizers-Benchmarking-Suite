filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
2a.sql,897.92,728.7945747375488,1171.5288162231445,718.593,728.7845611572266,1.2495529458260797,1.000013740110392,False,1.6075104751984464,"((((k mk) t) mc) cn) NoMergeJoin(k mc mk t cn)/*+ NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
1a.sql,15.927,235.28456687927246,291.6734218597412,219.693,235.2757453918457,0.07249662028375961,1.000037494249193,False,1.239708841954646,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND ( mc.note like '%(co-production)%' OR mc.note like '%(presents)%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
5a.sql,278.711,295.032262802124,555.5706024169922,275.201,295.0279712677002,1.0127543141194981,1.0000145461950791,False,1.8831116250766706,"((((ct mc) t) mi) it) NoHashJoin(ct mc mi t it) NoHashJoin(ct mc t mi) NoHashJoin(ct mc)/*+ NoHashJoin(ct mc) NoHashJoin(ct mc t mi) NoHashJoin(ct mc mi t it) */ select min(t.title) AS typical_european_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note like '%(theatrical)%' AND mc.note like '%(France)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
18a.sql,842.514,5029.191255569458,1185.4932308197021,5002.012,5029.186964035034,0.16843502174724892,1.0000008533256874,False,0.23572264051773356,"((((((n ci) t) mi) it1) mi_idx) it2) NoHashJoin(ci it1 mi n t mi_idx) NoNestLoop(ci it1 mi mi_idx n t it2)/*+ NoHashJoin(ci it1 mi n t mi_idx) NoNestLoop(ci it1 mi mi_idx n t it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'm' AND n.name like '%Tim%' AND ci.note IN ('(producer)',
'(executive producer)')
inner join title AS t
on t.id = ci.movie_id
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'budget'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 'ci'), (3, 'n'), (4, 't')]"
19a.sql,592.177,503.6759376525879,1050.7707595825195,471.569,503.67236137390137,1.2557589663442676,1.0000071004068534,False,2.0862188203384053,"(((((((((n ci) mc) t) cn) chn) an) mi) rt) it) NoHashJoin(an chn ci cn mc mi n rt t it) NoHashJoin(an chn ci cn mc n t mi) NoHashJoin(chn ci cn mc n t an) NoHashJoin(ci cn mc n t chn) NoMergeJoin(ci mc n t cn)/*+ NoMergeJoin(ci mc n t cn) NoHashJoin(ci cn mc n t chn) NoHashJoin(chn ci cn mc n t an) NoHashJoin(an chn ci cn mc n t mi) NoHashJoin(an chn ci cn mc mi n rt t it) */ select min(n.name) AS voicing_actress,
min(t.title) AS voiced_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year BETWEEN 2005 AND 2009
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn'), (6, 'mi'), (7, 'it')]"
17a.sql,4057.582,10497.05457687378,4548.712968826294,10479.73,10497.046709060669,0.3871838301177607,1.0000007495263505,False,0.43333264058928217,"((((((k mk) t) ci) n) mc) cn) NoMergeJoin(ci k mk n t mc) NoNestLoop(ci k mk t n)/*+ NoNestLoop(ci k mk t n) NoMergeJoin(ci k mk n t mc) */ select min(n.name) AS member_in_charnamed_american_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
7a.sql,103.736,686.9869232177734,254.83393669128418,670.652,686.9781017303467,0.15467932698329387,1.0000128410023617,False,0.3709491409542947,"(((((((it pi) an) n) ci) t) ml) lt) NoHashJoin(an ci it n pi t ml) NoHashJoin(an it pi n) NoHashJoin(it pi an) NoMergeJoin(an ci it n pi t) NoMergeJoin(an it n pi ci)/*+ NoHashJoin(it pi an) NoHashJoin(an it pi n) NoMergeJoin(an it n pi ci) NoMergeJoin(an ci it n pi t) NoHashJoin(an ci it n pi t ml) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name like '%a%'
inner join name AS n
on n.id = an.person_id AND n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'B%'))
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1995
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id AND ml.linked_movie_id = t.id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
31a.sql,224.793,456.27570152282715,835.7563018798828,376.879,456.2711715698242,0.59645934106172,1.0000099282034132,False,1.831709636627755,"((((((((((cn mc) mi) it1) mi_idx) it2) t) ci) n) mk) k) NoHashJoin(cn mc mi it1) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk n t k) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk)/*+ NoHashJoin(cn mc mi it1) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk n t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'ci'), (4, 'n'), (5, 't'), (6, 'mk'), (7, 'k'), (8, 'it1')]"
27a.sql,30.556,144.1812515258789,1064.7804737091064,29.648,144.1650390625,1.030626011872639,1.0001124576629974,False,7.385843895533446,"(((((((((((lt ml) cc) cct2) t) mc) cn) ct) mk) k) cct1) mi) NoHashJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) NoHashJoin(cc cct2 cn ct lt mc mk ml t k) NoMergeJoin(cc cct2 cn ct k lt mc mk ml t cct1)/*+ NoHashJoin(cc cct2 cn ct lt mc mk ml t k) NoMergeJoin(cc cct2 cn ct k lt mc mk ml t cct1) NoHashJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
13a.sql,1763.133,1938.1816387176514,2161.588191986084,1925.491,1938.1771087646484,0.9156796889728387,1.0000023372234572,False,1.1152686626062944,"((((((((miidx it) mc) cn) t) kt) ct) mi) it2) NoHashJoin(miidx it)/*+ NoHashJoin(miidx it) */ select min(mi.info) AS release_date,
min(miidx.info) AS rating,
min(t.title) AS german_movie
from movie_info_idx AS miidx
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]'
inner join title AS t
on mc.movie_id = t.id AND miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
15a.sql,415.572,453.17983627319336,1272.7911472320557,437.473,453.16481590270996,0.9499374818560231,1.0000331454913451,False,2.8086715971023475,"((((((((it1 mi) at) t) mc) ct) cn) mk) k) NoHashJoin(it1 mi) NoMergeJoin(at cn ct it1 mc mi mk t k)/*+ NoHashJoin(it1 mi) NoMergeJoin(at cn ct it1 mc mi mk t k) */ select min(mi.info) AS release_date,
min(t.title) AS internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join title AS t
on t.id = at.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mi.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id;","[('mc', 'cn'), (0, 'at'), (1, 't'), (2, 'mi'), (3, 'ct'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
12a.sql,280.787,261.1265182495117,665.3778553009033,251.718,261.1217498779297,1.1154824049134349,1.0000182611045776,False,2.5481517936056917,"(((((((it2 mi_idx) t) mc) cn) mi) it1) ct) NoHashJoin(it2 mi_idx) NoNestLoop(cn it1 it2 mc mi mi_idx t ct)/*+ NoHashJoin(it2 mi_idx) NoNestLoop(cn it1 it2 mc mi mi_idx t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS drama_horror_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '8.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2008
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Drama',
'Horror')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it2'), (0, 'mc'), (1, 'ct'), (2, 't'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
10a.sql,486.356,315.86217880249023,1017.8115367889404,300.272,315.8586025238037,1.6197181222358394,1.0000113224039426,False,3.2223644651636048,"((((((cn mc) t) ci) rt) chn) ct) NoHashJoin(chn ci cn mc rt t ct) NoHashJoin(ci cn mc t rt)/*+ NoHashJoin(ci cn mc t rt) NoHashJoin(chn ci cn mc rt t ct) */ select min(chn.name) AS uncredited_voiced_character,
min(t.title) AS russian_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(voice)%' AND ci.note like '%(uncredited)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
25a.sql,3744.056,2202.3391723632812,4138.106346130371,2185.28,2202.335834503174,1.7133072192121832,1.0000015155999622,False,1.8789624549081947,"((((((((mi_idx it2) mi) mk) k) it1) t) ci) n) NoHashJoin(mi_idx it2) NoMergeJoin(it2 mi mi_idx mk)/*+ NoHashJoin(mi_idx it2) NoMergeJoin(it2 mi mi_idx mk) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.info = 'Horror'
inner join movie_keyword AS mk
on mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), (3, 'ci'), (4, 'it1'), (5, 'n'), (6, 't')]"
3a.sql,131.777,112.4885082244873,468.25504302978516,107.535,112.47754096984863,1.2254335797647278,1.0000975061736246,False,4.1630981526819495,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29a.sql,74.843,3017.1186923980713,894.2651748657227,179.787,3017.11368560791,0.41628705078787676,1.0000016594635412,False,0.29639757332695255,"((((((((((((((((k mk) cc) cct2) t) mc) cct1) ci) chn) an) mi) pi) it3) rt) n) it) cn) NoHashJoin(an cc cct1 cct2 chn ci k mc mk t mi) NoMergeJoin(an cc cct1 cct2 chn ci k mc mi mk t pi)/*+ NoHashJoin(an cc cct1 cct2 chn ci k mc mk t mi) NoMergeJoin(an cc cct1 cct2 chn ci k mc mi mk t pi) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
11a.sql,46.994,66.67947769165039,739.4566535949707,58.542,66.67184829711914,0.8027399132246934,1.0001144320238018,False,11.090987762925455,"(((((((lt ml) t) mc) cn) mk) k) ct) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(cn lt mc ml t mk)/*+ NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(cn lt mc mk ml t k) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS non_polish_sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
28a.sql,427.492,4252.472400665283,1085.5977535247803,4058.65,4252.469539642334,0.1053286191221219,1.000000672790933,False,0.25528642672325585,"(((((((((((((k mk) cc) t) mi_idx) it2) mi) it1) cct2) mc) cct1) cn) kt) ct) NoHashJoin(cc it2 k mi_idx mk t mi) NoHashJoin(cc k mi_idx mk t it2) NoHashJoin(cc k mk t mi_idx) NoMergeJoin(cc cct1 cct2 it1 it2 k mc mi mi_idx mk t cn) NoNestLoop(cc cct1 cct2 cn it1 it2 k mc mi mi_idx mk t kt) NoNestLoop(cc cct2 it1 it2 k mc mi mi_idx mk t cct1) NoNestLoop(cc it2 k mi mi_idx mk t it1) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) NoHashJoin(cc k mk t mi_idx) NoHashJoin(cc k mi_idx mk t it2) NoHashJoin(cc it2 k mi_idx mk t mi) NoNestLoop(cc it2 k mi mi_idx mk t it1) NoNestLoop(cc cct2 it1 it2 k mc mi mi_idx mk t cct1) NoMergeJoin(cc cct1 cct2 it1 it2 k mc mi mi_idx mk t cn) NoNestLoop(cc cct1 cct2 cn it1 it2 k mc mi mi_idx mk t kt) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
32a.sql,24.844,19.92344856262207,462.5680446624756,11.844,19.92011070251465,2.097602161431949,1.0001675623272013,False,23.221158334430466,"(((((k mk) t1) ml) lt) t2)/*+  */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = '10,000-mile-club'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
30a.sql,1032.292,1785.2816581726074,1574.6941566467285,1723.827,1785.2699756622314,0.5988373543284795,1.0000065438340056,False,0.882048193334237,"(((((((((((k mk) cc) cct2) mi_idx) t) mi) it1) ci) n) cct1) it2) NoHashJoin(cc cct2 ci it1 k mi mi_idx mk t n) NoHashJoin(cc cct2 it1 k mi mi_idx mk t ci) NoHashJoin(cc cct2 k mi mi_idx mk t it1) NoHashJoin(cc cct2 k mi_idx mk t mi) NoHashJoin(cc cct2 k mk mi_idx) NoMergeJoin(cc cct2 ci it1 k mi mi_idx mk n t cct1) NoMergeJoin(cc cct2 k mi_idx mk t) NoMergeJoin(cc k mk cct2)/*+ NoMergeJoin(cc k mk cct2) NoHashJoin(cc cct2 k mk mi_idx) NoMergeJoin(cc cct2 k mi_idx mk t) NoHashJoin(cc cct2 k mi_idx mk t mi) NoHashJoin(cc cct2 k mi mi_idx mk t it1) NoHashJoin(cc cct2 it1 k mi mi_idx mk t ci) NoHashJoin(cc cct2 ci it1 k mi mi_idx mk t n) NoMergeJoin(cc cct2 ci it1 k mi mi_idx mk n t cct1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 't'), (4, 'ci'), (5, 'mi'), (6, 'cct1'), (7, 'it1'), (8, 'n'), (9, 'cct2')]"
4a.sql,93.73,92.63134002685547,317.95406341552734,78.473,92.62704849243164,1.1944235596956916,1.0000463313307904,False,3.4326265231425,"((((k mk) t) mi_idx) it)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '5.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
26a.sql,360.755,1246.1967468261719,1246.1633682250977,1202.641,1246.1814880371094,0.29996898492567603,1.0000122444356692,False,0.9999854597326427,"(((((((((((k mk) cc) t) mi_idx) kt) cct2) it2) cct1) ci) chn) n) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(n.name) AS playing_actor,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '7.0'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), ('it2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
33a.sql,28.531,348.1485843658447,722.8977680206299,41.933,348.1450080871582,0.6803949156988529,1.0000102723824942,False,2.0764272105824713,"(((((((((((((lt ml) t2) mi_idx2) it2) kt2) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoMergeJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it2 lt mi_idx2 ml t2 kt2) NoMergeJoin(lt mi_idx2 ml t2 it2) NoMergeJoin(lt ml t2 mi_idx2)/*+ NoMergeJoin(lt ml t2 mi_idx2) NoMergeJoin(lt mi_idx2 ml t2 it2) NoMergeJoin(it2 lt mi_idx2 ml t2 kt2) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2005 AND 2008
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[us]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc2'), (7, 't2'), (8, 'mc1'), (9, 'cn1'), (10, 'cn2'), (11, 'kt2')]"
21a.sql,95.986,128.46064567565918,809.6647262573242,103.602,128.45635414123535,0.9264879056388873,1.0000334085024638,False,6.3030336776265115,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoMergeJoin(cn lt mc mi mk ml t k) NoMergeJoin(cn lt mc mi ml t mk) NoNestLoop(cn k lt mc mi mk ml t ct)/*+ NoMergeJoin(cn lt mc mi ml t mk) NoMergeJoin(cn lt mc mi mk ml t k) NoNestLoop(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
8a.sql,470.675,1283.9255332946777,777.1580219268799,1262.888,1283.9221954345703,0.3726973413319313,1.0000025997370552,False,0.6052999353779647,"((((((ci n1) t) an1) rt) mc) cn) NoHashJoin(an1 ci mc n1 rt t cn) NoHashJoin(ci n1)/*+ NoHashJoin(ci n1) NoHashJoin(an1 ci mc n1 rt t cn) */ select min(an1.name) AS actress_pseudonym,
min(t.title) AS japanese_movie_dubbed
from cast_info AS ci
inner join name AS n1
on n1.id = ci.person_id AND ci.note = '(voice: English version)' AND n1.name like '%Yo%' AND n1.name not like '%Yu%'
inner join title AS t
on ci.movie_id = t.id
inner join aka_name AS an1
on an1.person_id = n1.id AND an1.person_id = ci.person_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]';","[('mc', 'cn'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'an1'), (4, 'n1')]"
16a.sql,365.75,248.57687950134277,986.727237701416,226.202,248.5663890838623,1.6169176223021902,1.0000422036845735,False,3.969672815935344,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 50 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
9a.sql,400.548,639.9834156036377,753.1192302703857,625.903,639.979362487793,0.6399521970656795,1.0000063331977285,False,1.176786744095597,"(((((((n ci) mc) cn) t) chn) rt) an) NoHashJoin(ci mc n cn) NoMergeJoin(chn ci cn mc n rt t an) NoMergeJoin(chn ci cn mc n t rt) NoMergeJoin(ci cn mc n t chn) NoMergeJoin(ci n mc)/*+ NoMergeJoin(ci n mc) NoHashJoin(ci mc n cn) NoMergeJoin(ci cn mc n t chn) NoMergeJoin(chn ci cn mc n t rt) NoMergeJoin(chn ci cn mc n rt t an) */ select min(an.name) AS alternative_name,
min(chn.name) AS character_name,
min(t.title) AS movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.production_year BETWEEN 2005 AND 2015
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'mc'), (4, 'chn'), (5, 'cn')]"
23a.sql,411.582,509.98377799987793,1079.2865753173828,456.271,509.9806785583496,0.9020560149560239,1.0000060775665798,False,2.1163283643772317,"((((((((((it1 mi) mk) cc) cct1) k) mc) cn) t) kt) ct) NoHashJoin(it1 mi) NoMergeJoin(cc cct1 cn it1 k kt mc mi mk t ct) NoMergeJoin(cc cct1 cn it1 k mc mi mk t) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 it1 k mi mk mc) NoNestLoop(cc cct1 cn it1 k mc mi mk t kt)/*+ NoHashJoin(it1 mi) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 cn it1 k mc mi mk t) NoNestLoop(cc cct1 cn it1 k mc mi mk t kt) NoMergeJoin(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('kt', 't'), ('cc', 'cct1'), (0, 1), (2, 'mi'), (3, 'it1'), (4, 'mk'), (5, 'mc'), (6, 'cn'), (7, 'ct'), (8, 'k')]"
14a.sql,249.052,389.07384872436523,923.6252307891846,366.558,389.0643119812012,0.6794340868293695,1.000024511996784,False,2.373965440535734,"(((((((k mk) t) kt) mi_idx) it2) mi) it1) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(it2 k kt mi_idx mk t mi) NoHashJoin(k kt mi_idx mk t it2) NoHashJoin(k kt mk t mi_idx) NoHashJoin(k mk t kt)/*+ NoHashJoin(k mk t kt) NoHashJoin(k kt mk t mi_idx) NoHashJoin(k kt mi_idx mk t it2) NoHashJoin(it2 k kt mi_idx mk t mi) NoHashJoin(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS northern_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
20a.sql,1996.415,1900.0802040100098,2427.6506900787354,1884.45,1900.0756740570068,1.0594152139881663,1.0000023840908363,False,1.2776600022962559,"(((((((((k mk) cc) cct2) cct1) ci) chn) t) kt) n) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 cct2 chn ci k mk t) NoMergeJoin(cc cct1 cct2 ci k mk chn) NoNestLoop(cc cct1 cct2 chn ci k mk t kt) NoNestLoop(cc cct2 k mk cct1) NoNestLoop(cc k mk cct2) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) NoNestLoop(cc k mk cct2) NoNestLoop(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 ci k mk chn) NoMergeJoin(cc cct1 cct2 chn ci k mk t) NoNestLoop(cc cct1 cct2 chn ci k mk t kt) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(t.title) AS complete_downey_ironman_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join cast_info AS ci
on ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 1950
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
6a.sql,721.383,21.325349807739258,1154.3281078338623,14.753,21.311283111572266,48.89737680471769,1.0006600586221557,False,54.165115342447365,"((((mk t) k) ci) n) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t ci) NoMergeJoin(mk t)/*+ NoMergeJoin(mk t) NoMergeJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
22a.sql,349.509,379.78386878967285,1320.4009532928467,351.877,379.77123260498047,0.9932703757278822,1.0000332731486945,False,3.4768324715797085,"((((((((((k mk) t) kt) mi_idx) it2) mc) ct) cn) mi) it1) NoNestLoop(cn ct it2 k kt mc mi mi_idx mk t it1)/*+ NoNestLoop(cn ct it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2008
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
24a.sql,696.603,419.4660186767578,1532.30619430542,353.74,419.44074630737305,1.9692514276021935,1.0000602525377118,False,3.6532125402583584,"(((((((((((n an) ci) chn) t) mi) rt) mc) mk) k) it) cn) NoHashJoin(n an) NoMergeJoin(an chn ci mi n rt t mc) NoMergeJoin(an chn ci n t mi)/*+ NoHashJoin(n an) NoMergeJoin(an chn ci n t mi) NoMergeJoin(an chn ci mi n rt t mc) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS voiced_action_movie_jap_eng
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mi'), ('it', 2), (3, 'ci'), (4, 'mc'), (5, 'cn'), (6, 'an'), (7, 'chn'), (8, 'n'), (9, 'rt')]"
