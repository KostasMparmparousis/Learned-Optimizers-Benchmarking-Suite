filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,511.347,674.3588447570801,920.8333492279053,592.709,674.3576526641846,0.8627285902525523,1.000001767745781,False,1.3654969964231432,"((((((((((cn mc) mi) it1) mi_idx) it2) ci) mk) k) n) t) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk n t) NoHashJoin(cn it1 it2 mc mi mi_idx ci) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk k) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk) NoMergeJoin(cn it1 mc mi mi_idx it2) NoMergeJoin(cn mc mi)/*+ NoMergeJoin(cn mc mi) NoMergeJoin(cn it1 mc mi mi_idx it2) NoHashJoin(cn it1 it2 mc mi mi_idx ci) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk k) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join name AS n
on n.id = ci.person_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id;","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,2197.995,4087.2292518615723,2526.3237953186035,4053.487,4087.2275829315186,0.542247946027704,1.0000004083281442,False,0.6181020616196335,"(((((((it pi) n) an) ci) ml) lt) t) NoHashJoin(an it n pi ci) NoHashJoin(it n pi an) NoNestLoop(an ci it n pi ml)/*+ NoHashJoin(it n pi an) NoHashJoin(an it n pi ci) NoNestLoop(an ci it n pi ml) */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'))
inner join aka_name AS an
on n.id = an.person_id AND pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in')
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010;","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,170.856,305.3240776062012,457.1828842163086,274.653,305.32169342041016,0.6220794966739849,1.0000078087664335,False,1.4973809397381876,"((((((cn mc) t) ci) rt) chn) ct) NoHashJoin(chn ci cn mc rt t ct)/*+ NoHashJoin(chn ci cn mc rt t ct) */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,890.862,1372.5194931030273,1259.5138549804688,1327.554,1372.5178241729736,0.6710551887154872,1.0000012159623899,False,0.9176666654507043,"((((((((it1 mi) at) mk) mc) k) cn) t) ct) NoHashJoin(it1 mi at) NoHashJoin(it1 mi) NoMergeJoin(at cn it1 k mc mi mk t ct) NoMergeJoin(at it1 k mc mi mk cn) NoMergeJoin(at it1 mi mk mc)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi at) NoMergeJoin(at it1 mi mk mc) NoMergeJoin(at it1 k mc mi mk cn) NoMergeJoin(at cn it1 k mc mi mk t ct) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join movie_keyword AS mk
on mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join movie_companies AS mc
on mc.movie_id = at.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,31.292,4159.347057342529,708.439826965332,36.001,4159.344434738159,0.8691980778311714,1.000000630533107,False,0.17032487645133673,"((((((((((((((((k mk) cc) t) cct2) cct1) mi) it) mc) cn) ci) rt) chn) an) n) pi) it3) NoHashJoin(cc cct1 cct2 chn ci cn it k mc mi mk rt t an) NoHashJoin(cc cct1 cct2 ci cn it k mc mi mk rt t chn) NoHashJoin(cc cct1 cct2 ci cn it k mc mi mk t rt) NoHashJoin(cc cct1 cct2 cn it k mc mi mk t ci) NoMergeJoin(an cc cct1 cct2 chn ci cn it k mc mi mk n rt t pi) NoMergeJoin(cc cct1 cct2 it k mc mi mk t cn) NoMergeJoin(cc cct1 cct2 it k mi mk t mc) NoMergeJoin(cc cct1 cct2 k mi mk t it) NoMergeJoin(cc cct2 k mk t cct1) NoMergeJoin(cc k mk t cct2) NoNestLoop(an cc cct1 cct2 chn ci cn it k mc mi mk n pi rt t it3)/*+ NoMergeJoin(cc k mk t cct2) NoMergeJoin(cc cct2 k mk t cct1) NoMergeJoin(cc cct1 cct2 k mi mk t it) NoMergeJoin(cc cct1 cct2 it k mi mk t mc) NoMergeJoin(cc cct1 cct2 it k mc mi mk t cn) NoHashJoin(cc cct1 cct2 cn it k mc mi mk t ci) NoHashJoin(cc cct1 cct2 ci cn it k mc mi mk t rt) NoHashJoin(cc cct1 cct2 ci cn it k mc mi mk rt t chn) NoHashJoin(cc cct1 cct2 chn ci cn it k mc mi mk rt t an) NoMergeJoin(an cc cct1 cct2 chn ci cn it k mc mi mk n rt t pi) NoNestLoop(an cc cct1 cct2 chn ci cn it k mc mi mk n pi rt t it3) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info like 'USA:%200%'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = mi.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join person_info AS pi
on n.id = pi.person_id AND ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,421.997,726.2673377990723,909.1787338256836,585.987,726.2659072875977,0.7201473752830695,1.0000019696800584,False,1.2518537972148724,"(((((((((((k mk) cc) cct2) t) mi_idx) it2) cct1) mi) it1) ci) n) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct2 k mk t mi_idx) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t mi) NoMergeJoin(cc cct2 it2 k mi_idx mk t cct1)/*+ NoHashJoin(cc cct2 k mk t mi_idx) NoMergeJoin(cc cct2 it2 k mi_idx mk t cct1) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t mi) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,7884.836,12675.868511199951,8291.817665100098,12621.243,12675.866842269897,0.62472737431646,1.0000001316620057,False,0.6541420613105196,"(((((((((ci t) chn) rt) mc) cn) an) n) mi) it) NoHashJoin(an chn ci cn mc n rt t mi) NoHashJoin(an chn ci cn mc rt t n) NoHashJoin(ci t) NoMergeJoin(chn ci mc rt t cn) NoMergeJoin(chn ci rt t mc) NoMergeJoin(chn ci t rt) NoNestLoop(chn ci cn mc rt t an)/*+ NoHashJoin(ci t) NoMergeJoin(chn ci t rt) NoMergeJoin(chn ci rt t mc) NoMergeJoin(chn ci mc rt t cn) NoNestLoop(chn ci cn mc rt t an) NoHashJoin(an chn ci cn mc rt t n) NoHashJoin(an chn ci cn mc n rt t mi) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)') AND t.production_year > 2000
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,419.998,791.9332981109619,629.4360160827637,752.763,791.9316291809082,0.5579418754641234,1.0000021074168428,False,0.7948110580376577,"((((mk k) mc) cn) t) NoHashJoin(cn k mc mk t) NoHashJoin(k mc mk cn) NoMergeJoin(k mk mc)/*+ NoMergeJoin(k mk mc) NoHashJoin(k mc mk cn) NoHashJoin(cn k mc mk t) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,408.314,793.2233810424805,769.8049545288086,747.424,793.2217121124268,0.5462950079205378,1.0000021039893743,False,0.9704789250898629,"((((((((it1 mi) at) mc) mk) cn) t) ct) k) NoHashJoin(at cn ct it1 mc mi mk t k) NoHashJoin(at cn it1 mc mi mk t ct) NoHashJoin(it1 mi at) NoHashJoin(it1 mi) NoMergeJoin(at it1 mc mi mk cn) NoMergeJoin(at it1 mi mc)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi at) NoMergeJoin(at it1 mi mc) NoMergeJoin(at it1 mc mi mk cn) NoHashJoin(at cn it1 mc mi mk t ct) NoHashJoin(at cn ct it1 mc mi mk t k) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join movie_companies AS mc
on mc.movie_id = at.movie_id AND mi.movie_id = mc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join keyword AS k
on k.id = mk.keyword_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,59.196,145.34497261047363,500.1187324523926,77.149,145.34354209899902,0.7672944561821928,1.000009842277503,False,3.4409422340329554,"((((((((((k mk) cc) cct1) t) mi) it1) kt) mc) cn) ct) NoHashJoin(cc cct1 cn it1 k kt mc mi mk t ct) NoHashJoin(cc cct1 it1 k kt mi mk t mc) NoMergeJoin(cc cct1 it1 k kt mc mi mk t cn) NoMergeJoin(cc cct1 k mk t mi) NoNestLoop(cc cct1 k mi mk t it1) NoNestLoop(cc k mk cct1) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) NoNestLoop(cc k mk cct1) NoMergeJoin(cc cct1 k mk t mi) NoNestLoop(cc cct1 k mi mk t it1) NoHashJoin(cc cct1 it1 k kt mi mk t mc) NoMergeJoin(cc cct1 it1 k kt mc mi mk t cn) NoHashJoin(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,734.001,826.45583152771,1176.3215065002441,756.62,826.4541625976562,0.9701052047262826,1.0000020193861066,False,1.423335448880683,"((((((((((it1 mi) mk) k) cc) cct1) mc) cn) t) kt) ct) NoMergeJoin(cc cct1 cn it1 k mc mi mk t kt) NoMergeJoin(cc cct1 cn it1 k mc mi mk t) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct) NoNestLoop(cc it1 k mi mk cct1) NoNestLoop(it1 k mi mk cc)/*+ NoNestLoop(it1 k mi mk cc) NoNestLoop(cc it1 k mi mk cct1) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 cn it1 k mc mi mk t) NoMergeJoin(cc cct1 cn it1 k mc mi mk t kt) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,9.401,92.27442741394043,337.01539039611816,59.813,92.27228164672852,0.1571731897747981,1.000023254732338,False,3.652401180306859,"(((((((lt ml) t) mc) cn) mk) k) ct) NoMergeJoin(cn k lt mc mk ml t ct) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(lt mc ml t cn) NoMergeJoin(lt ml t mc) NoMergeJoin(lt ml t)/*+ NoMergeJoin(lt ml t) NoMergeJoin(lt ml t mc) NoMergeJoin(lt mc ml t cn) NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,341.043,450.83045959472656,781.4521789550781,372.788,450.82902908325195,0.914844361942981,1.0000031730686854,False,1.733367038374035,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) ct) cn) NoHashJoin(ct it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(it2 k kt mi_idx mk t mi) NoHashJoin(k kt mi_idx mk t it2) NoMergeJoin(k kt mk t mi_idx) NoNestLoop(it2 k kt mi mi_idx mk t it1)/*+ NoMergeJoin(k kt mk t mi_idx) NoHashJoin(k kt mi_idx mk t it2) NoHashJoin(it2 k kt mi_idx mk t mi) NoNestLoop(it2 k kt mi mi_idx mk t it1) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(ct it1 it2 k kt mc mi mi_idx mk t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,0.556,209.80048179626465,207.23915100097656,186.695,209.79881286621094,0.002978119392592196,1.0000079549070413,False,0.9877994454293377,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx) NoMergeJoin(it mi_idx t)/*+ NoHashJoin(it mi_idx) NoMergeJoin(it mi_idx t) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,178.302,279.7882556915283,581.4440250396729,222.656,279.7870635986328,0.800795846507617,1.0000042607148456,False,2.078166222416132,"(((((((((t mi) it) mc) cn) ci) n) chn) rt) an) NoHashJoin(chn ci cn it mc mi n rt t an) NoHashJoin(ci cn it mc mi n t chn) NoNestLoop(chn ci cn it mc mi n t rt)/*+ NoHashJoin(ci cn it mc mi n t chn) NoNestLoop(chn ci cn it mc mi n t rt) NoHashJoin(chn ci cn it mc mi n rt t an) */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from title AS t
inner join movie_info AS mi
on t.id = mi.movie_id AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%' AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND t.id = ci.movie_id AND mi.movie_id = ci.movie_id AND ci.note = '(voice)'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id;","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,3.849,224.34592247009277,162.57071495056152,202.212,224.34425354003906,0.019034478665954545,1.0000074391477711,False,0.7246484471310395,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,230.17,248.73709678649902,402.7726650238037,216.348,248.7356662750244,1.0638878103795735,1.0000057511312954,False,1.6192799008504966,"(((((((k mk) ml) lt) mc) cn) t) ct) NoHashJoin(k lt mc mk ml cn) NoMergeJoin(cn k lt mc mk ml t ct) NoMergeJoin(cn k lt mc mk ml t) NoMergeJoin(k lt mk ml mc) NoNestLoop(k mk ml lt)/*+ NoNestLoop(k mk ml lt) NoMergeJoin(k lt mk ml mc) NoHashJoin(k lt mc mk ml cn) NoMergeJoin(cn k lt mc mk ml t) NoMergeJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,224.736,383.7704658508301,489.34197425842285,353.871,383.76903533935547,0.635078884678315,1.000003727532299,False,1.275094989948088,"((((((mi_idx it2) t) mi) ci) it1) n) NoHashJoin(it2 mi mi_idx t ci) NoHashJoin(it2 mi_idx t mi) NoHashJoin(mi_idx it2)/*+ NoHashJoin(mi_idx it2) NoHashJoin(it2 mi_idx t mi) NoHashJoin(it2 mi mi_idx t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join cast_info AS ci
on ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,1103.278,1012.6800537109375,1501.6446113586426,969.875,1012.6783847808838,1.1375465910555485,1.000001648035624,False,1.4828445377389563,"(((((((((k mk) cc) cct1) cct2) t) kt) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct1 cct2 k mk t) NoNestLoop(cc cct1 k mk cct2) NoNestLoop(cc k mk cct1) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) NoNestLoop(cc k mk cct1) NoNestLoop(cc cct1 k mk cct2) NoMergeJoin(cc cct1 cct2 k mk t) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,5685.652,11825.724840164185,5973.73366355896,11787.336,11825.722694396973,0.4823525858599433,1.00000018144914,False,0.5051474500065282,"((((((k mk) t) mc) cn) ci) n) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t n)/*+ NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,1428.358,1891.4306163787842,1762.4537944793701,1860.566,1891.4291858673096,0.7677007964243139,1.0000007563124675,False,0.9318106158286872,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mk t mc) NoHashJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,1505.015,5043.773174285889,1981.9705486297607,4944.504,5043.771743774414,0.30438138992303376,1.0000002836193917,False,0.3929540529022016,"(((((((((((k mk) cc) cct1) mi_idx) t) kt) cct2) it2) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 k kt mi_idx mk t cct2) NoMergeJoin(cc cct1 k mi_idx mk t kt) NoMergeJoin(cc k mk cct1)/*+ NoMergeJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mi_idx mk t kt) NoMergeJoin(cc cct1 k kt mi_idx mk t cct2) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,53.634,90.39449691772461,419.1462993621826,45.102,90.3925895690918,1.189171211919649,1.000021100719007,False,4.636954216714934,"((((((((cn mc) mi) it1) ct) at) t) mk) k) NoHashJoin(at cn ct it1 mc mi t) NoHashJoin(cn ct it1 mc mi at) NoHashJoin(cn it1 mc mi ct) NoHashJoin(cn mc mi it1) NoHashJoin(cn mc mi) NoMergeJoin(at cn ct it1 mc mi mk t k) NoMergeJoin(at cn ct it1 mc mi t mk)/*+ NoHashJoin(cn mc mi) NoHashJoin(cn mc mi it1) NoHashJoin(cn it1 mc mi ct) NoHashJoin(cn ct it1 mc mi at) NoHashJoin(at cn ct it1 mc mi t) NoMergeJoin(at cn ct it1 mc mi t mk) NoMergeJoin(at cn ct it1 mc mi mk t k) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join aka_title AS at
on mc.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mi.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id;","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,1186.549,1600.3406047821045,1629.347562789917,1504.342,1600.339412689209,0.7887494997812997,1.0000007449000419,False,1.0181262486386953,"((((((((((k mk) t) mi_idx) it2) mi) it1) mc) cn) kt) ct) NoHashJoin(it2 k mi_idx mk t mi) NoMergeJoin(cn it1 it2 k mc mi mi_idx mk t kt) NoMergeJoin(it1 it2 k mc mi mi_idx mk t cn) NoMergeJoin(it1 it2 k mi mi_idx mk t mc) NoMergeJoin(k mk t mi_idx) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(it2 k mi mi_idx mk t it1) NoNestLoop(k mi_idx mk t it2)/*+ NoMergeJoin(k mk t mi_idx) NoNestLoop(k mi_idx mk t it2) NoHashJoin(it2 k mi_idx mk t mi) NoNestLoop(it2 k mi mi_idx mk t it1) NoMergeJoin(it1 it2 k mi mi_idx mk t mc) NoMergeJoin(it1 it2 k mc mi mi_idx mk t cn) NoMergeJoin(cn it1 it2 k mc mi mi_idx mk t kt) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,121.713,158.69617462158203,294.52013969421387,138.689,158.69474411010742,0.8775966370800856,1.0000090142334745,False,1.8558909518129125,"(((mk k) t) mi) NoMergeJoin(k mk t mi) NoMergeJoin(mk k)/*+ NoMergeJoin(mk k) NoMergeJoin(k mk t mi) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,278.94,305.5107593536377,494.8551654815674,278.213,305.509090423584,1.0026131057858547,1.0000054627836161,False,1.6197723111788842,"((((mc ct) mi) it) t) NoHashJoin(ct mc mi it)/*+ NoHashJoin(ct mc mi it) */ select min(t.title) AS american_vhs_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%' AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year > 2010;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,134.188,420.7475185394287,455.6107521057129,376.891,420.7456111907959,0.35603927926111256,1.0000045332585346,False,1.08286513272531,"(((((((it pi) an) n) ci) t) ml) lt) NoHashJoin(an ci it n pi t ml) NoHashJoin(it pi an) NoNestLoop(an ci it ml n pi t lt)/*+ NoHashJoin(it pi an) NoHashJoin(an ci it n pi t ml) NoNestLoop(an ci it ml n pi t lt) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name like '%a%'
inner join name AS n
on n.id = an.person_id AND n.id = pi.person_id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1984
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id AND ml.linked_movie_id = t.id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,5734.419,7276.621103286743,6097.067594528198,7233.483,7276.619434356689,0.7927604170770844,1.000000229355138,False,0.8378983743111237,"((((((((ci n) mi) it1) mk) k) mi_idx) it2) t) NoHashJoin(ci it1 k mi mk n mi_idx) NoMergeJoin(ci it1 it2 k mi mi_idx mk n t) NoMergeJoin(ci it1 mi mk n k) NoMergeJoin(ci it1 mi n mk) NoMergeJoin(ci n mi) NoNestLoop(ci mi n it1)/*+ NoMergeJoin(ci n mi) NoNestLoop(ci mi n it1) NoMergeJoin(ci it1 mi n mk) NoMergeJoin(ci it1 mi mk n k) NoHashJoin(ci it1 k mi mk n mi_idx) NoMergeJoin(ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from cast_info AS ci
inner join name AS n
on n.id = ci.person_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)') AND n.gender = 'm'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,364.956,397.25232124328613,540.5189990997314,385.849,397.2506523132324,0.9458518746970966,1.0000042012015435,False,1.3606497458273066,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,234.538,5532.966375350952,904.287576675415,546.548,5532.965183258057,0.429126078587791,1.0000002154528098,False,0.16343633959809778,"((((((((((((((((k mk) cc) cct1) cct2) ci) n) mi) rt) pi) it3) it) mc) cn) an) chn) t) NoHashJoin(an cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt chn) NoHashJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt mc) NoMergeJoin(cc cct1 cct2 ci k mi mk n rt pi) NoMergeJoin(cc cct1 cct2 ci k mk n mi) NoMergeJoin(cc cct1 k mk cct2) NoMergeJoin(cc k mk cct1) NoNestLoop(cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt an) NoNestLoop(cc cct1 cct2 ci it3 k mi mk n pi rt it) NoNestLoop(cc cct1 cct2 ci k mi mk n pi rt it3) NoNestLoop(cc cct1 cct2 ci k mi mk n rt)/*+ NoMergeJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mk cct2) NoMergeJoin(cc cct1 cct2 ci k mk n mi) NoNestLoop(cc cct1 cct2 ci k mi mk n rt) NoMergeJoin(cc cct1 cct2 ci k mi mk n rt pi) NoNestLoop(cc cct1 cct2 ci k mi mk n pi rt it3) NoNestLoop(cc cct1 cct2 ci it3 k mi mk n pi rt it) NoHashJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt mc) NoNestLoop(cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt an) NoHashJoin(an cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt chn) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join cast_info AS ci
on ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join person_info AS pi
on n.id = pi.person_id AND ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year BETWEEN 2000 AND 2010;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1112.106,2315.115451812744,1426.481008529663,2284.1,2315.1142597198486,0.4868902412328707,1.000000514917521,False,0.6161600890930892,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mk t mc) NoHashJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,36.131,156.4934253692627,325.897216796875,110.166,156.49175643920898,0.32796870177731785,1.0000106646515554,False,2.0825200266920993,"((((((((lt ml) t) mi) mc) cn) ct) mk) k) NoMergeJoin(cn ct lt mc mi ml t mk)/*+ NoMergeJoin(cn ct lt mc mi ml t mk) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,368.969,443.58086585998535,416.9008731842041,404.193,443.57943534851074,0.912853513049459,1.000003224927399,False,0.9398561789877705,"((((ct mc) t) mi) it) NoMergeJoin(ct mc t) NoNestLoop(ct mc mi t it)/*+ NoMergeJoin(ct mc t) NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,81.355,131.78491592407227,119.94433403015137,108.736,131.78372383117676,0.748188272513243,1.0000090458279738,False,0.9101604548965971,"((((mk k) t) mi_idx) it) NoMergeJoin(k mk t mi_idx) NoMergeJoin(mk k)/*+ NoMergeJoin(mk k) NoMergeJoin(k mk t mi_idx) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '9.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,584.216,3028.0516147613525,1008.1543922424316,2960.094,3028.0497074127197,0.1973640026296462,1.0000006298934354,False,0.3329385213771266,"((((((((((k mk) t) mi_idx) it2) mi) it1) kt) mc) cn) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(it2 k mi_idx mk t mi) NoHashJoin(k mi_idx mk t it2) NoNestLoop(it2 k mi mi_idx mk t it1)/*+ NoHashJoin(k mi_idx mk t it2) NoHashJoin(it2 k mi_idx mk t mi) NoNestLoop(it2 k mi mi_idx mk t it1) NoHashJoin(it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,17.272,472.72372245788574,568.0339336395264,48.959,472.72229194641113,0.3527849833534181,1.0000030261138495,False,1.2016229048574676,"(((((((((((((lt ml) t2) kt2) mi_idx2) it2) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(cn1 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) NoMergeJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(kt2 lt mi_idx2 ml t2 it2) NoMergeJoin(kt2 lt ml t2 mi_idx2) NoMergeJoin(lt ml t2 kt2)/*+ NoMergeJoin(lt ml t2 kt2) NoMergeJoin(kt2 lt ml t2 mi_idx2) NoMergeJoin(kt2 lt mi_idx2 ml t2 it2) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoHashJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoMergeJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(cn1 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,203.831,206.62665367126465,513.4522914886475,174.777,206.62474632263184,1.1662346876305234,1.000009230978703,False,2.4849506200333007,"(((((((kt t) mk) k) mi) it1) mi_idx) it2) NoHashJoin(it1 k kt mi mk t mi_idx) NoHashJoin(k kt mi mk t it1) NoMergeJoin(it1 k kt mi mi_idx mk t it2) NoMergeJoin(k kt mk t mi) NoMergeJoin(kt t mk) NoMergeJoin(kt t)/*+ NoMergeJoin(kt t) NoMergeJoin(kt t mk) NoMergeJoin(k kt mk t mi) NoHashJoin(k kt mi mk t it1) NoHashJoin(it1 k kt mi mk t mi_idx) NoMergeJoin(it1 k kt mi mi_idx mk t it2) */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie' AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%')
inner join movie_keyword AS mk
on t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,55.435,151.3822078704834,401.5347957611084,107.32,151.3807773590088,0.516539321654864,1.0000094497564325,False,2.6524820572749737,"((((((((lt ml) mk) k) mc) ct) cn) t) mi) NoHashJoin(ct k lt mc mk ml cn) NoHashJoin(k lt mc mk ml ct) NoHashJoin(lt mk ml k) NoMergeJoin(k lt mk ml mc)/*+ NoHashJoin(lt mk ml k) NoMergeJoin(k lt mk ml mc) NoHashJoin(k lt mc mk ml ct) NoHashJoin(ct k lt mc mk ml cn) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_keyword AS mk
on ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,586.504,2671.0402965545654,900.5565643310547,2639.086,2671.03910446167,0.2222375473933021,1.0000004463030487,False,0.33715588919187905,"(((((((n an) ci) rt) chn) t) mc) cn) NoHashJoin(an chn ci n rt t) NoHashJoin(an ci n rt chn) NoHashJoin(n an) NoMergeJoin(an chn ci mc n rt t cn) NoMergeJoin(an chn ci n rt t mc) NoMergeJoin(an ci n rt) NoMergeJoin(an n ci)/*+ NoHashJoin(n an) NoMergeJoin(an n ci) NoMergeJoin(an ci n rt) NoHashJoin(an ci n rt chn) NoHashJoin(an chn ci n rt t) NoMergeJoin(an chn ci n rt t mc) NoMergeJoin(an chn ci mc n rt t cn) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,172.194,732.5475215911865,483.2303524017334,678.114,732.5458526611328,0.2539307550057955,1.0000022782601903,False,0.6596588468097848,"(((((((k mk) ml) lt) t) mc) cn) ct) NoHashJoin(k mk ml lt) NoMergeJoin(cn k lt mc mk ml t ct) NoMergeJoin(k lt mc mk ml t cn)/*+ NoHashJoin(k mk ml lt) NoMergeJoin(k lt mc mk ml t cn) NoMergeJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,229.445,2067.7225589752197,781.5873622894287,1716.01,2067.721128463745,0.13370842827256252,1.0000006918299837,False,0.3779945716713379,"(((((((((((((k mk) cc) cct2) t) mi_idx) it2) mi) it1) cct1) kt) mc) cn) ct) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoHashJoin(cc cct2 it1 it2 k mi mi_idx mk t cct1) NoHashJoin(cc cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct2 it2 k mi_idx mk t mi) NoMergeJoin(cc cct2 k mk t mi_idx) NoNestLoop(cc cct2 k mi_idx mk t it2) NoNestLoop(cc k mk cct2) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) NoNestLoop(cc k mk cct2) NoMergeJoin(cc cct2 k mk t mi_idx) NoNestLoop(cc cct2 k mi_idx mk t it2) NoHashJoin(cc cct2 it2 k mi_idx mk t mi) NoHashJoin(cc cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct2 it1 it2 k mi mi_idx mk t cct1) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,4575.931,4133.401870727539,4888.506650924683,4100.673,4133.400440216064,1.1158975612051973,1.0000003460858669,False,1.1826840204887448,"(((((((ci rt) mc) cn) an) t) chn) n) NoHashJoin(an chn ci cn mc rt t n) NoHashJoin(an ci cn mc rt t chn) NoMergeJoin(ci rt mc) NoMergeJoin(ci rt) NoNestLoop(an ci cn mc rt t) NoNestLoop(ci cn mc rt an)/*+ NoMergeJoin(ci rt) NoMergeJoin(ci rt mc) NoNestLoop(ci cn mc rt an) NoNestLoop(an ci cn mc rt t) NoHashJoin(an ci cn mc rt t chn) NoHashJoin(an chn ci cn mc rt t n) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from cast_info AS ci
inner join role_type AS rt
on ci.role_id = rt.id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)') AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f';","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,26.635,374.65977668762207,575.3393173217773,47.789,374.65834617614746,0.5573458327230116,1.0000038181759174,False,1.535637263106048,"(((((((((((((lt ml) t2) mi_idx2) it2) kt2) mi_idx1) it1) mc1) cn1) t1) kt1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) NoHashJoin(it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 cn1) NoMergeJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 lt mi_idx2 ml t2 kt2) NoMergeJoin(lt ml t2 mi_idx2)/*+ NoMergeJoin(lt ml t2 mi_idx2) NoMergeJoin(it2 lt mi_idx2 ml t2 kt2) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoHashJoin(it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 cn1) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.5'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join movie_companies AS mc1
on mi_idx1.movie_id = mc1.movie_id AND ml.movie_id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]'
inner join title AS t1
on t1.id = mc1.movie_id AND t1.id = ml.movie_id AND t1.id = mi_idx1.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode')
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,2583.771,4021.8775272369385,2746.70672416687,3982.514,4021.876096725464,0.6487788869041013,1.0000003556826318,False,0.6829416566072702,"((((((((kt t) mc) cn) miidx) it) ct) mi) it2)/*+  */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,92.354,293.1389808654785,571.1336135864258,201.473,293.1368350982666,0.4583939287150139,1.000007320019032,False,1.948351572380755,"(((((((((((k mk) cc) t) mi_idx) it2) cct1) cct2) kt) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 it2 k mi_idx mk t cct2) NoNestLoop(cc it2 k mi_idx mk t cct1) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) NoNestLoop(cc it2 k mi_idx mk t cct1) NoMergeJoin(cc cct1 it2 k mi_idx mk t cct2) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '8.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,138.514,1343.724012374878,495.3756332397461,1309.807,1343.7223434448242,0.10575145803923784,1.0000012420200213,False,0.3686592216437958,"((((((((kt t) mc) cn) miidx) it) ct) mi) it2) NoHashJoin(cn kt mc t miidx) NoMergeJoin(cn kt mc miidx t it) NoMergeJoin(kt t) NoNestLoop(cn ct it kt mc mi miidx t it2)/*+ NoMergeJoin(kt t) NoHashJoin(cn kt mc t miidx) NoMergeJoin(cn kt mc miidx t it) NoNestLoop(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie' AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%')
inner join movie_companies AS mc
on mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,521.371,10208.648681640625,925.8437156677246,10157.513,10208.64725112915,0.05132860770151118,1.0000001401274272,False,0.0906921057111969,"(((((((((n an) ci) rt) mi) chn) it) mc) cn) t) NoHashJoin(an chn ci cn it mc mi n rt t) NoHashJoin(an chn ci it mc mi n rt cn) NoHashJoin(an chn ci it mi n rt mc) NoHashJoin(an chn ci mi n rt it) NoHashJoin(an ci mi n rt chn) NoHashJoin(an ci n rt mi) NoHashJoin(an ci n rt) NoHashJoin(an n ci) NoHashJoin(n an)/*+ NoHashJoin(n an) NoHashJoin(an n ci) NoHashJoin(an ci n rt) NoHashJoin(an ci n rt mi) NoHashJoin(an ci mi n rt chn) NoHashJoin(an chn ci mi n rt it) NoHashJoin(an chn ci it mi n rt mc) NoHashJoin(an chn ci it mc mi n rt cn) NoHashJoin(an chn ci cn it mc mi n rt t) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,1.699,229.2797565460205,222.71180152893066,208.296,229.2783260345459,0.00815666167377194,1.0000062391918998,False,0.9713600294489858,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,4844.731,6674.765110015869,5125.419616699219,6644.501,6674.762725830078,0.7291339108836012,1.000000357194089,False,0.767880421706199,"((((((ci n) mi) mi_idx) it2) it1) t) NoHashJoin(ci mi n mi_idx) NoHashJoin(ci n) NoMergeJoin(ci it1 it2 mi mi_idx n t) NoMergeJoin(ci it2 mi mi_idx n it1) NoMergeJoin(ci n mi)/*+ NoHashJoin(ci n) NoMergeJoin(ci n mi) NoHashJoin(ci mi n mi_idx) NoMergeJoin(ci it2 mi mi_idx n it1) NoMergeJoin(ci it1 it2 mi mi_idx n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from cast_info AS ci
inner join name AS n
on n.id = ci.person_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)') AND n.gender = 'm'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id;","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,3817.079,9771.302700042725,4098.427772521973,9752.614,9771.30103111267,0.3913903492950711,1.0000001707991646,False,0.4194352174262386,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(ci k mc mk n t cn) NoNestLoop(ci k mk t n)/*+ NoNestLoop(ci k mk t n) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,332.664,2660.753011703491,630.8455467224121,2616.249,2660.7518196105957,0.127153034745546,1.0000004480285936,False,0.2370929682629089,"(((((((((n ci) mk) cc) cct1) k) chn) t) cct2) kt) NoHashJoin(cc cct1 chn ci k mk n t cct2) NoHashJoin(cc cct1 chn ci k mk n t) NoHashJoin(cc cct1 ci k mk n chn) NoMergeJoin(cc cct1 cct2 chn ci k mk n t kt) NoMergeJoin(cc cct1 ci mk n k) NoNestLoop(cc ci mk n cct1) NoNestLoop(ci mk n cc)/*+ NoNestLoop(ci mk n cc) NoNestLoop(cc ci mk n cct1) NoMergeJoin(cc cct1 ci mk n k) NoHashJoin(cc cct1 ci k mk n chn) NoHashJoin(cc cct1 chn ci k mk n t) NoHashJoin(cc cct1 chn ci k mk n t cct2) NoMergeJoin(cc cct1 cct2 chn ci k mk n t kt) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on mk.movie_id = ci.movie_id
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id AND ci.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,515.246,859.5151901245117,839.087724685669,829.482,859.513521194458,0.6211659806963864,1.0000019417147172,False,0.9762356309643582,"(((((((k mk) t) mi_idx) it2) mi) it1) kt) NoMergeJoin(it1 it2 k mi mi_idx mk t kt) NoMergeJoin(it2 k mi mi_idx mk t it1) NoMergeJoin(it2 k mi_idx mk t mi) NoMergeJoin(k mk t mi_idx)/*+ NoMergeJoin(k mk t mi_idx) NoMergeJoin(it2 k mi_idx mk t mi) NoMergeJoin(it2 k mi mi_idx mk t it1) NoMergeJoin(it1 it2 k mi mi_idx mk t kt) */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode');","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,35.353,61.727285385131836,240.3421401977539,38.339,61.72513961791992,0.9221158611335716,1.0000347632621844,False,3.8937480204253476,"((((k mk) t) ci) n) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t ci)/*+ NoMergeJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,7503.111,20912.99533843994,7833.679914474487,20876.243,20912.993907928467,0.3594090660853105,1.0000000684029977,False,0.3745843349337279,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mk t mc) NoHashJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,914.989,2045.5245971679688,1232.9392433166504,2012.594,2045.5231666564941,0.45463168428406325,1.000000699337704,False,0.6027500755867502,"(((((((it2 mi_idx) t) mi) it1) mc) cn) ct) NoHashJoin(it1 it2 mi mi_idx t mc) NoHashJoin(it2 mi_idx) NoMergeJoin(it1 it2 mc mi mi_idx t cn) NoMergeJoin(it2 mi_idx t mi) NoNestLoop(cn it1 it2 mc mi mi_idx t ct) NoNestLoop(it2 mi mi_idx t it1)/*+ NoHashJoin(it2 mi_idx) NoMergeJoin(it2 mi_idx t mi) NoNestLoop(it2 mi mi_idx t it1) NoHashJoin(it1 it2 mi mi_idx t mc) NoMergeJoin(it1 it2 mc mi mi_idx t cn) NoNestLoop(cn it1 it2 mc mi mi_idx t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,34.232,203.55677604675293,512.408971786499,74.068,203.55486869812012,0.4621698979316304,1.0000093701941153,False,2.5173014777967393,"(((((((((((lt ml) cc) cct2) cct1) mk) k) t) mc) cn) ct) mi) NoHashJoin(cc cct1 cct2 cn k lt mc mk ml t ct) NoHashJoin(cc cct1 cct2 lt mk ml k) NoHashJoin(cc cct2 lt ml cct1) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoMergeJoin(cc cct1 cct2 k lt mk ml t mc) NoNestLoop(cc lt ml cct2) NoNestLoop(lt ml cc)/*+ NoNestLoop(lt ml cc) NoNestLoop(cc lt ml cct2) NoHashJoin(cc cct2 lt ml cct1) NoHashJoin(cc cct1 cct2 lt mk ml k) NoMergeJoin(cc cct1 cct2 k lt mk ml t mc) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoHashJoin(cc cct1 cct2 cn k lt mc mk ml t ct) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,14559.571,4402.709484100342,14842.451572418213,4376.881,4402.708053588867,3.3264717500887047,1.000000324916269,False,3.371209580957654,"((((((ci t) rt) mc) cn) an1) n1) NoHashJoin(an1 ci cn mc rt t n1) NoMergeJoin(ci mc rt t cn) NoMergeJoin(ci rt t mc) NoMergeJoin(ci t) NoNestLoop(ci cn mc rt t an1) NoNestLoop(ci t rt)/*+ NoMergeJoin(ci t) NoNestLoop(ci t rt) NoMergeJoin(ci rt t mc) NoMergeJoin(ci mc rt t cn) NoNestLoop(ci cn mc rt t an1) NoHashJoin(an1 ci cn mc rt t n1) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from cast_info AS ci
inner join title AS t
on ci.movie_id = t.id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,2584.421,5814.097166061401,2792.4461364746094,5792.294,5814.095735549927,0.4461826350665211,1.000000246041954,False,0.48028898447618795,"((((mk k) t) ci) n) NoMergeJoin(k mk t) NoNestLoop(ci k mk t n)/*+ NoMergeJoin(k mk t) NoNestLoop(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,45.438,990.6010627746582,272.4781036376953,964.729,990.5991554260254,0.04709923719510868,1.000001925449484,False,0.275063936956933,"((((cn mc) t) mk) k) NoHashJoin(cn mc t mk)/*+ NoHashJoin(cn mc t mk) */ select min(t.title) AS movie_title
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join title AS t
on mc.movie_id = t.id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,4242.562,7356.930494308472,4527.52685546875,7322.837,7356.928825378418,0.5793604309368077,1.0000002268514612,False,0.615409903090352,"((((((n ci) mc) t) cn) mk) k) NoMergeJoin(ci cn mc n t mk)/*+ NoMergeJoin(ci cn mc n t mk) */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,16439.893,6437.629699707031,16721.924543380737,6411.656,6437.628269195557,2.564063480635892,1.000000222210947,False,2.5975287550224304,"((((((ci t) rt) mc) cn) a1) n1) NoHashJoin(a1 ci cn mc rt t n1) NoMergeJoin(ci mc rt t cn) NoMergeJoin(ci rt t mc) NoMergeJoin(ci t) NoNestLoop(ci cn mc rt t a1) NoNestLoop(ci t rt)/*+ NoMergeJoin(ci t) NoNestLoop(ci t rt) NoMergeJoin(ci rt t mc) NoMergeJoin(ci mc rt t cn) NoNestLoop(ci cn mc rt t a1) NoHashJoin(a1 ci cn mc rt t n1) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from cast_info AS ci
inner join title AS t
on ci.movie_id = t.id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'writer'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join aka_name AS a1
on a1.person_id = ci.person_id
inner join name AS n1
on n1.id = ci.person_id AND a1.person_id = n1.id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,2240.219,3383.7907314300537,2721.2796211242676,3263.655,3383.789539337158,0.6864141583592628,1.0000003522952245,False,0.8042106607071468,"(((((((((((k mk) cc) cct2) cct1) mi_idx) it2) mi) it1) ci) n) t) NoMergeJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk mi) NoMergeJoin(cc cct1 cct2 k mi_idx mk it2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc k mk cct2) NoNestLoop(k mk cc)/*+ NoNestLoop(k mk cc) NoMergeJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 k mi_idx mk it2) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk mi) NoMergeJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,156.47,169.86608505249023,341.81952476501465,156.806,169.86393928527832,0.9978572248510899,1.000012632270398,False,2.01231365646681,"((((k mk) t) mi_idx) it) NoMergeJoin(k mk t mi_idx)/*+ NoMergeJoin(k mk t mi_idx) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,22.524,50.89545249938965,221.9386100769043,25.731,50.89402198791504,0.875364346508103,1.0000281076523083,False,4.3607991942473,"((((t mk) k) ci) n) NoHashJoin(k mk t ci) NoMergeJoin(ci k mk t n)/*+ NoHashJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from title AS t
inner join movie_keyword AS mk
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,2.494,216.31693840026855,98.5715389251709,187.253,216.31550788879395,0.01331887873625523,1.0000066130786858,False,0.4556841064573407,"(((((((mi_idx it2) t) mc) cn) ct) mi) it1) NoHashJoin(it2 mi_idx t) NoHashJoin(mi_idx it2) NoMergeJoin(cn it2 mc mi_idx t ct) NoNestLoop(cn ct it2 mc mi mi_idx t it1)/*+ NoHashJoin(mi_idx it2) NoHashJoin(it2 mi_idx t) NoMergeJoin(cn it2 mc mi_idx t ct) NoNestLoop(cn ct it2 mc mi mi_idx t it1) */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from movie_info_idx AS mi_idx
inner join info_type AS it2
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,544.833,6127.150058746338,595.4530239105225,6087.617,6127.148866653442,0.08949856733759695,1.0000001945591532,False,0.09718272509278039,"((((n ci) mk) k) t)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,46.104,531.1553478240967,151.75461769104004,369.648,531.1541557312012,0.12472406181015451,1.0000022443444763,False,0.2857072961843451,"(((((((((((cn mc) t) mk) k) mi) it) ci) chn) rt) an) n) NoHashJoin(an chn ci cn it k mc mi mk rt t n) NoHashJoin(chn ci cn it k mc mi mk rt t an) NoHashJoin(chn ci cn it k mc mi mk t rt) NoHashJoin(ci cn it k mc mi mk t chn) NoHashJoin(cn it k mc mi mk t ci) NoHashJoin(cn k mc mi mk t it)/*+ NoHashJoin(cn k mc mi mk t it) NoHashJoin(cn it k mc mi mk t ci) NoHashJoin(ci cn it k mc mi mk t chn) NoHashJoin(chn ci cn it k mc mi mk t rt) NoHashJoin(chn ci cn it k mc mi mk rt t an) NoHashJoin(an chn ci cn it k mc mi mk rt t n) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mc.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,14.051,34.461021423339844,225.81720352172852,15.677,34.45911407470703,0.8962811762454551,1.0000553510641241,False,6.553192372623363,"((((t mk) k) ci) n) NoHashJoin(k mk t ci) NoMergeJoin(ci k mk t n)/*+ NoHashJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from title AS t
inner join movie_keyword AS mk
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,188.904,1418.3926582336426,468.350887298584,1387.02,1418.391466140747,0.13619414283860362,1.0000008404540806,False,0.3301986077037702,"((((((((kt t) mc) cn) miidx) it) ct) mi) it2) NoHashJoin(cn kt mc t miidx) NoMergeJoin(cn kt mc miidx t it) NoMergeJoin(kt t) NoNestLoop(cn ct it kt mc mi miidx t it2)/*+ NoMergeJoin(kt t) NoHashJoin(cn kt mc t miidx) NoMergeJoin(cn kt mc miidx t it) NoNestLoop(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie' AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%')
inner join movie_companies AS mc
on mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,6347.901,7628.947019577026,6634.713411331177,7592.011,7628.945827484131,0.8361290572418822,1.00000015625919,False,0.8696763040876342,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(ci k mc mk n t cn) NoHashJoin(ci k mk t n)/*+ NoHashJoin(ci k mk t n) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'Z%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,48.966,256.913423538208,474.96533393859863,171.25,256.9127082824707,0.2859328467153285,1.000002784041872,False,1.8487420770808394,"((((((((((cn mc) t) mi) it1) mi_idx) it2) mk) k) ci) n) NoHashJoin(cn it1 it2 k mc mi mi_idx mk t ci) NoHashJoin(cn it1 it2 mc mi mi_idx t mk) NoHashJoin(cn it1 mc mi mi_idx t it2) NoHashJoin(cn it1 mc mi t mi_idx) NoHashJoin(cn mc mi t it1) NoHashJoin(cn mc t mi) NoMergeJoin(cn it1 it2 mc mi mi_idx mk t k) NoMergeJoin(cn mc t)/*+ NoMergeJoin(cn mc t) NoHashJoin(cn mc t mi) NoHashJoin(cn mc mi t it1) NoHashJoin(cn it1 mc mi t mi_idx) NoHashJoin(cn it1 mc mi mi_idx t it2) NoHashJoin(cn it1 it2 mc mi mi_idx t mk) NoMergeJoin(cn it1 it2 mc mi mi_idx mk t k) NoHashJoin(cn it1 it2 k mc mi mi_idx mk t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND t.id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mc.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,263.059,2152.1170139312744,808.9888095855713,1792.402,2152.116298675537,0.1467633934798109,1.0000003323499467,False,0.37590385337606613,"(((((((((((((k mk) cc) cct1) cct2) mi) it1) mi_idx) it2) t) kt) mc) cn) ct) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t) NoHashJoin(cc cct1 cct2 it1 k mi mk mi_idx) NoHashJoin(cc cct1 cct2 k mi mk it1) NoHashJoin(cc cct1 k mk cct2) NoHashJoin(cc k mk cct1) NoMergeJoin(cc cct1 cct2 it1 k mi mi_idx mk it2)/*+ NoHashJoin(cc k mk cct1) NoHashJoin(cc cct1 k mk cct2) NoHashJoin(cc cct1 cct2 k mi mk it1) NoHashJoin(cc cct1 cct2 it1 k mi mk mi_idx) NoMergeJoin(cc cct1 cct2 it1 k mi mi_idx mk it2) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,157.598,470.17717361450195,504.35805320739746,429.494,470.17669677734375,0.3669387698081929,1.0000010141658688,False,1.0726989590601521,"((((((((t mi_idx) it2) mk) k) ci) mi) it1) n) NoHashJoin(it2 k mi_idx mk t ci) NoHashJoin(it2 mi_idx t mk) NoHashJoin(mi_idx t it2) NoHashJoin(t mi_idx)/*+ NoHashJoin(t mi_idx) NoHashJoin(mi_idx t it2) NoHashJoin(it2 mi_idx t mk) NoHashJoin(it2 k mi_idx mk t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,849.994,7953.122138977051,1134.3164443969727,7926.64,7953.121662139893,0.1072325726915818,1.0000000599559744,False,0.14262531023469466,"((((((n ci) mc) t) cn) mk) k) NoMergeJoin(ci cn mc n t mk)/*+ NoMergeJoin(ci cn mc n t mk) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,856.923,966.7792320251465,1067.6486492156982,945.158,966.7785167694092,0.9066452381506585,1.0000007398341242,False,1.1043363404302333,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoMergeJoin(k mc mk t cn)/*+ NoHashJoin(k mk t) NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,145.697,248.40998649597168,423.79045486450195,221.97,248.40927124023438,0.6563814929945488,1.0000028793439704,False,1.7060170610728052,"((((((ci t) an) rt) n) mc) cn) NoHashJoin(an ci mc n rt t cn)/*+ NoHashJoin(an ci mc n rt t cn) */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from cast_info AS ci
inner join title AS t
on ci.movie_id = t.id AND ci.note = '(voice: English version)' AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%')
inner join aka_name AS an
on an.person_id = ci.person_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,23.372,169.2967414855957,483.6456775665283,17.057,169.2960262298584,1.3702292314005982,1.0000042248820202,False,2.8568046653963854,"(((((((((((lt ml) cc) cct2) t) mc) ct) mk) k) cn) cct1) mi) NoHashJoin(cc cct2 cn ct k lt mc mk ml t cct1) NoHashJoin(cc cct2 ct k lt mc mk ml t cn) NoHashJoin(cc cct2 ct lt mc mk ml t k) NoHashJoin(cc cct2 lt mc ml t ct) NoMergeJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) NoMergeJoin(cc cct2 ct lt mc ml t mk)/*+ NoHashJoin(cc cct2 lt mc ml t ct) NoMergeJoin(cc cct2 ct lt mc ml t mk) NoHashJoin(cc cct2 ct lt mc mk ml t k) NoHashJoin(cc cct2 ct k lt mc mk ml t cn) NoHashJoin(cc cct2 cn ct k lt mc mk ml t cct1) NoMergeJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year = 1998
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,4953.41,5129.036426544189,5232.919692993164,5068.25,5129.035711288452,0.9773412913727618,1.0000001394522826,False,1.0202540960040645,"((((((ci t) rt) chn) mc) cn) ct) NoHashJoin(ci t) NoNestLoop(chn ci cn mc rt t ct) NoNestLoop(ci t rt)/*+ NoHashJoin(ci t) NoNestLoop(ci t rt) NoNestLoop(chn ci cn mc rt t ct) */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note like '%(producer)%' AND t.production_year > 1990
inner join role_type AS rt
on rt.id = ci.role_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,206.444,186.48290634155273,669.4324016571045,162.144,186.46931648254395,1.2732139332938621,1.0000728798671286,False,3.590040518648935,"(((((mk k) t1) ml) lt) t2) NoMergeJoin(k mk t1 ml) NoMergeJoin(k mk t1) NoNestLoop(k mk ml t1 lt)/*+ NoMergeJoin(k mk t1) NoMergeJoin(k mk t1 ml) NoNestLoop(k mk ml t1 lt) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from movie_keyword AS mk
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,422.643,2302.3288249969482,1078.4928798675537,2232.44,2302.311420440674,0.18931886187310742,1.0000075596012423,False,0.46843918259378,"(((((((n ci) mc) t) cn) rt) chn) an) NoHashJoin(chn ci cn mc n rt t an) NoMergeJoin(ci mc n t cn) NoMergeJoin(ci mc n t) NoNestLoop(ci cn mc n t rt)/*+ NoMergeJoin(ci mc n t) NoMergeJoin(ci mc n t cn) NoNestLoop(ci cn mc n t rt) NoHashJoin(chn ci cn mc n rt t an) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%' AND ci.note = '(voice)'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.production_year BETWEEN 2007 AND 2010
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
