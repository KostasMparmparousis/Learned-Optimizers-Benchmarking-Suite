filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
2a.sql,773.072,728.7943363189697,1179.3437004089355,718.593,728.7845611572266,1.0758134298552866,1.0000134129649065,False,1.6182336499229246,"((((mk k) mc) cn) t) NoHashJoin(mk k) NoMergeJoin(cn k mc mk t) NoMergeJoin(k mc mk cn) NoMergeJoin(k mk mc)/*+ NoHashJoin(mk k) NoMergeJoin(k mk mc) NoMergeJoin(k mc mk cn) NoMergeJoin(cn k mc mk t) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
1a.sql,18.685,235.2907657623291,397.17817306518555,219.693,235.2757453918457,0.0850505022918345,1.0000638415594365,False,1.688139048943169,"((((it mi_idx) t) mc) ct) NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct)/*+ NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND ( mc.note like '%(co-production)%' OR mc.note like '%(presents)%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
5a.sql,285.683,295.03560066223145,670.8462238311768,275.201,295.0279712677002,1.0380885243876292,1.0000258599023628,False,2.2738393954601324,"((((ct mc) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS typical_european_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note like '%(theatrical)%' AND mc.note like '%(France)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
18a.sql,1086.658,5029.1900634765625,1414.088249206543,5002.012,5029.186964035034,0.2172441809415891,1.0000006162907744,False,0.2811763132528258,"((((((n ci) t) mi_idx) it2) mi) it1) NoHashJoin(ci mi_idx n t it2) NoNestLoop(ci it2 mi mi_idx n t it1) NoNestLoop(ci n t mi_idx)/*+ NoNestLoop(ci n t mi_idx) NoHashJoin(ci mi_idx n t it2) NoNestLoop(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'm' AND n.name like '%Tim%' AND ci.note IN ('(producer)',
'(executive producer)')
inner join title AS t
on t.id = ci.movie_id
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 'ci'), (3, 'n'), (4, 't')]"
19a.sql,587.204,503.6778450012207,1038.0351543426514,471.569,503.67236137390137,1.2452133197898927,1.0000108872905085,False,2.060933324812845,"(((((((((n ci) mc) cn) t) mi) chn) it) an) rt) NoHashJoin(an chn ci cn it mc mi n t rt) NoHashJoin(chn ci cn it mc mi n t an) NoHashJoin(chn ci cn mc mi n t it) NoHashJoin(ci cn mc mi n t chn) NoHashJoin(ci cn mc n t mi) NoHashJoin(ci n mc)/*+ NoHashJoin(ci n mc) NoHashJoin(ci cn mc n t mi) NoHashJoin(ci cn mc mi n t chn) NoHashJoin(chn ci cn mc mi n t it) NoHashJoin(chn ci cn it mc mi n t an) NoHashJoin(an chn ci cn it mc mi n t rt) */ select min(n.name) AS voicing_actress,
min(t.title) AS voiced_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year BETWEEN 2005 AND 2009
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn'), (6, 'mi'), (7, 'it')]"
17a.sql,11477.975,10497.050046920776,11848.158836364746,10479.73,10497.046709060669,1.0952548395807908,1.0000003179808759,False,1.1287135481771122,"((((((k mk) t) mc) cn) ci) n) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn)/*+ NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) */ select min(n.name) AS member_in_charnamed_american_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'B%';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
7a.sql,180.32,686.9816780090332,664.539098739624,670.652,686.9781017303467,0.26887267912419555,1.0000052058117683,False,0.9673366546412415,"(((((((it pi) n) an) ci) ml) lt) t) NoHashJoin(an ci it lt ml n pi t) NoHashJoin(it pi)/*+ NoHashJoin(it pi) NoHashJoin(an ci it lt ml n pi t) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'B%'))
inner join aka_name AS an
on n.id = an.person_id AND pi.person_id = an.person_id AND an.name like '%a%'
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1995;","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
31a.sql,712.036,456.2816619873047,1325.58012008667,376.879,456.2711715698242,1.889296034005609,1.000022991628957,False,2.90524627169835,"((((((((((cn mc) mi) it1) mi_idx) mk) k) ci) n) it2) t) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk n t) NoHashJoin(cn it1 mc mi mi_idx) NoHashJoin(cn mc mi it1) NoMergeJoin(cn it1 mc mi mi_idx mk k) NoMergeJoin(cn it1 mc mi mi_idx mk) NoMergeJoin(cn mc mi) NoNestLoop(ci cn it1 k mc mi mi_idx mk n it2)/*+ NoMergeJoin(cn mc mi) NoHashJoin(cn mc mi it1) NoHashJoin(cn it1 mc mi mi_idx) NoMergeJoin(cn it1 mc mi mi_idx mk) NoMergeJoin(cn it1 mc mi mi_idx mk k) NoNestLoop(ci cn it1 k mc mi mi_idx mk n it2) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id;","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'ci'), (4, 'n'), (5, 't'), (6, 'mk'), (7, 'k'), (8, 'it1')]"
27a.sql,36.838,144.17004585266113,606.6040992736816,29.648,144.1650390625,1.2425121424716676,1.0000347295723964,False,4.207705995977984,"(((((((((((lt ml) cc) cct2) t) mk) k) cct1) mc) cn) mi) ct) NoMergeJoin(cc cct1 cct2 cn k lt mc mk ml t mi) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoMergeJoin(cc cct1 cct2 k lt mk ml t mc) NoNestLoop(cc cct1 cct2 cn k lt mc mi mk ml t ct) NoNestLoop(cc cct2 lt mk ml t k) NoNestLoop(cc lt ml cct2)/*+ NoNestLoop(cc lt ml cct2) NoNestLoop(cc cct2 lt mk ml t k) NoMergeJoin(cc cct1 cct2 k lt mk ml t mc) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoMergeJoin(cc cct1 cct2 cn k lt mc mk ml t mi) NoNestLoop(cc cct1 cct2 cn k lt mc mi mk ml t ct) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
13a.sql,4333.283,1938.1837844848633,5052.91748046875,1925.491,1938.1771087646484,2.2504820848292724,1.0000034443293055,False,2.6070463104836525,"((((((((it miidx) t) kt) mc) cn) ct) mi) it2) NoHashJoin(it miidx t kt) NoHashJoin(it miidx) NoMergeJoin(it kt mc miidx t cn) NoNestLoop(cn ct it kt mc mi miidx t it2) NoNestLoop(cn it kt mc miidx t ct)/*+ NoHashJoin(it miidx) NoHashJoin(it miidx t kt) NoMergeJoin(it kt mc miidx t cn) NoNestLoop(cn it kt mc miidx t ct) NoNestLoop(cn ct it kt mc mi miidx t it2) */ select min(mi.info) AS release_date,
min(miidx.info) AS rating,
min(t.title) AS german_movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
15a.sql,435.063,453.1698226928711,693.1421756744385,437.473,453.16481590270996,0.9944910885928959,1.000011048497115,False,1.5295586756745239,"((((((((it1 mi) mk) k) at) t) mc) ct) cn) NoHashJoin(at ct it1 k mc mi mk t cn) NoHashJoin(at it1 k mi mk t mc) NoHashJoin(at it1 k mi mk t) NoHashJoin(it1 k mi mk at) NoHashJoin(it1 mi mk k) NoHashJoin(it1 mi) NoNestLoop(at it1 k mc mi mk t ct)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi mk k) NoHashJoin(it1 k mi mk at) NoHashJoin(at it1 k mi mk t) NoHashJoin(at it1 k mi mk t mc) NoNestLoop(at it1 k mc mi mk t ct) NoHashJoin(at ct it1 k mc mi mk t cn) */ select min(mi.info) AS release_date,
min(t.title) AS internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join aka_title AS at
on mi.movie_id = at.movie_id AND mk.movie_id = at.movie_id
inner join title AS t
on t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mc', 'cn'), (0, 'at'), (1, 't'), (2, 'mi'), (3, 'ct'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
12a.sql,445.226,261.1372470855713,1049.5579242706299,251.718,261.1217498779297,1.7687491558013333,1.0000593485898774,False,4.019419771663149,"(((((((mi_idx it2) mi) mc) cn) t) it1) ct) NoHashJoin(mi_idx it2) NoNestLoop(cn it1 it2 mc mi mi_idx t ct)/*+ NoHashJoin(mi_idx it2) NoNestLoop(cn it1 it2 mc mi mi_idx t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS drama_horror_movie
from movie_info_idx AS mi_idx
inner join info_type AS it2
on mi_idx.info_type_id = it2.id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.info IN ('Drama',
'Horror')
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2008
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it2'), (0, 'mc'), (1, 'ct'), (2, 't'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
10a.sql,353.955,315.86194038391113,664.2735004425049,300.272,315.8586025238037,1.1787812383439016,1.000010567577013,False,2.1030723720511744,"((((((cn mc) t) ci) rt) chn) ct) NoMergeJoin(chn ci cn mc rt t ct)/*+ NoMergeJoin(chn ci cn mc rt t ct) */ select min(chn.name) AS uncredited_voiced_character,
min(t.title) AS russian_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(voice)%' AND ci.note like '%(uncredited)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
25a.sql,2216.134,2202.3470401763916,2972.186803817749,2185.28,2202.335834503174,1.014119014496998,1.0000050880855873,False,1.3495611147281024,"((((((((k mk) mi) it1) ci) n) mi_idx) it2) t) NoHashJoin(ci it1 it2 k mi mi_idx mk n t) NoHashJoin(ci it1 k mi mk n mi_idx) NoHashJoin(k mi mk it1) NoNestLoop(ci it1 k mi mi_idx mk n it2)/*+ NoHashJoin(k mi mk it1) NoHashJoin(ci it1 k mi mk n mi_idx) NoNestLoop(ci it1 k mi mi_idx mk n it2) NoHashJoin(ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), (3, 'ci'), (4, 'it1'), (5, 'n'), (6, 't')]"
3a.sql,131.777,112.4875545501709,385.545015335083,107.535,112.47754096984863,1.2254335797647278,1.0000890273759182,False,3.4277511048933262,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29a.sql,51.436,3017.117500305176,1090.1165008544922,179.787,3017.11368560791,0.28609410024084053,1.0000012643531744,False,0.3613110457370278,"((((((((((((((((k mk) cc) cct2) mi) cct1) it) t) mc) cn) ci) rt) an) pi) it3) chn) n) NoMergeJoin(cc cct1 cct2 it k mi mk t mc)/*+ NoMergeJoin(cc cct1 cct2 it k mi mk t mc) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join title AS t
on t.id = mi.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
11a.sql,48.182,66.67542457580566,240.22150039672852,58.542,66.67184829711914,0.8230330361108265,1.000053640011157,False,3.603042461432832,"(((((((lt ml) t) mc) cn) mk) k) ct) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(lt mc ml t cn) NoNestLoop(cn k lt mc mk ml t ct)/*+ NoMergeJoin(lt mc ml t cn) NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(cn lt mc mk ml t k) NoNestLoop(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS non_polish_sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
28a.sql,255.402,4252.472877502441,1173.0477809906006,4058.65,4252.469539642334,0.06292782082712231,1.0000007849227552,False,0.27585095438197144,"(((((((((((((k mk) cc) t) cct1) mi_idx) it2) mi) cct2) it1) kt) mc) cn) ct) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(cc k mk t cct1) NoNestLoop(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(cc cct1 cct2 it2 k mi mi_idx mk t it1)/*+ NoMergeJoin(cc k mk t cct1) NoNestLoop(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoNestLoop(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
32a.sql,23.675,19.92344856262207,302.1373748779297,11.844,19.92011070251465,1.9989023978385683,1.0001675623272013,False,15.167454608562435,"(((((k mk) t1) ml) t2) lt)/*+  */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = '10,000-mile-club'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join title AS t2
on ml.linked_movie_id = t2.id
inner join link_type AS lt
on lt.id = ml.link_type_id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
30a.sql,789.798,1785.2742671966553,1684.1175556182861,1723.827,1785.2699756622314,0.4581654655600591,1.0000024038573898,False,0.9433405471312967,"(((((((((((k mk) cc) cct2) t) mi) it1) mi_idx) ci) it2) cct1) n)/*+  */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 't'), (4, 'ci'), (5, 'mi'), (6, 'cct1'), (7, 'it1'), (8, 'n'), (9, 'cct2')]"
4a.sql,117.507,92.63873100280762,510.6048583984375,78.473,92.62704849243164,1.4974194946032393,1.0001261241782624,False,5.512481145722331,"((((mk k) mi_idx) it) t) NoMergeJoin(k mi_idx mk it)/*+ NoMergeJoin(k mi_idx mk it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join movie_info_idx AS mi_idx
on mk.movie_id = mi_idx.movie_id AND mi_idx.info > '5.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.production_year > 2005;","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
26a.sql,509.953,1246.1886405944824,1064.4409656524658,1202.641,1246.1814880371094,0.42402761921471155,1.00000573957922,False,0.8541620750032907,"(((((((((((k mk) cc) mi_idx) cct1) cct2) it2) t) kt) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct1 cct2 k mi_idx mk it2) NoMergeJoin(cc cct1 k mi_idx mk cct2) NoMergeJoin(cc k mi_idx mk cct1)/*+ NoMergeJoin(cc k mi_idx mk cct1) NoMergeJoin(cc cct1 k mi_idx mk cct2) NoMergeJoin(cc cct1 cct2 k mi_idx mk it2) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(n.name) AS playing_actor,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join movie_info_idx AS mi_idx
on cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '7.0'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = mi_idx.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), ('it2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
33a.sql,25.277,348.1483459472656,800.1527786254883,41.933,348.1450080871582,0.602794934776906,1.0000095875569945,False,2.298331902048039,"(((((((((((((lt ml) t2) kt2) mi_idx2) it2) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(kt2 lt mi_idx2 ml t2 it2)/*+ NoMergeJoin(kt2 lt mi_idx2 ml t2 it2) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2005 AND 2008
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[us]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc2'), (7, 't2'), (8, 'mc1'), (9, 'cn1'), (10, 'cn2'), (11, 'kt2')]"
21a.sql,95.986,128.47161293029785,557.6252937316895,103.602,128.45635414123535,0.9264879056388873,1.0001187857865381,False,4.3409708882021585,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoMergeJoin(cn lt mc mi mk ml t k) NoMergeJoin(cn lt mc mi ml t mk) NoNestLoop(cn k lt mc mi mk ml t ct)/*+ NoMergeJoin(cn lt mc mi ml t mk) NoMergeJoin(cn lt mc mi mk ml t k) NoNestLoop(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
8a.sql,489.429,1283.9272022247314,1015.6159400939941,1262.888,1283.9221954345703,0.38754743096775013,1.0000038996055827,False,0.7910260790765734,"((((((n1 ci) t) mc) cn) rt) an1) NoMergeJoin(ci cn mc n1 t rt) NoMergeJoin(ci n1 t mc)/*+ NoMergeJoin(ci n1 t mc) NoMergeJoin(ci cn mc n1 t rt) */ select min(an1.name) AS actress_pseudonym,
min(t.title) AS japanese_movie_dubbed
from name AS n1
inner join cast_info AS ci
on n1.id = ci.person_id AND n1.name like '%Yo%' AND n1.name not like '%Yu%' AND ci.note = '(voice: English version)'
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an1
on an1.person_id = ci.person_id AND an1.person_id = n1.id;","[('mc', 'cn'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'an1'), (4, 'n1')]"
16a.sql,379.361,248.5818862915039,1047.1434593200684,226.202,248.5663890838623,1.677089504071582,1.000062346352211,False,4.2127315087913155,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t mc) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mk t) NoHashJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 50 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
9a.sql,471.458,639.9867534637451,667.5326824188232,625.903,639.979362487793,0.7532445123285877,1.0000115487723282,False,1.0430534506986635,"(((((((n an) ci) chn) t) mc) cn) rt) NoHashJoin(an chn ci cn mc n t rt) NoHashJoin(an chn ci mc n t cn) NoHashJoin(an chn ci n t mc) NoHashJoin(an ci n chn)/*+ NoHashJoin(an ci n chn) NoHashJoin(an chn ci n t mc) NoHashJoin(an chn ci mc n t cn) NoHashJoin(an chn ci cn mc n t rt) */ select min(an.name) AS alternative_name,
min(chn.name) AS character_name,
min(t.title) AS movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%Ang%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on ci.movie_id = t.id AND t.production_year BETWEEN 2005 AND 2015
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'mc'), (4, 'chn'), (5, 'cn')]"
23a.sql,416.131,509.9821090698242,857.471227645874,456.271,509.9806785583496,0.9120259670239834,1.000002805030729,False,1.6813798320160598,"((((((((((it1 mi) mk) cc) cct1) k) mc) cn) t) ct) kt) NoHashJoin(cc cct1 cn it1 k mc mi mk t) NoHashJoin(cc cct1 it1 mi mk k) NoHashJoin(it1 mi mk cc) NoHashJoin(it1 mi) NoMergeJoin(cc cct1 cn ct it1 k mc mi mk t kt) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 it1 k mi mk mc) NoNestLoop(cc cct1 cn it1 k mc mi mk t ct) NoNestLoop(cc it1 mi mk cct1)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi mk cc) NoNestLoop(cc it1 mi mk cct1) NoHashJoin(cc cct1 it1 mi mk k) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoHashJoin(cc cct1 cn it1 k mc mi mk t) NoNestLoop(cc cct1 cn it1 k mc mi mk t ct) NoMergeJoin(cc cct1 cn ct it1 k mc mi mk t kt) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie');","[('kt', 't'), ('cc', 'cct1'), (0, 1), (2, 'mi'), (3, 'it1'), (4, 'mk'), (5, 'mc'), (6, 'cn'), (7, 'ct'), (8, 'k')]"
14a.sql,307.085,389.0657424926758,624.605655670166,366.558,389.0643119812012,0.837752824928115,1.0000036767995175,False,1.6054046501709098,"(((((((k mk) t) mi_idx) mi) it2) kt) it1) NoHashJoin(k mi mi_idx mk t it2)/*+ NoHashJoin(k mi mi_idx mk t it2) */ select min(mi_idx.info) AS rating,
min(t.title) AS northern_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
20a.sql,2085.134,1900.0766277313232,2481.4488887786865,1884.45,1900.0756740570068,1.1064947332112818,1.0000005019138603,False,1.3059737160259213,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 cct2 ci k kt mk t chn) NoMergeJoin(cc cct1 cct2 k kt mk t ci) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc k mk cct2)/*+ NoMergeJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct1 cct2 k kt mk t ci) NoMergeJoin(cc cct1 cct2 ci k kt mk t chn) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(t.title) AS complete_downey_ironman_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 1950
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
6a.sql,34.25,21.312713623046875,241.81866645812988,14.753,21.311283111572266,2.3215617162610993,1.000067124605643,False,11.346978274002641,"((((k mk) t) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
22a.sql,356.943,379.7726631164551,795.9380149841309,351.877,379.77123260498047,1.0143970762510763,1.0000037667715502,False,2.0958354573739575,"((((((((((k mk) t) mi_idx) it2) mi) it1) mc) kt) cn) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(it1 it2 k mi mi_idx mk t mc) NoHashJoin(it2 k mi mi_idx mk t it1) NoHashJoin(it2 k mi_idx mk t mi) NoMergeJoin(k mi_idx mk t it2)/*+ NoMergeJoin(k mi_idx mk t it2) NoHashJoin(it2 k mi_idx mk t mi) NoHashJoin(it2 k mi mi_idx mk t it1) NoHashJoin(it1 it2 k mi mi_idx mk t mc) NoHashJoin(it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2008
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
24a.sql,486.588,419.44265365600586,966.1102294921875,353.74,419.44074630737305,1.37555266579974,1.0000045473613368,False,2.3033294642867292,"(((((((((((k mk) t) mi) it) mc) cn) ci) chn) an) rt) n) NoHashJoin(it k mi mk t mc)/*+ NoHashJoin(it k mi mk t mc) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS voiced_action_movie_jap_eng
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = mi.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('k', 'mk'), (0, 't'), (1, 'mi'), ('it', 2), (3, 'ci'), (4, 'mc'), (5, 'cn'), (6, 'an'), (7, 'chn'), (8, 'n'), (9, 'rt')]"
