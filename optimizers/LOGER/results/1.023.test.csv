filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
2a.sql,879.595,728.7852764129639,1093.4486389160156,718.593,728.7845611572266,1.2240517232981676,1.0000009814364565,False,1.5003729458534965,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mc mk t cn)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
1a.sql,17.981,235.2766990661621,230.45802116394043,219.693,235.2757453918457,0.08184603059724252,1.000004053432345,False,0.9795230731502668,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx t mc) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mi_idx t mc) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND ( mc.note like '%(co-production)%' OR mc.note like '%(presents)%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
5a.sql,283.198,295.0284481048584,497.6208209991455,275.201,295.0279712677002,1.0290587606876427,1.0000016162438976,False,1.6866903123148895,"((((ct mc) mi) it) t) NoHashJoin(ct mc mi it) NoMergeJoin(ct mc)/*+ NoMergeJoin(ct mc) NoHashJoin(ct mc mi it) */ select min(t.title) AS typical_european_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note like '%(theatrical)%' AND mc.note like '%(France)%'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join info_type AS it
on it.id = mi.info_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year > 2005;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
18a.sql,851.992,5029.187917709351,1138.5157108306885,5002.012,5029.186964035034,0.17032985926463193,1.0000001896279305,False,0.22638166347214714,"((((((ci n) mi_idx) it2) t) mi) it1) NoHashJoin(ci it2 mi mi_idx n t it1) NoHashJoin(ci it2 mi_idx n t mi) NoHashJoin(ci mi_idx n it2) NoHashJoin(ci n mi_idx) NoMergeJoin(ci n)/*+ NoMergeJoin(ci n) NoHashJoin(ci n mi_idx) NoHashJoin(ci mi_idx n it2) NoHashJoin(ci it2 mi_idx n t mi) NoHashJoin(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from cast_info AS ci
inner join name AS n
on n.id = ci.person_id AND ci.note IN ('(producer)',
'(executive producer)') AND n.gender = 'm' AND n.name like '%Tim%'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 'ci'), (3, 'n'), (4, 't')]"
19a.sql,597.027,503.6730766296387,992.7985668182373,471.569,503.67236137390137,1.2660437815038732,1.0000014200813707,False,1.971119805164836,"(((((((((ci n) chn) t) mc) cn) rt) mi) it) an) NoHashJoin(chn ci cn it mc mi n rt t an) NoHashJoin(chn ci cn mc mi n rt t it) NoHashJoin(chn ci n t) NoHashJoin(ci n chn) NoMergeJoin(chn ci cn mc n rt t mi) NoMergeJoin(chn ci cn mc n t rt) NoMergeJoin(chn ci mc n t cn) NoMergeJoin(chn ci n t mc)/*+ NoHashJoin(ci n chn) NoHashJoin(chn ci n t) NoMergeJoin(chn ci n t mc) NoMergeJoin(chn ci mc n t cn) NoMergeJoin(chn ci cn mc n t rt) NoMergeJoin(chn ci cn mc n rt t mi) NoHashJoin(chn ci cn mc mi n rt t it) NoHashJoin(chn ci cn it mc mi n rt t an) */ select min(n.name) AS voicing_actress,
min(t.title) AS voiced_movie
from cast_info AS ci
inner join name AS n
on n.id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)') AND n.gender = 'f' AND n.name like '%Ang%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 2005 AND 2009
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn'), (6, 'mi'), (7, 'it')]"
17a.sql,4996.873,10497.047424316406,5284.49273109436,10479.73,10497.046709060669,0.47681314308670164,1.000000068138759,False,0.5034266187015228,"((((((k mk) t) mc) cn) ci) n) NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t n)/*+ NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t n) */ select min(n.name) AS member_in_charnamed_american_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'B%';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
7a.sql,2057.82,686.9797706604004,2378.14998626709,670.652,686.9781017303467,3.068387181429415,1.0000024293788252,False,3.461755156790374,"(((((((lt ml) t) ci) an) pi) n) it) NoHashJoin(an ci lt ml t pi) NoHashJoin(lt ml t) NoMergeJoin(an ci lt ml n pi t it)/*+ NoHashJoin(lt ml t) NoHashJoin(an ci lt ml t pi) NoMergeJoin(an ci lt ml n pi t it) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.production_year BETWEEN 1980 AND 1995
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = ml.linked_movie_id
inner join aka_name AS an
on an.person_id = ci.person_id AND an.name like '%a%'
inner join person_info AS pi
on pi.person_id = an.person_id AND pi.person_id = ci.person_id AND pi.note = 'Volker Boehm'
inner join name AS n
on n.id = an.person_id AND ci.person_id = n.id AND n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'B%'))
inner join info_type AS it
on it.id = pi.info_type_id AND it.info = 'mini biography';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
31a.sql,305.964,456.2723636627197,746.9758987426758,376.879,456.2711715698242,0.8118361596162162,1.0000026126851087,False,1.6371314807654123,"((((((((((cn mc) mi) mi_idx) it2) it1) t) ci) n) mk) k) NoHashJoin(ci cn it1 it2 mc mi mi_idx mk n t k) NoHashJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoHashJoin(cn it2 mc mi mi_idx it1) NoHashJoin(cn mc mi mi_idx) NoMergeJoin(cn it1 it2 mc mi mi_idx t)/*+ NoHashJoin(cn mc mi mi_idx) NoHashJoin(cn it2 mc mi mi_idx it1) NoMergeJoin(cn it1 it2 mc mi mi_idx t) NoHashJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoHashJoin(ci cn it1 it2 mc mi mi_idx mk n t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'ci'), (4, 'n'), (5, 't'), (6, 'mk'), (7, 'k'), (8, 'it1')]"
27a.sql,38.44,144.1664695739746,517.3461437225342,29.648,144.1650390625,1.2965461413923367,1.0000099227349704,False,3.588568678556308,"(((((((((((lt ml) cc) cct2) cct1) t) mi) mc) cn) mk) k) ct) NoMergeJoin(cc cct1 cct2 cn lt mc mi mk ml t k) NoMergeJoin(cc cct1 cct2 lt mc mi ml t cn) NoNestLoop(cc cct1 cct2 cn k lt mc mi mk ml t ct)/*+ NoMergeJoin(cc cct1 cct2 lt mc mi ml t cn) NoMergeJoin(cc cct1 cct2 cn lt mc mi mk ml t k) NoNestLoop(cc cct1 cct2 cn k lt mc mi mk ml t ct) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
13a.sql,1667.198,1938.1780624389648,2029.5476913452148,1925.491,1938.1771087646484,0.8658560336038964,1.0000004920470436,False,1.0471425352035058,"((((((((it miidx) mc) ct) cn) t) kt) mi) it2) NoHashJoin(cn ct it mc miidx t kt) NoHashJoin(it miidx) NoMergeJoin(ct it mc miidx cn) NoNestLoop(it mc miidx ct)/*+ NoHashJoin(it miidx) NoNestLoop(it mc miidx ct) NoMergeJoin(ct it mc miidx cn) NoHashJoin(cn ct it mc miidx t kt) */ select min(mi.info) AS release_date,
min(miidx.info) AS rating,
min(t.title) AS german_movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]'
inner join title AS t
on mc.movie_id = t.id AND miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
15a.sql,427.645,453.16600799560547,678.2989501953125,437.473,453.16481590270996,0.9775346135647228,1.0000026305945513,False,1.4968040906797508,"((((((((it1 mi) mk) mc) cn) at) k) t) ct) NoHashJoin(at cn it1 k mc mi mk t ct) NoHashJoin(at cn it1 mc mi mk k) NoHashJoin(cn it1 mc mi mk at) NoHashJoin(it1 mc mi mk cn) NoHashJoin(it1 mi mk mc) NoHashJoin(it1 mi)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi mk mc) NoHashJoin(it1 mc mi mk cn) NoHashJoin(cn it1 mc mi mk at) NoHashJoin(at cn it1 mc mi mk k) NoHashJoin(at cn it1 k mc mi mk t ct) */ select min(mi.info) AS release_date,
min(t.title) AS internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_title AS at
on mc.movie_id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('mc', 'cn'), (0, 'at'), (1, 't'), (2, 'mi'), (3, 'ct'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
12a.sql,394.042,261.1234188079834,707.2248458862305,251.718,261.1217498779297,1.5654104990505247,1.0000063913866022,False,2.7084103343243027,"(((((((it2 mi_idx) mc) cn) t) mi) it1) ct) NoMergeJoin(it2 mc mi_idx cn) NoMergeJoin(it2 mi_idx mc) NoNestLoop(cn it1 it2 mc mi mi_idx t ct)/*+ NoMergeJoin(it2 mi_idx mc) NoMergeJoin(it2 mc mi_idx cn) NoNestLoop(cn it1 it2 mc mi mi_idx t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS drama_horror_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '8.0'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2008
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Drama',
'Horror')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it2'), (0, 'mc'), (1, 'ct'), (2, 't'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
10a.sql,339.621,315.8605098724365,621.4418411254883,300.272,315.8586025238037,1.1310445196355303,1.0000060386154361,False,1.9674684689920872,"((((((cn mc) t) ci) rt) chn) ct) NoHashJoin(ci cn mc rt t chn) NoMergeJoin(ci cn mc t rt) NoNestLoop(chn ci cn mc rt t ct)/*+ NoMergeJoin(ci cn mc t rt) NoHashJoin(ci cn mc rt t chn) NoNestLoop(chn ci cn mc rt t ct) */ select min(chn.name) AS uncredited_voiced_character,
min(t.title) AS russian_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(voice)%' AND ci.note like '%(uncredited)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
25a.sql,2247.565,2202.3377418518066,2605.5188179016113,2185.28,2202.335834503174,1.0285020683848294,1.0000008660571211,False,1.1830706185141795,"((((((((mk k) mi) it1) mi_idx) it2) ci) n) t) NoHashJoin(ci it1 it2 k mi mi_idx mk n t) NoHashJoin(it1 k mi mk mi_idx) NoHashJoin(mk k) NoMergeJoin(it1 k mi mi_idx mk it2) NoMergeJoin(k mi mk it1) NoMergeJoin(k mk mi)/*+ NoHashJoin(mk k) NoMergeJoin(k mk mi) NoMergeJoin(k mi mk it1) NoHashJoin(it1 k mi mk mi_idx) NoMergeJoin(it1 k mi mi_idx mk it2) NoHashJoin(ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), (3, 'ci'), (4, 'it1'), (5, 'n'), (6, 't')]"
3a.sql,131.777,112.47920989990234,303.24411392211914,107.535,112.47754096984863,1.2254335797647278,1.0000148378959863,False,2.696041461320785,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29a.sql,115.62,3017.115592956543,786.2327098846436,179.787,3017.11368560791,0.6430943282884747,1.000000632176587,False,0.26059101240867816,"((((((((((((((((k mk) cc) cct2) cct1) mi) it) ci) rt) pi) n) it3) t) an) chn) mc) cn) NoHashJoin(an cc cct1 cct2 chn ci it it3 k mi mk n pi rt t mc) NoHashJoin(an cc cct1 cct2 ci it it3 k mi mk n pi rt t chn) NoHashJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt t an) NoHashJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt t) NoHashJoin(cc cct1 cct2 ci it k mi mk n pi rt it3) NoHashJoin(cc cct1 cct2 ci it k mi mk rt) NoHashJoin(cc cct1 cct2 k mi mk it)/*+ NoHashJoin(cc cct1 cct2 k mi mk it) NoHashJoin(cc cct1 cct2 ci it k mi mk rt) NoHashJoin(cc cct1 cct2 ci it k mi mk n pi rt it3) NoHashJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt t) NoHashJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt t an) NoHashJoin(an cc cct1 cct2 ci it it3 k mi mk n pi rt t chn) NoHashJoin(an cc cct1 cct2 chn ci it it3 k mi mk n pi rt t mc) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join name AS n
on n.id = pi.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2010
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
11a.sql,48.023,66.67375564575195,348.1597900390625,58.542,66.67184829711914,0.8203170373407127,1.0000286080059504,False,5.221990974174123,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(lt ml t) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(lt mc ml t cn) NoMergeJoin(lt ml t mc) NoNestLoop(cn k lt mc mk ml t ct)/*+ NoHashJoin(lt ml t) NoMergeJoin(lt ml t mc) NoMergeJoin(lt mc ml t cn) NoMergeJoin(cn lt mc mk ml t k) NoNestLoop(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS non_polish_sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
28a.sql,261.345,4252.471208572388,548.8359928131104,4058.65,4252.469539642334,0.0643921008217018,1.0000003924613776,False,0.12906288632916857,"(((((((((((((k mk) cc) cct1) t) mi) mi_idx) it2) cct2) it1) mc) kt) cn) ct) NoHashJoin(cc cct1 cct2 it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(cc cct1 k mi mi_idx mk t it2) NoNestLoop(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct1 k mi mi_idx mk t it2) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it1 it2 k mc mi mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoNestLoop(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
32a.sql,24.623,19.921541213989258,247.08962440490723,11.844,19.92011070251465,2.0789429246876057,1.0000718124259433,False,12.404028677095427,"(((((k mk) t1) ml) lt) t2) NoHashJoin(k lt mk ml t1 t2) NoHashJoin(k mk t1 ml) NoHashJoin(k mk) NoNestLoop(k mk ml t1 lt)/*+ NoHashJoin(k mk) NoHashJoin(k mk t1 ml) NoNestLoop(k mk ml t1 lt) NoHashJoin(k lt mk ml t1 t2) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = '10,000-mile-club'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
30a.sql,1908.836,1785.2716445922852,2391.369342803955,1723.827,1785.2699756622314,1.10732457491384,1.0000009348334293,False,1.339500117855786,"(((((((((((k mk) cc) cct2) cct1) mi) mi_idx) it2) it1) ci) n) t) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) NoHashJoin(cc cct1 cct2 k mi mk mi_idx) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk ci) NoMergeJoin(cc cct1 cct2 it2 k mi mi_idx mk it1) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk it2) NoMergeJoin(cc cct1 cct2 k mk mi) NoMergeJoin(cc cct2 k mk cct1)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 k mk mi) NoHashJoin(cc cct1 cct2 k mi mk mi_idx) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk it2) NoMergeJoin(cc cct1 cct2 it2 k mi mi_idx mk it1) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk ci) NoMergeJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 't'), (4, 'ci'), (5, 'mi'), (6, 'cct1'), (7, 'it1'), (8, 'n'), (9, 'cct2')]"
4a.sql,105.437,92.62847900390625,313.4188652038574,78.473,92.62704849243164,1.3436086297197762,1.0000154437769302,False,3.3836646023484835,"((((mk k) mi_idx) it) t) NoHashJoin(mk k) NoMergeJoin(k mk mi_idx)/*+ NoHashJoin(mk k) NoMergeJoin(k mk mi_idx) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join movie_info_idx AS mi_idx
on mk.movie_id = mi_idx.movie_id AND mi_idx.info > '5.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.production_year > 2005;","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
26a.sql,465.173,1246.183156967163,947.8714466094971,1202.641,1246.1814880371094,0.38679289995933946,1.0000013392351512,False,0.7606207087079365,"(((((((((((k mk) cc) mi_idx) cct1) cct2) it2) t) kt) ci) chn) n) NoHashJoin(cc k mi_idx mk cct1) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct1 cct2 k mi_idx mk it2) NoMergeJoin(cc cct1 k mi_idx mk cct2)/*+ NoHashJoin(k mk) NoHashJoin(cc k mi_idx mk cct1) NoMergeJoin(cc cct1 k mi_idx mk cct2) NoMergeJoin(cc cct1 cct2 k mi_idx mk it2) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(n.name) AS playing_actor,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join movie_info_idx AS mi_idx
on cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '7.0'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = mi_idx.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), ('it2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
33a.sql,27.019,348.1464385986328,585.4206085205078,41.933,348.1450080871582,0.6443373953688025,1.0000041089529976,False,1.6815424461692916,"(((((((((((((lt ml) t2) mi_idx2) it2) mc2) cn2) mc1) cn1) mi_idx1) kt2) it1) t1) kt1) NoHashJoin(lt mi_idx2 ml t2 it2) NoHashJoin(lt ml t2) NoMergeJoin(cn1 cn2 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(cn1 cn2 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(cn1 cn2 it2 lt mc1 mc2 mi_idx1 mi_idx2 ml t2 kt2) NoMergeJoin(cn2 it2 lt mc1 mc2 mi_idx2 ml t2 cn1) NoMergeJoin(lt ml t2 mi_idx2)/*+ NoHashJoin(lt ml t2) NoMergeJoin(lt ml t2 mi_idx2) NoHashJoin(lt mi_idx2 ml t2 it2) NoMergeJoin(cn2 it2 lt mc1 mc2 mi_idx2 ml t2 cn1) NoMergeJoin(cn1 cn2 it2 lt mc1 mc2 mi_idx1 mi_idx2 ml t2 kt2) NoMergeJoin(cn1 cn2 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(cn1 cn2 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 kt1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2005 AND 2008
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[us]'
inner join movie_info_idx AS mi_idx1
on mi_idx1.movie_id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mc1.movie_id AND t1.id = ml.movie_id AND t1.id = mi_idx1.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series');","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc2'), (7, 't2'), (8, 'mc1'), (9, 'cn1'), (10, 'cn2'), (11, 'kt2')]"
21a.sql,92.539,128.45849990844727,451.9493579864502,103.602,128.45635414123535,0.893216347174765,1.000016704251232,False,3.5183106433920766,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoHashJoin(lt ml t) NoMergeJoin(cn lt mc mi mk ml t k) NoMergeJoin(cn lt mc mi ml t mk) NoMergeJoin(lt mc mi ml t cn) NoNestLoop(cn k lt mc mi mk ml t ct)/*+ NoHashJoin(lt ml t) NoMergeJoin(lt mc mi ml t cn) NoMergeJoin(cn lt mc mi ml t mk) NoMergeJoin(cn lt mc mi mk ml t k) NoNestLoop(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
8a.sql,442.964,1283.923864364624,724.1833209991455,1262.888,1283.9221954345703,0.35075477793755266,1.0000012998685275,False,0.5640398799664262,"((((((ci n1) t) rt) an1) mc) cn) NoHashJoin(ci n1 rt t an1) NoHashJoin(ci n1 t rt) NoHashJoin(ci n1 t) NoMergeJoin(an1 ci n1 rt t mc)/*+ NoHashJoin(ci n1 t) NoHashJoin(ci n1 t rt) NoHashJoin(ci n1 rt t an1) NoMergeJoin(an1 ci n1 rt t mc) */ select min(an1.name) AS actress_pseudonym,
min(t.title) AS japanese_movie_dubbed
from cast_info AS ci
inner join name AS n1
on n1.id = ci.person_id AND ci.note = '(voice: English version)' AND n1.name like '%Yo%' AND n1.name not like '%Yu%'
inner join title AS t
on ci.movie_id = t.id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an1
on an1.person_id = n1.id AND an1.person_id = ci.person_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]';","[('mc', 'cn'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'an1'), (4, 'n1')]"
16a.sql,369.769,248.56829643249512,695.6784725189209,226.202,248.5663890838623,1.6346849276310556,1.0000076733971952,False,2.798763240207067,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 50 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
9a.sql,425.868,639.9807929992676,653.3472537994385,625.903,639.979362487793,0.6804057497727284,1.000002235246257,False,1.020888003731371,"(((((((n ci) t) mc) cn) chn) rt) an) NoHashJoin(chn ci cn mc n rt t an) NoHashJoin(ci cn mc n t chn) NoHashJoin(ci n t) NoMergeJoin(chn ci cn mc n t rt) NoMergeJoin(ci mc n t cn) NoMergeJoin(ci n t mc)/*+ NoHashJoin(ci n t) NoMergeJoin(ci n t mc) NoMergeJoin(ci mc n t cn) NoHashJoin(ci cn mc n t chn) NoMergeJoin(chn ci cn mc n t rt) NoHashJoin(chn ci cn mc n rt t an) */ select min(an.name) AS alternative_name,
min(chn.name) AS character_name,
min(t.title) AS movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join title AS t
on ci.movie_id = t.id AND t.production_year BETWEEN 2005 AND 2015
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'mc'), (4, 'chn'), (5, 'cn')]"
23a.sql,449.674,509.9823474884033,895.4401016235352,456.271,509.9806785583496,0.9855414874055111,1.0000032725358505,False,1.7558314251332623,"((((((((((it1 mi) mk) k) cc) mc) cct1) cn) t) kt) ct) NoHashJoin(cc it1 k mi mk mc) NoHashJoin(it1 mi) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct) NoNestLoop(cc cct1 cn it1 k mc mi mk t kt) NoNestLoop(cc it1 k mc mi mk cct1)/*+ NoHashJoin(it1 mi) NoHashJoin(cc it1 k mi mk mc) NoNestLoop(cc it1 k mc mi mk cct1) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoNestLoop(cc cct1 cn it1 k mc mi mk t kt) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('kt', 't'), ('cc', 'cct1'), (0, 1), (2, 'mi'), (3, 'it1'), (4, 'mk'), (5, 'mc'), (6, 'cn'), (7, 'ct'), (8, 'k')]"
14a.sql,324.893,389.0657424926758,644.6523666381836,366.558,389.0643119812012,0.8863344954959378,1.0000036767995175,False,1.6569300930107718,"(((((((k mk) t) mi_idx) mi) it2) kt) it1) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(it2 k mi mi_idx mk t kt)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(it2 k mi mi_idx mk t kt) */ select min(mi_idx.info) AS rating,
min(t.title) AS northern_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
20a.sql,2048.842,1900.0773429870605,2450.620412826538,1884.45,1900.0756740570068,1.087236063572926,1.0000008783492556,False,1.289748848578235,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoHashJoin(cc k mk cct2) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct2 k mk cct1)/*+ NoHashJoin(k mk) NoHashJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(t.title) AS complete_downey_ironman_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 1950
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
6a.sql,30.63,21.312952041625977,219.0864086151123,14.753,21.311283111572266,2.0761878939876635,1.0000783120399168,False,10.280301165730652,"((((k mk) t) ci) n) NoHashJoin(k mk)/*+ NoHashJoin(k mk) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
22a.sql,576.833,379.772424697876,822.7477073669434,351.877,379.77123260498047,1.6393029382426245,1.000003138976292,False,2.166429778589168,"((((((((((k mk) t) kt) mi) it1) mi_idx) it2) mc) ct) cn) NoHashJoin(ct it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(k mk) NoNestLoop(it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(it1 k kt mi mi_idx mk t it2)/*+ NoHashJoin(k mk) NoNestLoop(it1 k kt mi mi_idx mk t it2) NoHashJoin(it1 it2 k kt mi mi_idx mk t mc) NoNestLoop(it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(ct it1 it2 k kt mc mi mi_idx mk t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2008
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
24a.sql,615.416,419.44265365600586,1101.6924381256104,353.74,419.44074630737305,1.7397410527506079,1.0000045473613368,False,2.626574665967889,"(((((((((((k mk) t) mi) it) ci) rt) chn) n) mc) cn) an) NoHashJoin(ci it k mi mk rt t chn) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(chn ci it k mc mi mk n rt t cn) NoMergeJoin(chn ci it k mi mk n rt t mc) NoNestLoop(chn ci cn it k mc mi mk n rt t an) NoNestLoop(ci it k mi mk t rt)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoNestLoop(ci it k mi mk t rt) NoHashJoin(ci it k mi mk rt t chn) NoMergeJoin(chn ci it k mi mk n rt t mc) NoMergeJoin(chn ci it k mc mi mk n rt t cn) NoNestLoop(chn ci cn it k mc mi mk n rt t an) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS voiced_action_movie_jap_eng
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id;","[('k', 'mk'), (0, 't'), (1, 'mi'), ('it', 2), (3, 'ci'), (4, 'mc'), (5, 'cn'), (6, 'an'), (7, 'chn'), (8, 'n'), (9, 'rt')]"
