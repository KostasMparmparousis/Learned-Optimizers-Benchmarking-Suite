filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
2a.sql,851.302,728.7917137145996,1145.4212665557861,718.593,728.7845611572266,1.1846789490017298,1.0000098143645657,False,1.5716870630972042,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
1a.sql,15.927,235.28027534484863,308.14671516418457,219.693,235.2757453918457,0.07249662028375961,1.0000192538036397,False,1.3097258055690106,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND ( mc.note like '%(co-production)%' OR mc.note like '%(presents)%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
5a.sql,285.683,295.0325012207031,579.1151523590088,275.201,295.0279712677002,1.0380885243876292,1.0000153543170278,False,1.9629160918899307,"((((ct mc) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS typical_european_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note like '%(theatrical)%' AND mc.note like '%(France)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
18a.sql,939.161,5029.191255569458,1349.376916885376,5002.012,5029.186964035034,0.18775664672535772,1.0000008533256874,False,0.2683091574314309,"((((((n ci) t) mi_idx) it2) mi) it1) NoHashJoin(ci it2 mi_idx n t mi) NoHashJoin(ci mi_idx n t it2) NoHashJoin(ci n t mi_idx) NoNestLoop(ci it2 mi mi_idx n t it1)/*+ NoHashJoin(ci n t mi_idx) NoHashJoin(ci mi_idx n t it2) NoHashJoin(ci it2 mi_idx n t mi) NoNestLoop(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'm' AND n.name like '%Tim%' AND ci.note IN ('(producer)',
'(executive producer)')
inner join title AS t
on t.id = ci.movie_id
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 'ci'), (3, 'n'), (4, 't')]"
19a.sql,608.713,503.6764144897461,1210.057020187378,471.569,503.67236137390137,1.290824884587409,1.000008047127767,False,2.4024685747826684,"(((((((((n ci) t) mc) cn) chn) an) mi) it) rt) NoHashJoin(an chn ci cn it mc mi n t rt) NoHashJoin(an chn ci cn mc mi n t it) NoHashJoin(an chn ci cn mc n t mi) NoHashJoin(chn ci cn mc n t an) NoHashJoin(ci cn mc n t chn) NoHashJoin(ci mc n t cn) NoHashJoin(ci n t mc) NoHashJoin(ci n t)/*+ NoHashJoin(ci n t) NoHashJoin(ci n t mc) NoHashJoin(ci mc n t cn) NoHashJoin(ci cn mc n t chn) NoHashJoin(chn ci cn mc n t an) NoHashJoin(an chn ci cn mc n t mi) NoHashJoin(an chn ci cn mc mi n t it) NoHashJoin(an chn ci cn it mc mi n t rt) */ select min(n.name) AS voicing_actress,
min(t.title) AS voiced_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 2005 AND 2009
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn'), (6, 'mi'), (7, 'it')]"
17a.sql,4299.019,10497.050523757935,4710.139274597168,10479.73,10497.046709060669,0.410222305345653,1.0000003634067154,False,0.4487108998506739,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(ci k mc mk n t cn) NoHashJoin(k mk) NoNestLoop(ci k mk t n)/*+ NoHashJoin(k mk) NoNestLoop(ci k mk t n) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_american_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
7a.sql,230.331,686.9823932647705,684.6024990081787,670.652,686.9781017303467,0.3434433953824039,1.000006246974122,False,0.996541952769405,"(((((((it pi) an) n) ci) ml) lt) t) NoHashJoin(an ci it lt ml n pi t) NoHashJoin(an ci it n pi ml) NoHashJoin(an it n pi ci) NoHashJoin(an it pi n) NoHashJoin(it pi an) NoHashJoin(it pi)/*+ NoHashJoin(it pi) NoHashJoin(it pi an) NoHashJoin(an it pi n) NoHashJoin(an it n pi ci) NoHashJoin(an ci it n pi ml) NoHashJoin(an ci it lt ml n pi t) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name like '%a%'
inner join name AS n
on n.id = an.person_id AND n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'B%'))
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1995;","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
31a.sql,328.966,456.27522468566895,979.0441989898682,376.879,456.2711715698242,0.8728690110088384,1.0000088831293696,False,2.1457507289391455,"((((((((((cn mc) mi) it1) ci) n) t) mk) k) mi_idx) it2) NoHashJoin(ci cn it1 k mc mi mk n t mi_idx) NoHashJoin(ci cn it1 mc mi n t) NoHashJoin(cn mc mi it1) NoMergeJoin(ci cn it1 mc mi mk n t k) NoNestLoop(ci cn it1 k mc mi mi_idx mk n t it2)/*+ NoHashJoin(cn mc mi it1) NoHashJoin(ci cn it1 mc mi n t) NoMergeJoin(ci cn it1 mc mi mk n t k) NoHashJoin(ci cn it1 k mc mi mk n t mi_idx) NoNestLoop(ci cn it1 k mc mi mi_idx mk n t it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'ci'), (4, 'n'), (5, 't'), (6, 'mk'), (7, 'k'), (8, 'it1')]"
27a.sql,52.098,144.16956901550293,757.5454711914062,29.648,144.1650390625,1.7572180248246088,1.000031421994073,False,5.254709991532599,"(((((((((((lt ml) cc) cct2) t) cct1) mc) mi) ct) cn) mk) k) NoHashJoin(cc cct1 cct2 ct lt mc mi ml t cn) NoHashJoin(cc cct1 cct2 lt mc mi ml t ct) NoMergeJoin(cc cct1 cct2 cn ct lt mc mi mk ml t k) NoMergeJoin(cc cct1 cct2 cn ct lt mc mi ml t mk) NoMergeJoin(cc cct1 cct2 lt mc ml t mi) NoMergeJoin(cc cct1 cct2 lt ml t mc) NoMergeJoin(cc cct2 lt ml t cct1) NoNestLoop(cc lt ml cct2)/*+ NoNestLoop(cc lt ml cct2) NoMergeJoin(cc cct2 lt ml t cct1) NoMergeJoin(cc cct1 cct2 lt ml t mc) NoMergeJoin(cc cct1 cct2 lt mc ml t mi) NoHashJoin(cc cct1 cct2 lt mc mi ml t ct) NoHashJoin(cc cct1 cct2 ct lt mc mi ml t cn) NoMergeJoin(cc cct1 cct2 cn ct lt mc mi ml t mk) NoMergeJoin(cc cct1 cct2 cn ct lt mc mi mk ml t k) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel';","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
13a.sql,1075.555,1938.1866455078125,1599.0967750549316,1925.491,1938.1771087646484,0.5585873940724729,1.0000049204704364,False,0.8250519355654555,"((((((((ct mc) cn) miidx) it) t) kt) mi) it2) NoMergeJoin(ct mc cn) NoNestLoop(cn ct mc miidx it)/*+ NoMergeJoin(ct mc cn) NoNestLoop(cn ct mc miidx it) */ select min(mi.info) AS release_date,
min(miidx.info) AS rating,
min(t.title) AS german_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]'
inner join movie_info_idx AS miidx
on miidx.movie_id = mc.movie_id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on mc.movie_id = t.id AND miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
15a.sql,655.156,453.1724452972412,1170.790433883667,437.473,453.16481590270996,1.4975918513828281,1.0000168358051276,False,2.583586352685916,"((((((((it1 mi) at) t) mc) ct) cn) mk) k) NoHashJoin(at cn ct it1 mc mi mk t k) NoHashJoin(at cn ct it1 mc mi t mk) NoHashJoin(at it1 mc mi t ct) NoHashJoin(it1 mi at) NoHashJoin(it1 mi) NoMergeJoin(at ct it1 mc mi t cn)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi at) NoHashJoin(at it1 mc mi t ct) NoMergeJoin(at ct it1 mc mi t cn) NoHashJoin(at cn ct it1 mc mi t mk) NoHashJoin(at cn ct it1 mc mi mk t k) */ select min(mi.info) AS release_date,
min(t.title) AS internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join title AS t
on t.id = at.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mi.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id;","[('mc', 'cn'), (0, 'at'), (1, 't'), (2, 'mi'), (3, 'ct'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
12a.sql,310.069,261.1250877380371,634.9780559539795,251.718,261.1217498779297,1.231810994843436,1.0000127827732044,False,2.431731773591521,"(((((((mi_idx it2) t) mi) mc) it1) ct) cn) NoHashJoin(ct it1 it2 mc mi mi_idx t cn) NoHashJoin(it2 mi_idx t mi) NoHashJoin(mi_idx it2) NoNestLoop(it1 it2 mc mi mi_idx t ct)/*+ NoHashJoin(mi_idx it2) NoHashJoin(it2 mi_idx t mi) NoNestLoop(it1 it2 mc mi mi_idx t ct) NoHashJoin(ct it1 it2 mc mi mi_idx t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS drama_horror_movie
from movie_info_idx AS mi_idx
inner join info_type AS it2
on mi_idx.info_type_id = it2.id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2008
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Drama',
'Horror')
inner join movie_companies AS mc
on mc.movie_id = mi.movie_id AND mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mi_idx', 'it2'), (0, 'mc'), (1, 'ct'), (2, 't'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
10a.sql,486.356,315.86289405822754,673.5472679138184,300.272,315.8586025238037,1.6197181222358394,1.000013586884731,False,2.1324328751282264,"((((((cn mc) t) ci) rt) chn) ct) NoHashJoin(chn ci cn mc rt t ct) NoHashJoin(ci cn mc t rt)/*+ NoHashJoin(ci cn mc t rt) NoHashJoin(chn ci cn mc rt t ct) */ select min(chn.name) AS uncredited_voiced_character,
min(t.title) AS russian_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(voice)%' AND ci.note like '%(uncredited)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
25a.sql,5518.607,2202.3394107818604,5798.364639282227,2185.28,2202.335834503174,2.5253546456289353,1.0000016238571023,False,2.6328249072831724,"((((((((k mk) mi_idx) it2) t) ci) n) mi) it1) NoHashJoin(ci it2 k mi mi_idx mk n t it1) NoHashJoin(ci it2 k mi_idx mk t n) NoHashJoin(it2 k mi_idx mk t ci) NoHashJoin(it2 k mi_idx mk t) NoHashJoin(k mk mi_idx) NoHashJoin(k mk) NoMergeJoin(ci it2 k mi_idx mk n t mi) NoNestLoop(k mi_idx mk it2)/*+ NoHashJoin(k mk) NoHashJoin(k mk mi_idx) NoNestLoop(k mi_idx mk it2) NoHashJoin(it2 k mi_idx mk t) NoHashJoin(it2 k mi_idx mk t ci) NoHashJoin(ci it2 k mi_idx mk t n) NoMergeJoin(ci it2 k mi_idx mk n t mi) NoHashJoin(ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), (3, 'ci'), (4, 'it1'), (5, 'n'), (6, 't')]"
3a.sql,131.066,112.48111724853516,358.227014541626,107.535,112.47754096984863,1.218821778955689,1.0000317954913993,False,3.184875944591057,"(((k mk) t) mi) NoHashJoin(k mk)/*+ NoHashJoin(k mk) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29a.sql,44.008,3017.118453979492,1072.3421573638916,179.787,3017.11368560791,0.24477854349869568,1.000001580441468,False,0.35541987114344625,"((((((((((((((((k mk) cc) cct1) t) cct2) ci) chn) mi) pi) an) n) it3) rt) mc) cn) it) NoHashJoin(an cc cct1 cct2 chn ci cn it3 k mc mi mk n pi rt t it) NoHashJoin(an cc cct1 cct2 chn ci it3 k mi mk n pi rt t mc) NoHashJoin(cc cct1 cct2 chn ci k mk t mi) NoHashJoin(cc cct1 cct2 k mk t ci) NoMergeJoin(cc cct1 cct2 chn ci k mi mk t pi) NoMergeJoin(cc cct1 k mk t cct2) NoMergeJoin(k mk) NoNestLoop(an cc cct1 cct2 chn ci it3 k mi mk n pi t rt) NoNestLoop(an cc cct1 cct2 chn ci k mi mk n pi t it3)/*+ NoMergeJoin(k mk) NoMergeJoin(cc cct1 k mk t cct2) NoHashJoin(cc cct1 cct2 k mk t ci) NoHashJoin(cc cct1 cct2 chn ci k mk t mi) NoMergeJoin(cc cct1 cct2 chn ci k mi mk t pi) NoNestLoop(an cc cct1 cct2 chn ci k mi mk n pi t it3) NoNestLoop(an cc cct1 cct2 chn ci it3 k mi mk n pi t rt) NoHashJoin(an cc cct1 cct2 chn ci it3 k mi mk n pi rt t mc) NoHashJoin(an cc cct1 cct2 chn ci cn it3 k mc mi mk n pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2010
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
11a.sql,46.78,66.67780876159668,499.0873336791992,58.542,66.67184829711914,0.799084418024666,1.0000894000185951,False,7.485728181031462,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(lt mc ml t cn) NoMergeJoin(lt ml t mc)/*+ NoMergeJoin(lt ml t mc) NoMergeJoin(lt mc ml t cn) NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS non_polish_sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
28a.sql,264.143,4252.474546432495,1091.8445587158203,4058.65,4252.469539642334,0.06508149261453931,1.0000011773841329,False,0.2567554096595958,"(((((((((((((k mk) cc) t) cct1) mi_idx) it2) mi) cct2) it1) mc) kt) cn) ct) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t mc) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 it2 k mi_idx mk t mi) NoHashJoin(cc cct1 k mi_idx mk t it2) NoHashJoin(k mk) NoMergeJoin(cc cct1 it2 k mi mi_idx mk t cct2) NoNestLoop(cc k mk t cct1)/*+ NoHashJoin(k mk) NoNestLoop(cc k mk t cct1) NoHashJoin(cc cct1 k mi_idx mk t it2) NoHashJoin(cc cct1 it2 k mi_idx mk t mi) NoMergeJoin(cc cct1 it2 k mi mi_idx mk t cct2) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t mc) NoHashJoin(cc cct1 cct2 it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
32a.sql,23.446,19.925355911254883,361.253023147583,11.844,19.92011070251465,1.979567713610267,1.0002633122284592,False,18.13509114193726,"(((((k mk) t1) ml) lt) t2) NoHashJoin(k mk t1 ml) NoHashJoin(k mk) NoNestLoop(k mk ml t1 lt)/*+ NoHashJoin(k mk) NoHashJoin(k mk t1 ml) NoNestLoop(k mk ml t1 lt) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = '10,000-mile-club'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
30a.sql,1459.965,1785.2754592895508,2160.245180130005,1723.827,1785.2699756622314,0.8469324357954713,1.0000030715955537,False,1.2100383749122758,"(((((((((((k mk) cc) t) ci) mi) mi_idx) it2) cct2) it1) cct1) n) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk t n) NoHashJoin(cc cct2 ci it2 k mi mi_idx mk t it1) NoHashJoin(cc ci it2 k mi mi_idx mk t cct2) NoHashJoin(cc ci k mk t mi) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(cc ci k mk t mi) NoHashJoin(cc ci it2 k mi mi_idx mk t cct2) NoHashJoin(cc cct2 ci it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 't'), (4, 'ci'), (5, 'mi'), (6, 'cct1'), (7, 'it1'), (8, 'n'), (9, 'cct2')]"
4a.sql,99.931,92.63086318969727,379.32705879211426,78.473,92.62704849243164,1.2734443694009405,1.0000411834051468,False,4.0952083108111585,"((((mk k) mi_idx) it) t) NoHashJoin(k mi_idx mk it) NoHashJoin(mk k)/*+ NoHashJoin(mk k) NoHashJoin(k mi_idx mk it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join movie_info_idx AS mi_idx
on mk.movie_id = mi_idx.movie_id AND mi_idx.info > '5.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.production_year > 2005;","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
26a.sql,369.829,1246.1860179901123,1058.3014488220215,1202.641,1246.1814880371094,0.30751404617005407,1.0000036350668393,False,0.8492354115201773,"(((((((((((k mk) mi_idx) t) kt) cc) cct1) cct2) it2) ci) chn) n) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 k kt mi_idx mk t cct2) NoNestLoop(cc cct1 cct2 k kt mi_idx mk t it2)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct1 k kt mi_idx mk t cct2) NoNestLoop(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(n.name) AS playing_actor,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join movie_info_idx AS mi_idx
on mk.movie_id = mi_idx.movie_id AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join complete_cast AS cc
on t.id = cc.movie_id AND mk.movie_id = cc.movie_id AND cc.movie_id = mi_idx.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = mi_idx.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), ('it2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
33a.sql,25.116,348.15049171447754,706.6307067871094,41.933,348.1450080871582,0.5989554765936136,1.000015750986491,False,2.0297022515692777,"(((((((((((((lt ml) mi_idx2) it2) t2) mc1) cn1) mi_idx1) kt2) it1) t1) kt1) mc2) cn2) NoHashJoin(lt mi_idx2 ml it2) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(cn1 it2 lt mc1 mi_idx1 mi_idx2 ml t2 kt2) NoMergeJoin(cn1 it2 lt mc1 mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 lt mc1 mi_idx2 ml t2 cn1) NoMergeJoin(it2 lt mi_idx2 ml t2 mc1) NoNestLoop(cn1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 it1)/*+ NoHashJoin(lt mi_idx2 ml it2) NoMergeJoin(it2 lt mi_idx2 ml t2 mc1) NoMergeJoin(it2 lt mc1 mi_idx2 ml t2 cn1) NoMergeJoin(cn1 it2 lt mc1 mi_idx2 ml t2 mi_idx1) NoMergeJoin(cn1 it2 lt mc1 mi_idx1 mi_idx2 ml t2 kt2) NoNestLoop(cn1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 kt1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join movie_info_idx AS mi_idx2
on ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join title AS t2
on t2.id = mi_idx2.movie_id AND t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2005 AND 2008
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[us]'
inner join movie_info_idx AS mi_idx1
on mi_idx1.movie_id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mc1.movie_id AND t1.id = ml.movie_id AND t1.id = mi_idx1.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc2'), (7, 't2'), (8, 'mc1'), (9, 'cn1'), (10, 'cn2'), (11, 'kt2')]"
21a.sql,91.472,128.4620761871338,482.6502799987793,103.602,128.45635414123535,0.8829173181984903,1.0000445446699517,False,3.757309501934909,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mi mk ml t ct) NoHashJoin(lt ml t mi) NoMergeJoin(cn lt mc mi mk ml t k) NoMergeJoin(cn lt mc mi ml t mk) NoMergeJoin(lt mc mi ml t cn) NoMergeJoin(lt mi ml t mc)/*+ NoHashJoin(lt ml t mi) NoMergeJoin(lt mi ml t mc) NoMergeJoin(lt mc mi ml t cn) NoMergeJoin(cn lt mc mi ml t mk) NoMergeJoin(cn lt mc mi mk ml t k) NoHashJoin(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
8a.sql,490.247,1283.9255332946777,797.534704208374,1262.888,1283.9221954345703,0.38819515269762644,1.0000025997370552,False,0.6211705873177399,"((((((ci n1) t) mc) cn) an1) rt) NoHashJoin(an1 ci cn mc n1 t rt) NoHashJoin(ci cn mc n1 t an1) NoHashJoin(ci mc n1 t cn) NoHashJoin(ci n1 t mc) NoHashJoin(ci n1)/*+ NoHashJoin(ci n1) NoHashJoin(ci n1 t mc) NoHashJoin(ci mc n1 t cn) NoHashJoin(ci cn mc n1 t an1) NoHashJoin(an1 ci cn mc n1 t rt) */ select min(an1.name) AS actress_pseudonym,
min(t.title) AS japanese_movie_dubbed
from cast_info AS ci
inner join name AS n1
on n1.id = ci.person_id AND ci.note = '(voice: English version)' AND n1.name like '%Yo%' AND n1.name not like '%Yu%'
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join aka_name AS an1
on an1.person_id = ci.person_id AND an1.person_id = n1.id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress';","[('mc', 'cn'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'an1'), (4, 'n1')]"
16a.sql,386.788,248.57473373413086,850.7788181304932,226.202,248.5663890838623,1.7099229891866563,1.0000335711127288,False,3.4227427982769387,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoMergeJoin(k mk t) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoMergeJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 50 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
9a.sql,415.461,639.9850845336914,870.7542419433594,625.903,639.979362487793,0.6637785727181368,1.0000089409850283,False,1.3605973770130255,"(((((((n ci) mc) cn) t) rt) an) chn) NoHashJoin(an ci cn mc n rt t chn) NoHashJoin(ci cn mc n rt t an) NoHashJoin(ci cn mc n t) NoHashJoin(ci mc n cn) NoMergeJoin(ci n mc) NoNestLoop(ci cn mc n t rt)/*+ NoMergeJoin(ci n mc) NoHashJoin(ci mc n cn) NoHashJoin(ci cn mc n t) NoNestLoop(ci cn mc n t rt) NoHashJoin(ci cn mc n rt t an) NoHashJoin(an ci cn mc n rt t chn) */ select min(an.name) AS alternative_name,
min(chn.name) AS character_name,
min(t.title) AS movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.production_year BETWEEN 2005 AND 2015
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'mc'), (4, 'chn'), (5, 'cn')]"
23a.sql,406.696,509.98592376708984,879.535436630249,456.271,509.9806785583496,0.891347466746736,1.0000102851126733,False,1.7246446259818777,"((((((((((it1 mi) mk) cc) cct1) k) mc) cn) t) ct) kt) NoHashJoin(it1 mi) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 it1 k mi mk mc) NoNestLoop(cc cct1 cn ct it1 k mc mi mk t kt) NoNestLoop(cc cct1 cn it1 k mc mi mk t ct)/*+ NoHashJoin(it1 mi) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoNestLoop(cc cct1 cn it1 k mc mi mk t ct) NoNestLoop(cc cct1 cn ct it1 k mc mi mk t kt) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie');","[('kt', 't'), ('cc', 'cct1'), (0, 1), (2, 'mi'), (3, 'it1'), (4, 'mk'), (5, 'mc'), (6, 'cn'), (7, 'ct'), (8, 'k')]"
14a.sql,235.918,389.0707492828369,454.2806148529053,366.558,389.0643119812012,0.6436034679368613,1.0000165455978292,False,1.1676234516078032,"(((((((k mk) t) mi_idx) it2) kt) mi) it1) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(it2 k kt mi_idx mk t mi) NoHashJoin(it2 k mi_idx mk t kt) NoHashJoin(k mi_idx mk t it2) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(k mi_idx mk t it2) NoHashJoin(it2 k mi_idx mk t kt) NoHashJoin(it2 k kt mi_idx mk t mi) NoHashJoin(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS northern_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
20a.sql,2606.111,1900.078535079956,2830.7511806488037,1884.45,1900.0756740570068,1.3829557695879433,1.000001505741581,False,1.489809705633795,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct2 k mk cct1) NoNestLoop(cc k mk cct2)/*+ NoHashJoin(k mk) NoNestLoop(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(t.title) AS complete_downey_ironman_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 1950
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
6a.sql,30.63,21.3162899017334,316.07913970947266,14.753,21.311283111572266,2.0761878939876635,1.0002349361197502,False,14.831539614704763,"((((k mk) t) ci) n) NoHashJoin(k mk)/*+ NoHashJoin(k mk) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
22a.sql,324.206,379.78506088256836,947.1104145050049,351.877,379.77123260498047,0.9213617258303328,1.0000364121249865,False,2.4938972022932107,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) cn) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(it2 k kt mi_idx mk t mi) NoMergeJoin(k kt mk t mi_idx) NoMergeJoin(k mk)/*+ NoMergeJoin(k mk) NoMergeJoin(k kt mk t mi_idx) NoHashJoin(it2 k kt mi_idx mk t mi) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2008
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
24a.sql,666.051,419.44432258605957,1217.4639701843262,353.74,419.44074630737305,1.882882908350766,1.0000085263025065,False,2.902588699124974,"(((((((((((n an) ci) rt) mc) t) cn) mk) k) chn) mi) it) NoHashJoin(an chn ci cn k mc mi mk n rt t it) NoHashJoin(an chn ci cn k mc mk n rt t mi) NoHashJoin(an ci cn k mc mk n rt t chn) NoHashJoin(an ci cn mc mk n rt t k) NoHashJoin(an ci cn mc n rt t mk) NoHashJoin(an ci n rt mc) NoHashJoin(an ci n rt)/*+ NoHashJoin(an ci n rt) NoHashJoin(an ci n rt mc) NoHashJoin(an ci cn mc n rt t mk) NoHashJoin(an ci cn mc mk n rt t k) NoHashJoin(an ci cn k mc mk n rt t chn) NoHashJoin(an chn ci cn k mc mk n rt t mi) NoHashJoin(an chn ci cn k mc mi mk n rt t it) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS voiced_action_movie_jap_eng
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2010
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('k', 'mk'), (0, 't'), (1, 'mi'), ('it', 2), (3, 'ci'), (4, 'mc'), (5, 'cn'), (6, 'an'), (7, 'chn'), (8, 'n'), (9, 'rt')]"
