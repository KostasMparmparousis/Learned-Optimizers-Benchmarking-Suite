filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,527.079,674.3602752685547,1155.4591655731201,592.709,674.3576526641846,0.8892711263031269,1.0000038890407186,False,1.713421892682982,"((((((((((cn mc) mi) it1) ci) n) mi_idx) it2) t) mk) k) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoMergeJoin(cn it1 mc mi ci) NoNestLoop(ci cn it1 mc mi mi_idx n it2)/*+ NoMergeJoin(cn it1 mc mi ci) NoNestLoop(ci cn it1 mc mi mi_idx n it2) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,6175.896,4087.2421264648438,6857.8174114227295,4053.487,4087.2275829315186,1.5236007911213234,1.0000035582881135,False,1.677865318794907,"(((((((it pi) n) an) ci) t) ml) lt)/*+  */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'))
inner join aka_name AS an
on n.id = an.person_id AND pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id AND ml.linked_movie_id = t.id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in');","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,151.399,305.3250312805176,475.7261276245117,274.653,305.32169342041016,0.5512373795298067,1.0000109322730069,False,1.558114401551758,"((((((cn mc) t) ci) rt) ct) chn) NoMergeJoin(ci cn mc t rt)/*+ NoMergeJoin(ci cn mc t rt) */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,485.552,1372.5287914276123,911.6511344909668,1327.554,1372.5178241729736,0.3657493405164686,1.000007990609991,False,0.6642180658311615,"((((((((it1 mi) at) t) mc) cn) ct) mk) k) NoHashJoin(at cn ct it1 mc mi mk t k) NoHashJoin(at cn ct it1 mc mi t mk) NoHashJoin(at it1 mc mi t cn) NoHashJoin(at it1 mi t mc) NoHashJoin(it1 mi at) NoHashJoin(it1 mi) NoNestLoop(at cn it1 mc mi t ct)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi at) NoHashJoin(at it1 mi t mc) NoHashJoin(at it1 mc mi t cn) NoNestLoop(at cn it1 mc mi t ct) NoHashJoin(at cn ct it1 mc mi t mk) NoHashJoin(at cn ct it1 mc mi mk t k) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join title AS t
on t.id = at.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,26.759,4159.3475341796875,543.4939861297607,36.001,4159.344434738159,0.7432849087525347,1.0000007451754902,False,0.13066818453181914,"((((((((((((((((k mk) cc) cct1) t) cct2) mi) ci) rt) pi) it3) it) an) chn) mc) cn) n) NoNestLoop(cc cct1 cct2 ci it3 k mi mk pi rt t it) NoNestLoop(cc cct1 cct2 ci k mi mk pi rt t it3)/*+ NoNestLoop(cc cct1 cct2 ci k mi mk pi rt t it3) NoNestLoop(cc cct1 cct2 ci it3 k mi mk pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info like 'USA:%200%'
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,367.872,726.2723445892334,645.190954208374,585.987,726.2659072875977,0.6277818449897353,1.0000088635602624,False,0.888367397855675,"(((((((((((k mk) cc) cct2) mi_idx) t) it2) cct1) mi) it1) ci) n) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t ci)/*+ NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,7072.493,12675.870418548584,7808.045387268066,12621.243,12675.866842269897,0.5603642208616061,1.0000002821328695,False,0.6159772333068987,"(((((((((rt ci) an) t) mc) cn) mi) it) chn) n) NoHashJoin(an chn ci cn it mc mi rt t n) NoHashJoin(an ci cn it mc mi rt t chn) NoMergeJoin(rt ci) NoNestLoop(an ci cn mc mi rt t it)/*+ NoMergeJoin(rt ci) NoNestLoop(an ci cn mc mi rt t it) NoHashJoin(an ci cn it mc mi rt t chn) NoHashJoin(an chn ci cn it mc mi rt t n) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join aka_name AS an
on ci.person_id = an.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,693.079,791.9437885284424,1102.7300357818604,752.763,791.9316291809082,0.9207134250753556,1.0000153540369978,False,1.3924561100336523,"((((mk k) mc) cn) t) NoMergeJoin(cn k mc mk t) NoMergeJoin(k mc mk cn) NoMergeJoin(k mk mc)/*+ NoMergeJoin(k mk mc) NoMergeJoin(k mc mk cn) NoMergeJoin(cn k mc mk t) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,415.427,793.2255268096924,824.3787288665771,747.424,793.2217121124268,0.5558116945669392,1.0000048091185698,False,1.0392790770580096,"((((((((it1 mi) at) t) mc) cn) ct) mk) k) NoMergeJoin(at cn ct it1 mc mi mk t k) NoMergeJoin(at cn ct it1 mc mi t mk) NoMergeJoin(at it1 mc mi t cn) NoMergeJoin(at it1 mi t mc) NoMergeJoin(it1 mi at) NoNestLoop(at cn it1 mc mi t ct)/*+ NoMergeJoin(it1 mi at) NoMergeJoin(at it1 mi t mc) NoMergeJoin(at it1 mc mi t cn) NoNestLoop(at cn it1 mc mi t ct) NoMergeJoin(at cn ct it1 mc mi t mk) NoMergeJoin(at cn ct it1 mc mi mk t k) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join title AS t
on t.id = at.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,44.111,145.34687995910645,932.7476024627686,77.149,145.34354209899902,0.5717637299252096,1.0000229653141737,False,6.417537298130788,"((((((((((k mk) cc) cct1) t) mi) kt) it1) mc) ct) cn) NoHashJoin(cc cct1 k kt mi mk t it1) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct)/*+ NoHashJoin(cc cct1 k kt mi mk t it1) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,401.719,826.4584541320801,900.9671211242676,756.62,826.4541625976562,0.5309389125320504,1.0000051927071314,False,1.0901598199861529,"((((((((((it1 mi) cc) mk) cct1) t) kt) mc) cn) ct) k) NoMergeJoin(cc cct1 cn ct it1 kt mc mi mk t k) NoMergeJoin(cc cct1 it1 kt mi mk t mc) NoNestLoop(cc cct1 cn it1 kt mc mi mk t ct) NoNestLoop(cc cct1 it1 mi mk t kt)/*+ NoNestLoop(cc cct1 it1 mi mk t kt) NoMergeJoin(cc cct1 it1 kt mi mk t mc) NoNestLoop(cc cct1 cn it1 kt mc mi mk t ct) NoMergeJoin(cc cct1 cn ct it1 kt mc mi mk t k) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join keyword AS k
on k.id = mk.keyword_id;","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,9.198,92.27657318115234,599.3285179138184,59.813,92.27228164672852,0.15377927875211075,1.000046509464676,False,6.495217276715811,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(cn lt mc mk ml t k) NoHashJoin(cn lt mc ml t mk)/*+ NoHashJoin(cn lt mc ml t mk) NoHashJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,275.839,450.8352279663086,763.9346122741699,372.788,450.82902908325195,0.7399352983465133,1.000013749964303,False,1.694510696943383,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) cn) ct) NoNestLoop(it2 k kt mi mi_idx mk t it1)/*+ NoNestLoop(it2 k kt mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,0.728,209.81431007385254,393.82410049438477,186.695,209.79881286621094,0.0038994081255523715,1.0000738669939542,False,1.8771512341470067,"((((it mi_idx) t) mc) ct) NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct)/*+ NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,180.274,279.78992462158203,737.7445697784424,222.656,279.7870635986328,0.8096525582063812,1.0000102257156296,False,2.636807292980387,"(((((((((t mi) ci) an) chn) it) n) rt) mc) cn)/*+  */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from title AS t
inner join movie_info AS mi
on t.id = mi.movie_id AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%' AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join cast_info AS ci
on t.id = ci.movie_id AND mi.movie_id = ci.movie_id AND ci.note = '(voice)'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,1.696,224.3480682373047,258.7556838989258,202.212,224.34425354003906,0.008387237157043103,1.0000170037663343,False,1.1533867251596228,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx t mc) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mi_idx t mc) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,227.849,248.7478256225586,840.8036231994629,216.348,248.7356662750244,1.0531597241481316,1.0000488846160114,False,3.3803098517837613,"(((((((k mk) ml) t) mc) lt) cn) ct) NoHashJoin(k mk ml) NoMergeJoin(k mk ml t mc)/*+ NoHashJoin(k mk ml) NoMergeJoin(k mk ml t mc) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,352.383,383.7718963623047,674.8170852661133,353.871,383.76903533935547,0.9957950778673584,1.000007455064598,False,1.7583937814821164,"((((((mi_idx it2) t) mi) ci) it1) n) NoHashJoin(it2 mi_idx t mi) NoHashJoin(mi_idx it2)/*+ NoHashJoin(mi_idx it2) NoHashJoin(it2 mi_idx t mi) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join cast_info AS ci
on ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,1260.323,1012.688398361206,1973.2003211975098,969.875,1012.6783847808838,1.299469519267947,1.0000098882137436,False,1.9484965324153305,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc k mk cct2)/*+ NoMergeJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,5685.652,11825.730085372925,6246.634721755981,11787.336,11825.722694396973,0.4823525858599433,1.000000624991482,False,0.5282243532326051,"((((((k mk) t) mc) cn) ci) n) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t n)/*+ NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,833.546,1891.4330005645752,1428.8077354431152,1860.566,1891.4291858673096,0.4480066818376774,1.0000020168332466,False,0.7554116993219281,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,889.809,5043.777704238892,1665.6665802001953,4944.504,5043.771743774414,0.17995920318802452,1.000001181747466,False,0.3302422601213362,"(((((((((((k mk) cc) cct1) mi_idx) t) kt) cct2) it2) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 k mi_idx mk t kt) NoMergeJoin(cc k mk cct1)/*+ NoMergeJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,44.603,90.39592742919922,706.6123485565186,45.102,90.3925895690918,0.9889361890825241,1.0000369262582622,False,7.817149081854964,"((((((((cn mc) mi) it1) t) at) mk) k) ct) NoHashJoin(cn mc mi it1) NoHashJoin(cn mc mi) NoMergeJoin(at cn it1 mc mi t mk) NoMergeJoin(cn it1 mc mi t at)/*+ NoHashJoin(cn mc mi) NoHashJoin(cn mc mi it1) NoMergeJoin(cn it1 mc mi t at) NoMergeJoin(at cn it1 mc mi t mk) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join aka_title AS at
on mc.movie_id = at.movie_id AND t.id = at.movie_id AND mi.movie_id = at.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,699.726,1600.3425121307373,1218.533992767334,1504.342,1600.339412689209,0.46513758174670383,1.000001936740109,False,0.761422222751929,"((((((((((k mk) t) mi) mi_idx) it2) it1) kt) mc) cn) ct) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(it1 it2 k mi mi_idx mk t kt) NoNestLoop(it2 k mi mi_idx mk t it1)/*+ NoNestLoop(it2 k mi mi_idx mk t it1) NoNestLoop(it1 it2 k mi mi_idx mk t kt) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,69.762,158.69832038879395,266.5541172027588,138.689,158.69474411010742,0.5030103324704915,1.0000225355836867,False,1.6796656921278699,"(((mk k) t) mi) NoHashJoin(k mk t) NoHashJoin(mk k) NoMergeJoin(k mk t mi)/*+ NoHashJoin(mk k) NoHashJoin(k mk t) NoMergeJoin(k mk t mi) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,177.338,305.5119514465332,398.32210540771484,278.213,305.509090423584,0.6374180933313683,1.0000093647719133,False,1.3037978832493886,"((((mc ct) mi) it) t)/*+  */ select min(t.title) AS american_vhs_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%' AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year > 2010;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,123.124,420.7589626312256,570.3692436218262,376.891,420.7456111907959,0.32668331162060116,1.000031732809742,False,1.3556154323453664,"(((((((it pi) n) an) ci) ml) t) lt)/*+  */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join aka_name AS an
on n.id = an.person_id AND pi.person_id = an.person_id AND an.name like '%a%'
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1984
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,5989.609,7276.623010635376,6576.685667037964,7233.483,7276.619434356689,0.8280394106131168,1.0000004914752956,False,0.9038105848968855,"((((((((mk k) mi) it1) ci) n) mi_idx) t) it2) NoHashJoin(ci it1 k mi mk n mi_idx) NoMergeJoin(it1 k mi mk ci) NoNestLoop(ci it1 k mi mi_idx mk n t it2)/*+ NoMergeJoin(it1 k mi mk ci) NoHashJoin(ci it1 k mi mk n mi_idx) NoNestLoop(ci it1 k mi mi_idx mk n t it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,364.956,397.25375175476074,559.6883296966553,385.849,397.2506523132324,0.9458518746970966,1.0000078022314383,False,1.4089047467575726,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,177.528,5532.981872558594,1114.9804592132568,546.548,5532.965183258057,0.32481685048705694,1.0000030163393379,False,0.20151590011573264,"((((((((((((((((k mk) cc) t) ci) rt) chn) n) cct1) cct2) pi) it3) mi) it) an) mc) cn) NoHashJoin(cc chn ci k mk n rt t cct1) NoNestLoop(cc cct1 cct2 chn ci it3 k mi mk n pi rt t it) NoNestLoop(cc cct1 cct2 chn ci k mk n pi rt t it3)/*+ NoHashJoin(cc chn ci k mk n rt t cct1) NoNestLoop(cc cct1 cct2 chn ci k mk n pi rt t it3) NoNestLoop(cc cct1 cct2 chn ci it3 k mi mk n pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join person_info AS pi
on n.id = pi.person_id AND ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1110.618,2315.117359161377,1569.9663162231445,2284.1,2315.1142597198486,0.48623878113917957,1.0000013387855546,False,0.678137724577415,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,37.674,156.4946174621582,514.5928859710693,110.166,156.49175643920898,0.341974837971788,1.0000182822598092,False,3.288306666626039,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoHashJoin(cn lt mc mi mk ml t k) NoMergeJoin(cn lt mc mi ml t mk) NoNestLoop(cn k lt mc mi mk ml t ct)/*+ NoMergeJoin(cn lt mc mi ml t mk) NoHashJoin(cn lt mc mi mk ml t k) NoNestLoop(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,273.46,443.58301162719727,495.2254295349121,404.193,443.57943534851074,0.6765579809645392,1.000008062318497,False,1.116430091367568,"((((ct mc) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,95.216,131.78706169128418,327.72183418273926,108.736,131.78372383117676,0.8756621542083578,1.0000253283183262,False,2.486815705728361,"((((mk k) t) mi_idx) it) NoHashJoin(k mk t) NoMergeJoin(k mk t mi_idx)/*+ NoHashJoin(k mk t) NoMergeJoin(k mk t mi_idx) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '9.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,1032.398,3028.0559062957764,1915.1244163513184,2960.094,3028.0497074127197,0.3487720322395167,1.000002047153665,False,0.6324613534787952,"((((((((((k mk) t) mi) mi_idx) it2) it1) mc) kt) cn) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(it1 it2 k mc mi mi_idx mk t kt) NoNestLoop(it2 k mi mi_idx mk t it1)/*+ NoNestLoop(it2 k mi mi_idx mk t it1) NoNestLoop(it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,16.534,472.72586822509766,790.4860973358154,48.959,472.72229194641113,0.3377111460609898,1.0000075652846236,False,1.6721997477229755,"(((((((((((((lt ml) t2) kt2) mi_idx2) it2) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoHashJoin(lt ml t2) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(kt2 lt mi_idx2 ml t2 it2) NoMergeJoin(kt2 lt ml t2 mi_idx2)/*+ NoHashJoin(lt ml t2) NoMergeJoin(kt2 lt ml t2 mi_idx2) NoMergeJoin(kt2 lt mi_idx2 ml t2 it2) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,155.059,206.62856101989746,475.6937026977539,174.777,206.62474632263184,0.8871819518586542,1.000018461957406,False,2.3022107040121296,"(((((((k mk) t) kt) mi_idx) it2) mi) it1)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,48.137,151.39532089233398,724.2674827575684,107.32,151.3807773590088,0.4485370853522177,1.0000960725237307,False,4.784408531870091,"((((((((lt ml) mk) k) t) mc) cn) ct) mi) NoMergeJoin(lt ml mk) NoNestLoop(cn k lt mc mk ml t ct)/*+ NoMergeJoin(lt ml mk) NoNestLoop(cn k lt mc mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_keyword AS mk
on ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,939.318,2671.043634414673,1378.971815109253,2639.086,2671.03910446167,0.3559254984490843,1.000001695951585,False,0.5162679246461933,"(((((((n an) ci) rt) mc) t) cn) chn) NoMergeJoin(an ci cn mc n rt t chn) NoMergeJoin(an ci n rt) NoMergeJoin(an n ci)/*+ NoMergeJoin(an n ci) NoMergeJoin(an ci n rt) NoMergeJoin(an ci cn mc n rt t chn) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,290.509,732.5491905212402,774.8205661773682,678.114,732.5458526611328,0.4284073179435906,1.0000045565203806,False,1.0577093070183432,"(((((((k mk) ml) t) mc) cn) lt) ct) NoMergeJoin(cn k mc mk ml t lt)/*+ NoMergeJoin(cn k mc mk ml t lt) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,483.95,2067.776679992676,1498.7189769744873,1716.01,2067.721128463745,0.2820205010460312,1.0000268660643672,False,0.7248167832419407,"(((((((((((((k mk) cc) t) kt) cct1) cct2) mi_idx) it2) mi) it1) mc) cn) ct) NoNestLoop(cc cct1 cct2 it2 k kt mi mi_idx mk t it1)/*+ NoNestLoop(cc cct1 cct2 it2 k kt mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,4250.952,4133.409023284912,4644.001483917236,4100.673,4133.400440216064,1.0366473990976603,1.0000020765152013,False,1.1235305049888855,"(((((((rt ci) chn) an) mc) cn) t) n) NoHashJoin(an chn ci cn mc rt t n) NoMergeJoin(an chn ci rt mc) NoMergeJoin(rt ci)/*+ NoMergeJoin(rt ci) NoMergeJoin(an chn ci rt mc) NoHashJoin(an chn ci cn mc rt t n) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f';","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,30.246,374.67122077941895,1067.350149154663,47.789,374.65834617614746,0.6329071543660675,1.0000343635832563,False,2.84886259721235,"(((((((((((((lt ml) t2) mi_idx2) it2) kt2) mi_idx1) t1) it1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoHashJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(lt ml t2 mi_idx2) NoNestLoop(it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 it1) NoNestLoop(lt mi_idx2 ml t2 it2)/*+ NoMergeJoin(lt ml t2 mi_idx2) NoNestLoop(lt mi_idx2 ml t2 it2) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoNestLoop(it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 it1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.5'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,2841.437,4021.8796730041504,3233.5190773010254,3982.514,4021.876096725464,0.7134782200389,1.0000008892065793,False,0.8039827681249793,"((((((((it miidx) t) kt) mc) cn) ct) mi) it2) NoNestLoop(cn it kt mc miidx t ct)/*+ NoNestLoop(cn it kt mc miidx t ct) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,101.333,293.1392192840576,652.3325443267822,201.473,293.1368350982666,0.502960694485117,1.0000081333544801,False,2.2253516659143315,"(((((((((((k mk) cc) t) mi_idx) it2) cct2) cct1) kt) ci) n) chn) NoMergeJoin(cc cct2 it2 k mi_idx mk t cct1)/*+ NoMergeJoin(cc cct2 it2 k mi_idx mk t cct1) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '8.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join name AS n
on n.id = ci.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%');","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,139.391,1343.7342643737793,886.6939544677734,1309.807,1343.7223434448242,0.10642102233382475,1.0000088715715811,False,0.6598788498184877,"((((((((t kt) miidx) it) mc) cn) ct) mi) it2) NoHashJoin(kt t miidx) NoNestLoop(cn ct it kt mc mi miidx t it2) NoNestLoop(cn it kt mc miidx t ct) NoNestLoop(kt miidx t it)/*+ NoHashJoin(kt t miidx) NoNestLoop(kt miidx t it) NoNestLoop(cn it kt mc miidx t ct) NoNestLoop(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,665.578,10208.65249633789,1120.0721263885498,10157.513,10208.64725112915,0.06552568527355071,1.0000005138005665,False,0.10971797720453723,"(((((((((n an) ci) t) mi) chn) rt) mc) cn) it) NoHashJoin(an ci mi n t chn) NoHashJoin(an ci n t mi) NoMergeJoin(an chn ci mi n t rt) NoMergeJoin(an n ci)/*+ NoMergeJoin(an n ci) NoHashJoin(an ci n t mi) NoHashJoin(an ci mi n t chn) NoMergeJoin(an chn ci mi n t rt) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,0.512,229.28190231323242,317.29650497436523,208.296,229.2783260345459,0.0024580404808541693,1.0000155979797496,False,1.3838922782721181,"((((it mi_idx) t) mc) ct) NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct)/*+ NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,4568.011,6674.765825271606,4871.359825134277,6644.501,6674.762725830078,0.6874874426236072,1.0000004643523157,False,0.7298176767067733,"((((((mi_idx it2) mi) it1) ci) n) t) NoMergeJoin(ci it1 it2 mi mi_idx n t) NoMergeJoin(it1 it2 mi mi_idx ci)/*+ NoMergeJoin(it1 it2 mi mi_idx ci) NoMergeJoin(ci it1 it2 mi mi_idx n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id;","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,8660.707,9771.304607391357,8981.024026870728,9752.614,9771.30103111267,0.888039555343829,1.00000036599821,False,0.9191226427549788,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(ci k mk n t mc)/*+ NoHashJoin(ci k mk n t mc) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,295.113,2660.766124725342,847.7363586425781,2616.249,2660.7518196105957,0.11280004311516222,1.0000053763431225,False,0.3186078282064824,"(((((((((n ci) cc) mk) cct1) k) t) cct2) chn) kt) NoHashJoin(cc cct1 ci k mk n t cct2) NoHashJoin(cc cct1 ci mk n k) NoHashJoin(cc ci n mk) NoMergeJoin(cc cct1 cct2 chn ci k mk n t kt)/*+ NoHashJoin(cc ci n mk) NoHashJoin(cc cct1 ci mk n k) NoHashJoin(cc cct1 ci k mk n t cct2) NoMergeJoin(cc cct1 cct2 chn ci k mk n t kt) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join complete_cast AS cc
on ci.movie_id = cc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,547.04,859.5166206359863,965.5518531799316,829.482,859.513521194458,0.659495926373327,1.0000036060416175,False,1.1233701732092745,"(((((((k mk) t) mi) mi_idx) it2) kt) it1)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,22.433,61.73825263977051,417.1111583709717,38.339,61.72513961791992,0.585122199327056,1.0002124421577943,False,6.757557146940447,"((((mk k) t) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,7293.284,20912.997722625732,7806.224822998047,20876.243,20912.993907928467,0.34935807175649375,1.0000001824079938,False,0.37327151039998036,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,1543.092,2045.5272197723389,1898.282766342163,2012.594,2045.5231666564941,0.7667179768994641,1.0000019814568277,False,0.9280182191458616,"(((((((it2 mi_idx) t) mi) it1) mc) ct) cn) NoHashJoin(ct it1 it2 mc mi mi_idx t cn) NoHashJoin(it1 it2 mi mi_idx t mc) NoHashJoin(it2 mi_idx) NoNestLoop(it1 it2 mc mi mi_idx t ct) NoNestLoop(it2 mi mi_idx t it1)/*+ NoHashJoin(it2 mi_idx) NoNestLoop(it2 mi mi_idx t it1) NoHashJoin(it1 it2 mi mi_idx t mc) NoNestLoop(it1 it2 mc mi mi_idx t ct) NoHashJoin(ct it1 it2 mc mi mi_idx t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,36.157,203.5679817199707,804.8961162567139,74.068,203.55486869812012,0.48815952908138466,1.0000644200845425,False,3.9541973198902283,"(((((((((((lt ml) cc) cct1) cct2) mk) k) t) mc) cn) ct) mi) NoMergeJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoMergeJoin(cc cct1 cct2 lt mk ml k) NoMergeJoin(cc cct1 cct2 lt ml mk) NoMergeJoin(cc cct1 lt ml cct2) NoNestLoop(cc cct1 cct2 cn k lt mc mk ml t ct)/*+ NoMergeJoin(cc cct1 lt ml cct2) NoMergeJoin(cc cct1 cct2 lt ml mk) NoMergeJoin(cc cct1 cct2 lt mk ml k) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoNestLoop(cc cct1 cct2 cn k lt mc mk ml t ct) NoMergeJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,3709.211,4402.7111530303955,4131.504535675049,4376.881,4402.708053588867,0.8474552997899645,1.0000007039852497,False,0.93840074912695,"((((((rt ci) mc) cn) t) an1) n1) NoHashJoin(an1 ci cn mc rt t n1) NoMergeJoin(ci rt mc) NoMergeJoin(rt ci) NoNestLoop(ci cn mc rt t an1)/*+ NoMergeJoin(rt ci) NoMergeJoin(ci rt mc) NoNestLoop(ci cn mc rt t an1) NoHashJoin(an1 ci cn mc rt t n1) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,2739.917,5814.111709594727,3137.8586292266846,5792.294,5814.095735549927,0.47302795748972687,1.0000027474684845,False,0.5396984796862637,"((((mk k) t) ci) n) NoNestLoop(ci k mk t n)/*+ NoNestLoop(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,42.796,990.6072616577148,461.08078956604004,964.729,990.5991554260254,0.04436064428456074,1.0000081831603076,False,0.46545647352964253,"((((cn mc) t) mk) k) NoHashJoin(cn mc mk t k)/*+ NoHashJoin(cn mc mk t k) */ select min(t.title) AS movie_title
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join title AS t
on mc.movie_id = t.id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,3959.148,7356.932640075684,4438.026905059814,7322.837,7356.928825378418,0.5406576713369422,1.0000005185176255,False,0.6032445073752003,"((((((n ci) mc) t) cn) mk) k)/*+  */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,5946.064,6437.637805938721,6524.535894393921,6411.656,6437.628269195557,0.9273835027955337,1.0000014814063138,False,1.013499944632439,"((((((rt ci) mc) cn) t) a1) n1) NoHashJoin(a1 ci cn mc rt t n1) NoMergeJoin(ci rt mc) NoMergeJoin(rt ci) NoNestLoop(ci cn mc rt t a1)/*+ NoMergeJoin(rt ci) NoMergeJoin(ci rt mc) NoNestLoop(ci cn mc rt t a1) NoHashJoin(a1 ci cn mc rt t n1) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'writer'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join aka_name AS a1
on a1.person_id = ci.person_id
inner join name AS n1
on n1.id = ci.person_id AND a1.person_id = n1.id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,1903.69,3383.7926387786865,2572.5886821746826,3263.655,3383.789539337158,0.58330001179659,1.0000009159675838,False,0.7602685250568569,"(((((((((((k mk) cc) cct2) mi_idx) it2) cct1) ci) n) mi) it1) t) NoNestLoop(cc cct1 cct2 ci it2 k mi mi_idx mk n it1)/*+ NoNestLoop(cc cct1 cct2 ci it2 k mi mi_idx mk n it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.id = ci.movie_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,81.245,169.86775398254395,324.2030143737793,156.806,169.86393928527832,0.5181243064678648,1.0000224573695964,False,1.9086041200851696,"((((k mk) t) mi_idx) it)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,20.473,50.90951919555664,418.0014133453369,25.731,50.89402198791504,0.7956550464420348,1.0003044995666737,False,8.213173119715176,"((((t mk) k) ci) n) NoHashJoin(mk t k)/*+ NoHashJoin(mk t k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from title AS t
inner join movie_keyword AS mk
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,3.016,216.31860733032227,515.174388885498,187.253,216.31550788879395,0.016106551029890042,1.0000143283371523,False,2.3815878663232275,"(((((((it2 mi_idx) t) mc) cn) ct) mi) it1) NoHashJoin(it2 mi_idx) NoNestLoop(cn ct it2 mc mi mi_idx t it1) NoNestLoop(cn it2 mc mi_idx t ct)/*+ NoHashJoin(it2 mi_idx) NoNestLoop(cn it2 mc mi_idx t ct) NoNestLoop(cn ct it2 mc mi mi_idx t it1) */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,512.032,6127.152442932129,743.3903217315674,6087.617,6127.148866653442,0.0841104162761882,1.00000058367746,False,0.12132728254366637,"((((n ci) mk) k) t) NoHashJoin(ci mk n k)/*+ NoHashJoin(ci mk n k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,70.213,531.1710834503174,653.7601947784424,369.648,531.1541557312012,0.18994556983941477,1.0000318696915642,False,1.2308294827863266,"(((((((((((cn mc) mk) k) mi) ci) rt) chn) t) it) an) n) NoHashJoin(an chn ci cn it k mc mi mk rt t n) NoHashJoin(chn ci cn it k mc mi mk rt t an) NoHashJoin(cn mc mk k) NoNestLoop(chn ci cn k mc mi mk rt t it)/*+ NoHashJoin(cn mc mk k) NoNestLoop(chn ci cn k mc mi mk rt t it) NoHashJoin(chn ci cn it k mc mi mk rt t an) NoHashJoin(an chn ci cn it k mc mi mk rt t n) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND mi.movie_id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,10.722,34.471988677978516,401.5355110168457,15.677,34.45911407470703,0.6839318747209288,1.0003736196828383,False,11.652519857194255,"((((t mk) k) ci) n) NoHashJoin(mk t k)/*+ NoHashJoin(mk t k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from title AS t
inner join movie_keyword AS mk
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,185.586,1418.3943271636963,659.4734191894531,1387.02,1418.391466140747,0.13380196392265434,1.0000020170897932,False,0.4649445762556594,"((((((((t kt) miidx) it) mc) cn) ct) mi) it2) NoHashJoin(kt t miidx) NoNestLoop(cn ct it kt mc mi miidx t it2) NoNestLoop(cn it kt mc miidx t ct) NoNestLoop(kt miidx t it)/*+ NoHashJoin(kt t miidx) NoNestLoop(kt miidx t it) NoNestLoop(cn it kt mc miidx t ct) NoNestLoop(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,5969.353,7628.957033157349,6290.274381637573,7592.011,7628.945827484131,0.786267696398227,1.0000014688363859,False,0.824527336263964,"((((((n ci) mc) t) cn) mk) k) NoMergeJoin(ci cn mc n t mk)/*+ NoMergeJoin(ci cn mc n t mk) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'Z%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,49.558,256.9243907928467,843.3341979980469,171.25,256.9127082824707,0.28938978102189783,1.0000454726839092,False,3.2825709698673866,"((((((((((cn mc) t) mi) mi_idx) it1) it2) ci) n) mk) k) NoHashJoin(ci cn it1 it2 mc mi mi_idx mk n t k) NoHashJoin(cn mc mi mi_idx t it1) NoHashJoin(cn mc mi t mi_idx) NoHashJoin(cn mc t mi) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoMergeJoin(cn it1 it2 mc mi mi_idx t ci) NoMergeJoin(cn it1 mc mi mi_idx t it2)/*+ NoHashJoin(cn mc t mi) NoHashJoin(cn mc mi t mi_idx) NoHashJoin(cn mc mi mi_idx t it1) NoMergeJoin(cn it1 mc mi mi_idx t it2) NoMergeJoin(cn it1 it2 mc mi mi_idx t ci) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoHashJoin(ci cn it1 it2 mc mi mi_idx mk n t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,193.83,2152.1201133728027,838.6845588684082,1792.402,2152.116298675537,0.10813980345926863,1.0000017725330494,False,0.38970224768269,"(((((((((((((k mk) cc) t) kt) mi_idx) cct1) it2) cct2) mi) it1) mc) cn) ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(cc k kt mi_idx mk t cct1) NoNestLoop(cc cct1 cct2 it2 k kt mi mi_idx mk t it1) NoNestLoop(cc cct1 k kt mi_idx mk t it2)/*+ NoHashJoin(cc k kt mi_idx mk t cct1) NoNestLoop(cc cct1 k kt mi_idx mk t it2) NoNestLoop(cc cct1 cct2 it2 k kt mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it1 it2 k kt mi mi_idx mk t mc) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.5'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,157.332,470.19147872924805,876.0852813720703,429.494,470.17669677734375,0.3663194363599957,1.0000314391419345,False,1.8633107241955635,"((((((((t mi_idx) it2) mk) k) mi) it1) ci) n) NoHashJoin(it2 k mi mi_idx mk t it1) NoHashJoin(it2 mi_idx mk t k) NoHashJoin(mi_idx t it2) NoMergeJoin(it1 it2 k mi mi_idx mk t ci) NoMergeJoin(it2 k mi_idx mk t mi)/*+ NoHashJoin(mi_idx t it2) NoHashJoin(it2 mi_idx mk t k) NoMergeJoin(it2 k mi_idx mk t mi) NoHashJoin(it2 k mi mi_idx mk t it1) NoMergeJoin(it1 it2 k mi mi_idx mk t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,889.146,7953.124761581421,1205.775499343872,7926.64,7953.121662139893,0.11217186601132383,1.0000003897138332,False,0.15161034252548353,"((((((n ci) mc) t) cn) mk) k)/*+  */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,6233.552,966.7840003967285,6459.705352783203,945.158,966.7785167694092,6.595248625097602,1.0000056720616193,False,6.681680695976757,"((((mk mc) k) t) cn) NoHashJoin(k mc mk t) NoHashJoin(mc mk k)/*+ NoHashJoin(mc mk k) NoHashJoin(k mc mk t) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,130.815,248.4116554260254,410.27116775512695,221.97,248.40927124023438,0.5893363968103797,1.0000095978132342,False,1.651593620909412,"((((((t mc) cn) ci) rt) n) an)/*+  */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%') AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mc.movie_id AND ci.note = '(voice: English version)'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join name AS n
on n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%'
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,17.825,169.2979335784912,494.7211742401123,17.057,169.2960262298584,1.0450255027261535,1.0000112663520537,False,2.922225555184705,"(((((((((((lt ml) cc) cct2) t) mc) ct) cn) mk) k) cct1) mi) NoHashJoin(cc lt ml cct2) NoMergeJoin(cc cct2 cn ct lt mc ml t mk)/*+ NoHashJoin(cc lt ml cct2) NoMergeJoin(cc cct2 cn ct lt mc ml t mk) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year = 1998
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,3790.605,5129.0388107299805,4072.5629329681396,5068.25,5129.035711288452,0.7479120011838406,1.0000006042932243,False,0.7940211693213346,"((((((rt ci) chn) t) mc) cn) ct) NoMergeJoin(rt ci) NoNestLoop(chn ci cn mc rt t ct)/*+ NoMergeJoin(rt ci) NoNestLoop(chn ci cn mc rt t ct) */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND ci.note like '%(producer)%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,220.072,186.47074699401855,469.1164493560791,162.144,186.46931648254395,1.3572626800868364,1.0000076715649608,False,2.51578360560996,"(((((k mk) t1) ml) t2) lt)/*+  */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join title AS t2
on ml.linked_movie_id = t2.id
inner join link_type AS lt
on lt.id = ml.link_type_id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,406.847,2302.3130893707275,721.3537693023682,2232.44,2302.311420440674,0.182243195785777,1.0000007248932699,False,0.3133172006610198,"(((((((n ci) mc) t) cn) rt) an) chn) NoHashJoin(ci cn mc n rt t an) NoHashJoin(ci mc n t) NoMergeJoin(an ci cn mc n rt t chn) NoMergeJoin(ci mc n t cn) NoNestLoop(ci cn mc n t rt)/*+ NoHashJoin(ci mc n t) NoMergeJoin(ci mc n t cn) NoNestLoop(ci cn mc n t rt) NoHashJoin(ci cn mc n rt t an) NoMergeJoin(an ci cn mc n rt t chn) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%' AND ci.note = '(voice)'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.production_year BETWEEN 2007 AND 2010
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
