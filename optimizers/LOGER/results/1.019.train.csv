filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,532.366,674.3583679199219,697.0257759094238,592.709,674.3576526641846,0.8981911865687885,1.0000010606474687,False,1.03361439312757,"((((((((((cn mc) mi_idx) mi) ci) n) it2) it1) t) mk) k) NoHashJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoHashJoin(ci cn mc mi mi_idx n) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t) NoMergeJoin(ci cn it2 mc mi mi_idx n it1) NoMergeJoin(cn mc mi_idx)/*+ NoMergeJoin(cn mc mi_idx) NoHashJoin(ci cn mc mi mi_idx n) NoMergeJoin(ci cn it2 mc mi mi_idx n it1) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t) NoHashJoin(ci cn it1 it2 mc mi mi_idx n t mk) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi.movie_id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,6152.939,4087.228536605835,6470.115423202515,4053.487,4087.2275829315186,1.517937272279398,1.0000002333303681,False,1.583008357602122,"(((((((it pi) n) an) ci) t) ml) lt) NoHashJoin(an ci it n pi t ml) NoHashJoin(an ci it n pi t) NoHashJoin(it pi) NoMergeJoin(an it n pi ci)/*+ NoHashJoin(it pi) NoMergeJoin(an it n pi ci) NoHashJoin(an ci it n pi t) NoHashJoin(an ci it n pi t ml) */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'))
inner join aka_name AS an
on n.id = an.person_id AND pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id AND ml.linked_movie_id = t.id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in');","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,148.452,305.32240867614746,425.20833015441895,274.653,305.32169342041016,0.5405074767069721,1.00000234262993,False,1.3926567922212192,"((((((cn mc) t) ct) ci) rt) chn) NoHashJoin(cn mc t) NoMergeJoin(ci cn ct mc rt t chn) NoMergeJoin(ci cn ct mc t rt)/*+ NoHashJoin(cn mc t) NoMergeJoin(ci cn ct mc t rt) NoMergeJoin(ci cn ct mc rt t chn) */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,705.758,1372.5183010101318,1051.8085956573486,1327.554,1372.5178241729736,0.5316228191094298,1.0000003474178256,False,0.7663351084647138,"((((((((it1 mi) mk) k) mc) cn) at) ct) t) NoHashJoin(at cn ct it1 k mc mi mk t) NoHashJoin(cn it1 k mc mi mk at) NoHashJoin(it1 k mi mk mc) NoHashJoin(it1 mi mk k) NoHashJoin(it1 mi mk) NoHashJoin(it1 mi)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi mk) NoHashJoin(it1 mi mk k) NoHashJoin(it1 k mi mk mc) NoHashJoin(cn it1 k mc mi mk at) NoHashJoin(at cn ct it1 k mc mi mk t) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_title AS at
on mc.movie_id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,30.502,4159.3451499938965,695.1496601104736,36.001,4159.344434738159,0.8472542429376962,1.0000001719635747,False,0.16712962127028919,"((((((((((((((((k mk) cc) t) mi) cct2) ci) rt) pi) cct1) n) it3) it) mc) cn) an) chn) NoHashJoin(k mk) NoMergeJoin(an cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt t chn) NoMergeJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt t mc) NoMergeJoin(cc cct1 cct2 ci it3 k mi mk n pi rt t it) NoMergeJoin(cc cct1 cct2 ci k mi mk n pi rt t it3) NoMergeJoin(cc cct2 ci k mi mk rt t pi)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct2 ci k mi mk rt t pi) NoMergeJoin(cc cct1 cct2 ci k mi mk n pi rt t it3) NoMergeJoin(cc cct1 cct2 ci it3 k mi mk n pi rt t it) NoMergeJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt t mc) NoMergeJoin(an cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt t chn) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info like 'USA:%200%'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join name AS n
on n.id = pi.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,314.776,726.2668609619141,776.0305404663086,585.987,726.2659072875977,0.5371723263485368,1.000001313120039,False,1.0685212298682285,"(((((((((((k mk) cc) t) cct1) mi) ci) mi_idx) cct2) n) it1) it2) NoHashJoin(cc cct1 cct2 ci it1 k mi mi_idx mk n t it2) NoHashJoin(cc cct1 cct2 ci k mi mi_idx mk n t it1) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(cc cct1 cct2 ci k mi mi_idx mk n t it1) NoHashJoin(cc cct1 cct2 ci it1 k mi mi_idx mk n t it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join cast_info AS ci
on ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,7243.983,12675.867557525635,7573.512554168701,12621.243,12675.866842269897,0.5739516305961306,1.0000000564265739,False,0.5974749221026445,"(((((((((ci t) chn) rt) an) mc) cn) mi) it) n) NoMergeJoin(an chn ci rt t mc) NoMergeJoin(chn ci t rt)/*+ NoMergeJoin(chn ci t rt) NoMergeJoin(an chn ci rt t mc) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)') AND t.production_year > 2000
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,488.558,791.9328212738037,690.9339427947998,752.763,791.9316291809082,0.6490196781722799,1.000001505297745,False,0.8724666591602486,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mc mk t cn)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,453.017,793.2226657867432,799.8182773590088,747.424,793.2217121124268,0.6061044333604487,1.0000012022796425,False,1.0083161682866884,"((((((((it1 mi) mk) k) mc) cn) at) ct) t) NoHashJoin(at cn ct it1 k mc mi mk t) NoHashJoin(cn it1 k mc mi mk at) NoHashJoin(it1 k mi mk mc) NoHashJoin(it1 mi mk k) NoHashJoin(it1 mi mk) NoHashJoin(it1 mi)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi mk) NoHashJoin(it1 mi mk k) NoHashJoin(it1 k mi mk mc) NoHashJoin(cn it1 k mc mi mk at) NoHashJoin(at cn ct it1 k mc mi mk t) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_title AS at
on mc.movie_id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,384.874,145.34425735473633,805.6681156158447,77.149,145.34354209899902,4.988710158265175,1.0000049211387516,False,5.543198576150521,"((((((((((it1 mi) cc) t) mk) cct1) kt) k) mc) cn) ct) NoHashJoin(cc cct1 it1 kt mi mk t k) NoHashJoin(cc it1 mi t) NoMergeJoin(cc it1 mi t mk) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct)/*+ NoHashJoin(cc it1 mi t) NoMergeJoin(cc it1 mi t mk) NoHashJoin(cc cct1 it1 kt mi mk t k) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,393.099,826.4548778533936,810.4972839355469,756.62,826.4541625976562,0.519546139409479,1.0000008654511885,False,0.9806923609508423,"((((((((((it1 mi) cc) t) kt) cct1) mc) cn) mk) ct) k) NoHashJoin(cc it1 mi t) NoHashJoin(it1 mi) NoMergeJoin(cc cct1 it1 kt mi t mc)/*+ NoHashJoin(it1 mi) NoHashJoin(cc it1 mi t) NoMergeJoin(cc cct1 it1 kt mi t mc) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game')
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join keyword AS k
on k.id = mk.keyword_id;","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,8.766,92.27299690246582,318.8169002532959,59.813,92.27228164672852,0.14655676859545583,1.000007751577446,False,3.4551752114888714,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(cn lt mc mk ml t k)/*+ NoHashJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,265.822,450.82974433898926,682.978630065918,372.788,450.82902908325195,0.7130647982231187,1.0000015865343426,False,1.5149393362151848,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) ct) cn) NoHashJoin(k mk) NoMergeJoin(it2 k kt mi mi_idx mk t it1)/*+ NoHashJoin(k mk) NoMergeJoin(it2 k kt mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,187.434,209.79952812194824,391.82329177856445,186.695,209.79881286621094,1.003958327753823,1.0000034092458747,False,1.8676144370198646,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct)/*+ NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,136.295,279.7877788543701,420.7122325897217,222.656,279.7870635986328,0.6121326171313595,1.0000025564289075,False,1.5036872226274636,"(((((((((t mc) cn) mi) ci) chn) rt) an) it) n)/*+  */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%' AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join cast_info AS ci
on t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mi.movie_id = ci.movie_id AND ci.note = '(voice)'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,346.912,224.34473037719727,553.6885261535645,202.212,224.34425354003906,1.7155856230095148,1.0000021254707918,False,2.4680307938208315,"((((mc ct) mi_idx) t) it) NoHashJoin(ct mc mi_idx t) NoHashJoin(ct mc mi_idx)/*+ NoHashJoin(ct mc mi_idx) NoHashJoin(ct mc mi_idx t) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%' AND ct.kind = 'production companies'
inner join movie_info_idx AS mi_idx
on mc.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2010
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,147.77,248.73638153076172,461.26651763916016,216.348,248.7356662750244,0.6830199493408767,1.0000028755656478,False,1.8544446180434075,"(((((((k mk) ml) lt) t) mc) cn) ct) NoHashJoin(k lt mk ml t) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(k lt mk ml t) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,434.652,383.7697505950928,710.3531360626221,353.871,383.76903533935547,1.2282781013420145,1.0000018637661496,False,1.8509912750893986,"((((((mi_idx it2) t) ci) n) mi) it1) NoHashJoin(ci it2 mi mi_idx n t it1) NoHashJoin(ci it2 mi_idx n t mi)/*+ NoHashJoin(ci it2 mi_idx n t mi) NoHashJoin(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,834.056,1012.6793384552002,1215.8284187316895,969.875,1012.6783847808838,0.859962366284315,1.0000009417346423,False,1.2006066654565377,"(((((((((k mk) cc) t) cct2) cct1) kt) ci) chn) n) NoHashJoin(cc k mk t cct2) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 cct2 ci k kt mk t chn) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct2 k mk t cct1)/*+ NoHashJoin(k mk) NoHashJoin(cc k mk t cct2) NoMergeJoin(cc cct2 k mk t cct1) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct1 cct2 ci k kt mk t chn) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,4742.094,11825.72340965271,5019.952058792114,11787.336,11825.722694396973,0.40230413386027175,1.0000000604830466,False,0.4244943153597342,"((((((k mk) t) mc) cn) ci) n) NoHashJoin(k mk t) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t n)/*+ NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,1113.94,1891.430139541626,1425.5516529083252,1860.566,1891.4291858673096,0.5987102849347994,1.0000005042083115,False,0.7536902060938868,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(ci cn k mc mk t an) NoHashJoin(k mk) NoMergeJoin(k mk t mc)/*+ NoHashJoin(k mk) NoMergeJoin(k mk t mc) NoHashJoin(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,847.462,5043.772459030151,1317.5084590911865,4944.504,5043.771743774414,0.17139474454869488,1.000000141809696,False,0.26121492526250867,"(((((((((((k mk) cc) t) kt) cct1) cct2) mi_idx) it2) ci) chn) n) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,47.412,90.39425849914551,417.635440826416,45.102,90.3925895690918,1.05121724092058,1.0000184631291311,False,4.6202398096715145,"((((((((cn mc) t) ct) mi) mk) it1) k) at) NoHashJoin(cn ct it1 k mc mi mk t at) NoHashJoin(cn ct it1 mc mi mk t k) NoHashJoin(cn ct mc mi mk t it1) NoHashJoin(cn ct mc mi t mk) NoHashJoin(cn ct mc t mi) NoHashJoin(cn mc t) NoMergeJoin(cn mc t ct)/*+ NoHashJoin(cn mc t) NoMergeJoin(cn mc t ct) NoHashJoin(cn ct mc t mi) NoHashJoin(cn ct mc mi t mk) NoHashJoin(cn ct mc mi mk t it1) NoHashJoin(cn ct it1 mc mi mk t k) NoHashJoin(cn ct it1 k mc mi mk t at) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join keyword AS k
on k.id = mk.keyword_id
inner join aka_title AS at
on mc.movie_id = at.movie_id AND t.id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id;","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,818.006,1600.342035293579,1255.9878826141357,1504.342,1600.339412689209,0.5437633197770187,1.000001638780092,False,0.7848259392072178,"((((((((((k mk) t) mi) mi_idx) it2) it1) mc) ct) cn) kt) NoHashJoin(cn ct it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(k mk t mi) NoMergeJoin(ct it1 it2 k mc mi mi_idx mk t cn) NoMergeJoin(it1 it2 k mi mi_idx mk t mc) NoMergeJoin(it2 k mi mi_idx mk t it1) NoMergeJoin(k mi mi_idx mk t it2) NoNestLoop(it1 it2 k mc mi mi_idx mk t ct)/*+ NoHashJoin(k mk t mi) NoMergeJoin(k mi mi_idx mk t it2) NoMergeJoin(it2 k mi mi_idx mk t it1) NoMergeJoin(it1 it2 k mi mi_idx mk t mc) NoNestLoop(it1 it2 k mc mi mi_idx mk t ct) NoMergeJoin(ct it1 it2 k mc mi mi_idx mk t cn) NoHashJoin(cn ct it1 it2 k mc mi mi_idx mk t kt) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode');","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,811.413,158.69641304016113,981.9996356964111,138.689,158.69474411010742,5.850593774560347,1.0000105166057205,False,6.187978317763749,"(((mk t) k) mi) NoHashJoin(mk t k)/*+ NoHashJoin(mk t k) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,199.44,305.5109977722168,407.44972229003906,278.213,305.509090423584,0.7168608224633644,1.0000062431812755,False,1.333674627243058,"((((mc ct) t) mi) it) NoHashJoin(ct mc mi t it) NoHashJoin(ct mc t mi) NoHashJoin(ct mc t) NoMergeJoin(mc ct)/*+ NoMergeJoin(mc ct) NoHashJoin(ct mc t) NoHashJoin(ct mc t mi) NoHashJoin(ct mc mi t it) */ select min(t.title) AS american_vhs_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%' AND ct.kind = 'production companies'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,356.265,420.7475185394287,686.316967010498,376.891,420.7456111907959,0.9452733018299719,1.0000045332585346,False,1.6311922186617254,"(((((((lt ml) t) ci) n) an) pi) it) NoHashJoin(an ci lt ml n t pi) NoHashJoin(lt ml t) NoMergeJoin(an ci lt ml n pi t it)/*+ NoHashJoin(lt ml t) NoHashJoin(an ci lt ml n t pi) NoMergeJoin(an ci lt ml n pi t it) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.production_year BETWEEN 1980 AND 1984
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = ml.linked_movie_id
inner join name AS n
on ci.person_id = n.id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join aka_name AS an
on n.id = an.person_id AND an.person_id = ci.person_id AND an.name like '%a%'
inner join person_info AS pi
on n.id = pi.person_id AND pi.person_id = an.person_id AND pi.person_id = ci.person_id AND pi.note = 'Volker Boehm'
inner join info_type AS it
on it.id = pi.info_type_id AND it.info = 'mini biography';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,6608.053,7276.620864868164,6971.740961074829,7233.483,7276.619434356689,0.9135368120724138,1.0000001965901182,False,0.9581016327661206,"((((((((k mk) ci) n) mi) it1) mi_idx) t) it2) NoHashJoin(ci it1 k mi mi_idx mk n t) NoHashJoin(ci it1 k mi mk n mi_idx) NoHashJoin(ci k mi mk n it1) NoHashJoin(ci k mk n mi) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(ci k mk n mi) NoHashJoin(ci k mi mk n it1) NoHashJoin(ci it1 k mi mk n mi_idx) NoHashJoin(ci it1 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join cast_info AS ci
on ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,230.847,397.2513675689697,401.95631980895996,385.849,397.2506523132324,0.5982832662518239,1.0000018005149474,False,1.0118455878381216,"(((k mk) t) mi) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,155.342,5532.966613769531,821.8944072723389,546.548,5532.965183258057,0.28422389250349467,1.0000002585433718,False,0.14854501701172296,"((((((((((((((((k mk) cc) t) mi) ci) chn) rt) cct2) n) cct1) pi) it3) it) mc) cn) an) NoHashJoin(cc k mk t) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci it it3 k mc mi mk n pi rt t cn) NoMergeJoin(cc cct1 cct2 chn ci it it3 k mi mk n pi rt t mc) NoMergeJoin(cc cct1 cct2 chn ci k mi mk n pi rt t it3) NoMergeJoin(cc cct1 cct2 chn ci k mi mk n rt t pi)/*+ NoHashJoin(k mk) NoHashJoin(cc k mk t) NoMergeJoin(cc cct1 cct2 chn ci k mi mk n rt t pi) NoMergeJoin(cc cct1 cct2 chn ci k mi mk n pi rt t it3) NoMergeJoin(cc cct1 cct2 chn ci it it3 k mi mk n pi rt t mc) NoMergeJoin(cc cct1 cct2 chn ci it it3 k mc mi mk n pi rt t cn) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join person_info AS pi
on n.id = pi.person_id AND ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1408.515,2315.115213394165,1719.8715209960938,2284.1,2315.1142597198486,0.61666082921063,1.000000411934017,False,0.7428883968794763,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(ci cn k mc mk t an) NoHashJoin(k mk) NoMergeJoin(k mk t mc)/*+ NoHashJoin(k mk) NoMergeJoin(k mk t mc) NoHashJoin(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,37.674,156.4927101135254,383.2356929779053,110.166,156.49175643920898,0.341974837971788,1.0000060940866031,False,2.4489193660931114,"((((((((lt ml) t) mi) mc) cn) ct) mk) k) NoHashJoin(lt ml t) NoMergeJoin(cn ct lt mc mi ml t mk) NoMergeJoin(lt mc mi ml t cn)/*+ NoHashJoin(lt ml t) NoMergeJoin(lt mc mi ml t cn) NoMergeJoin(cn ct lt mc mi ml t mk) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,278.045,443.57991218566895,483.9162826538086,404.193,443.57943534851074,0.6879015717738803,1.0000010749757997,False,1.0909348903282814,"((((ct mc) t) mi) it) NoHashJoin(ct mc mi t it) NoMergeJoin(ct mc)/*+ NoMergeJoin(ct mc) NoHashJoin(ct mc mi t it) */ select min(t.title) AS american_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,325.536,131.78443908691406,530.689001083374,108.736,131.78372383117676,2.9938198940553264,1.0000054274967842,False,4.02696923152073,"((((mi_idx mk) t) k) it) NoHashJoin(k mi_idx mk t it) NoHashJoin(mi_idx mk t k)/*+ NoHashJoin(mi_idx mk t k) NoHashJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join movie_keyword AS mk
on mk.movie_id = mi_idx.movie_id AND mi_idx.info > '9.0'
inner join title AS t
on t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2010
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,916.05,3028.0535221099854,1345.8645343780518,2960.094,3028.0497074127197,0.3094665236982339,1.0000012597868708,False,0.44446579958160903,"((((((((((k mk) t) mi) mi_idx) it2) mc) ct) kt) it1) cn) NoHashJoin(ct it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(ct it2 k kt mc mi mi_idx mk t it1) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mi mi_idx mk t it2)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mi mi_idx mk t it2) NoHashJoin(ct it2 k kt mc mi mi_idx mk t it1) NoHashJoin(ct it1 it2 k kt mc mi mi_idx mk t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,24.308,472.72348403930664,575.2880573272705,48.959,472.72229194641113,0.496497068976082,1.0000025217615411,False,1.2169683281880992,"(((((((((((((lt ml) t2) kt2) mi_idx2) it2) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoHashJoin(kt2 lt mi_idx2 ml t2 it2) NoHashJoin(kt2 lt ml t2 mi_idx2) NoHashJoin(lt ml t2 kt2) NoMergeJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoNestLoop(lt ml)/*+ NoNestLoop(lt ml) NoHashJoin(lt ml t2 kt2) NoHashJoin(kt2 lt ml t2 mi_idx2) NoHashJoin(kt2 lt mi_idx2 ml t2 it2) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,192.903,206.62546157836914,504.6648979187012,174.777,206.62474632263184,1.1037092981341938,1.0000034616170137,False,2.442422347276342,"(((((((t mi_idx) mk) kt) k) mi) it2) it1) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(k kt mi mi_idx mk t it2)/*+ NoHashJoin(k kt mi mi_idx mk t it2) NoHashJoin(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%') AND mi_idx.info > '6.0'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = mi_idx.movie_id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,56.182,151.3831615447998,265.64812660217285,107.32,151.3807773590088,0.5234998136414462,1.0000157495940543,False,1.7548339441550893,"((((((((lt ml) t) mc) cn) ct) mk) k) mi) NoHashJoin(lt ml t) NoMergeJoin(lt ml t mc)/*+ NoHashJoin(lt ml t) NoMergeJoin(lt ml t mc) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,682.809,2671.039819717407,746.7842102050781,2639.086,2671.03910446167,0.25872934796365105,1.0000002677818292,False,0.27958565224959053,"(((((((n an) ci) rt) chn) t) mc) cn) NoHashJoin(an chn ci n rt t) NoMergeJoin(an chn ci n rt t mc)/*+ NoHashJoin(an chn ci n rt t) NoMergeJoin(an chn ci n rt t mc) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,211.556,732.5465679168701,522.1860408782959,678.114,732.5458526611328,0.3119770422082423,1.0000009763972244,False,0.7128373452410399,"(((((((k mk) ml) mc) cn) lt) t) ct) NoHashJoin(cn k lt mc mk ml t) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(cn k lt mc mk ml t) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,404.806,2067.7216053009033,954.1592597961426,1716.01,2067.721128463745,0.23589955769488521,1.0000002306099947,False,0.4614545195004388,"(((((((((((((k mk) cc) t) cct2) mi) mi_idx) it2) mc) cn) cct1) kt) it1) ct) NoHashJoin(cc k mk t) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 cn it2 k kt mc mi mi_idx mk t it1)/*+ NoHashJoin(k mk) NoHashJoin(cc k mk t) NoMergeJoin(cc cct1 cct2 cn it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,3834.802,4133.402109146118,4148.890972137451,4100.673,4133.400440216064,0.9351640572169496,1.0000004037668446,False,1.0037476484907368,"(((((((ci rt) chn) an) mc) cn) t) n)/*+  */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from cast_info AS ci
inner join role_type AS rt
on ci.role_id = rt.id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)') AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f';","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,28.319,374.65906143188477,575.4954814910889,47.789,374.65834617614746,0.5925840674632237,1.0000019090879586,False,1.5360540806436935,"(((((((((((((lt ml) mi_idx2) it2) t2) kt2) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoHashJoin(lt mi_idx2 ml it2) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(lt ml mi_idx2)/*+ NoMergeJoin(lt ml mi_idx2) NoHashJoin(lt mi_idx2 ml it2) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join movie_info_idx AS mi_idx2
on ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.5'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join title AS t2
on t2.id = mi_idx2.movie_id AND t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,4834.53,4021.8780040740967,5181.313514709473,3982.514,4021.876096725464,1.2139392353674086,1.000000474243509,False,1.288282729278508,"((((((((it miidx) t) kt) mc) cn) ct) mi) it2) NoHashJoin(it miidx t) NoHashJoin(it miidx)/*+ NoHashJoin(it miidx) NoHashJoin(it miidx t) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,83.137,293.137788772583,548.4726428985596,201.473,293.1368350982666,0.4126458632174038,1.000003253341792,False,1.8710464780541762,"(((((((((((k mk) cc) t) kt) cct1) mi_idx) cct2) it2) ci) chn) n) NoHashJoin(cc k mk t) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn)/*+ NoHashJoin(cc k mk t) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '8.0'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,159.286,1343.7232971191406,506.8511962890625,1309.807,1343.7223434448242,0.12161028304170003,1.0000007097257264,False,0.377199351310686,"((((((((t kt) miidx) it) mc) ct) cn) mi) it2) NoHashJoin(cn ct it kt mc mi miidx t it2) NoHashJoin(cn ct it kt mc miidx t mi) NoHashJoin(kt miidx t it)/*+ NoHashJoin(kt miidx t it) NoHashJoin(cn ct it kt mc miidx t mi) NoHashJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,688.295,10208.648204803467,1073.3110904693604,10157.513,10208.64725112915,0.06776215792192439,1.0000000934182849,False,0.10513744515470885,"(((((((((n an) ci) chn) mi) rt) it) t) mc) cn) NoHashJoin(an chn ci it mc mi n rt t cn) NoHashJoin(an chn ci it mi n rt t mc) NoHashJoin(an chn ci mi n rt it) NoHashJoin(an chn ci mi n rt) NoHashJoin(an chn ci n mi) NoHashJoin(an ci n chn)/*+ NoHashJoin(an ci n chn) NoHashJoin(an chn ci n mi) NoHashJoin(an chn ci mi n rt) NoHashJoin(an chn ci mi n rt it) NoHashJoin(an chn ci it mi n rt t mc) NoHashJoin(an chn ci it mc mi n rt t cn) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join title AS t
on t.id = ci.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,194.673,229.2804718017578,408.3278179168701,208.296,229.2783260345459,0.9345978799400853,1.0000093587878498,False,1.7809263744159856,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct)/*+ NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,9376.141,6674.763441085815,9653.87225151062,6644.501,6674.762725830078,1.411112888687954,1.0000001071582267,False,1.446324408529452,"((((((mi_idx it2) ci) mi) n) t) it1) NoHashJoin(ci it2 mi mi_idx n t it1) NoHashJoin(ci it2 mi mi_idx n t)/*+ NoHashJoin(ci it2 mi mi_idx n t) NoHashJoin(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,8885.88,9771.302223205566,9169.068098068237,9752.614,9771.30103111267,0.9111280319307213,1.0000001219994032,False,0.9383671702338439,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(k mk)/*+ NoHashJoin(k mk) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,331.339,2660.752773284912,714.2200469970703,2616.249,2660.7518196105957,0.12664658448029986,1.000000358422875,False,0.2684279088838873,"(((((((((n ci) mk) cc) cct1) k) cct2) t) chn) kt) NoHashJoin(cc cct1 cct2 chn ci k mk n t kt) NoHashJoin(cc cct1 cct2 ci k mk n t chn) NoHashJoin(cc cct1 cct2 ci k mk n t) NoHashJoin(cc cct1 ci k mk n cct2) NoHashJoin(cc cct1 ci mk n k) NoHashJoin(cc ci mk n cct1)/*+ NoHashJoin(cc ci mk n cct1) NoHashJoin(cc cct1 ci mk n k) NoHashJoin(cc cct1 ci k mk n cct2) NoHashJoin(cc cct1 cct2 ci k mk n t) NoHashJoin(cc cct1 cct2 ci k mk n t chn) NoHashJoin(cc cct1 cct2 chn ci k mk n t kt) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on mk.movie_id = ci.movie_id
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id AND ci.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,567.829,859.5142364501953,759.4711780548096,829.482,859.513521194458,0.684558555821585,1.0000008321634501,False,0.8836058529938883,"(((((((k mk) t) mi) mi_idx) it2) it1) kt) NoHashJoin(k mk t) NoMergeJoin(it1 it2 k mi mi_idx mk t kt) NoMergeJoin(it2 k mi mi_idx mk t it1) NoMergeJoin(k mi mi_idx mk t it2)/*+ NoHashJoin(k mk t) NoMergeJoin(k mi mi_idx mk t it2) NoMergeJoin(it2 k mi mi_idx mk t it1) NoMergeJoin(it1 it2 k mi mi_idx mk t kt) */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode');","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,32.022,61.72609329223633,238.8012409210205,38.339,61.72513961791992,0.8352330525052818,1.0000154503387486,False,3.868784135592173,"((((mk k) ci) n) t) NoHashJoin(ci k mk n t)/*+ NoHashJoin(ci k mk n t) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join title AS t
on t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,16828.074,20912.994861602783,17140.18964767456,20876.243,20912.993907928467,0.8060872830422601,1.0000000456019984,False,0.8195952106683504,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(ci cn k mc mk t an) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,916.979,2045.5243587493896,1201.0412216186523,2012.594,2045.5231666564941,0.4556204579761243,1.00000058278142,False,0.5871560103529954,"(((((((it2 mi_idx) t) mi) it1) mc) ct) cn) NoHashJoin(ct it1 it2 mc mi mi_idx t cn) NoHashJoin(it1 it2 mi mi_idx t mc) NoHashJoin(it2 mi mi_idx t it1) NoHashJoin(it2 mi_idx t mi) NoNestLoop(it1 it2 mc mi mi_idx t ct)/*+ NoHashJoin(it2 mi_idx t mi) NoHashJoin(it2 mi mi_idx t it1) NoHashJoin(it1 it2 mi mi_idx t mc) NoNestLoop(it1 it2 mc mi mi_idx t ct) NoHashJoin(ct it1 it2 mc mi mi_idx t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,29.904,203.55606079101562,492.04134941101074,74.068,203.55486869812012,0.4037371064427283,1.000005856371322,False,2.4172418599366807,"(((((((((((lt ml) cc) cct1) cct2) mc) cn) ct) t) mk) k) mi) NoMergeJoin(cc cct1 cct2 cn ct lt mc ml t mk) NoMergeJoin(cc cct1 cct2 lt ml mc)/*+ NoMergeJoin(cc cct1 cct2 lt ml mc) NoMergeJoin(cc cct1 cct2 cn ct lt mc ml t mk) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join title AS t
on t.id = mc.movie_id AND t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,3140.883,4402.7087688446045,3419.1675186157227,4376.881,4402.708053588867,0.7176075840307287,1.0000001624581345,False,0.7766055520825617,"((((((rt ci) an1) mc) cn) t) n1) NoMergeJoin(an1 ci rt mc)/*+ NoMergeJoin(an1 ci rt mc) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,3968.403,5814.096212387085,4173.880815505981,5792.294,5814.095735549927,0.6851176753113706,1.0000000820139847,False,0.7178899360024374,"((((k mk) t) ci) n) NoHashJoin(k mk t) NoMergeJoin(ci k mk t n)/*+ NoHashJoin(k mk t) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,42.795,990.5998706817627,252.9582977294922,964.729,990.5991554260254,0.04435960772403442,1.0000007220435565,False,0.2553588869361622,"((((cn mc) mk) k) t) NoHashJoin(cn k mc mk t) NoHashJoin(cn mc mk k)/*+ NoHashJoin(cn mc mk k) NoHashJoin(cn k mc mk t) */ select min(t.title) AS movie_title
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,3697.795,7356.929302215576,3976.0992527008057,7322.837,7356.928825378418,0.5049675419512957,1.0000000648147032,False,0.5404563979176851,"((((((n ci) mk) t) k) mc) cn) NoHashJoin(ci mk n t k) NoHashJoin(ci mk n t)/*+ NoHashJoin(ci mk n t) NoHashJoin(ci mk n t k) */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ci.movie_id = t.id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,5204.62,6437.629222869873,5482.809782028198,6411.656,6437.628269195557,0.8117434871739844,1.0000001481406313,False,0.8516816368947205,"((((((rt ci) a1) mc) cn) t) n1) NoMergeJoin(a1 ci rt mc)/*+ NoMergeJoin(a1 ci rt mc) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'writer'
inner join aka_name AS a1
on a1.person_id = ci.person_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join name AS n1
on n1.id = ci.person_id AND a1.person_id = n1.id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,2204.504,3383.7902545928955,2666.7909622192383,3263.655,3383.789539337158,0.6754709060853552,1.0000002113771347,False,0.7881078096664454,"(((((((((((k mk) cc) cct2) ci) n) mi) mi_idx) it2) cct1) it1) t) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n it1)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join cast_info AS ci
on ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,132.742,169.86513137817383,343.8153266906738,156.806,169.86393928527832,0.8465364845732942,1.000007017927999,False,2.0240630715225114,"((((k mk) t) mi_idx) it) NoHashJoin(k mi_idx mk t it) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,28.467,50.894737243652344,244.01235580444336,25.731,50.89402198791504,1.1063308849247988,1.0000140538261542,False,4.794519007799874,"((((mk t) k) ci) n) NoHashJoin(mk t)/*+ NoHashJoin(mk t) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,150.155,216.31693840026855,461.41815185546875,187.253,216.31550788879395,0.8018830138902983,1.0000066130786858,False,2.133079391111802,"(((((((mi_idx it2) mc) ct) cn) t) mi) it1)/*+  */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from movie_info_idx AS mi_idx
inner join info_type AS it2
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,302.452,6127.14958190918,508.9991092681885,6087.617,6127.148866653442,0.04968315188028419,1.000000116735492,False,0.08307275053138968,"((((n ci) mk) t) k) NoHashJoin(ci mk n t) NoHashJoin(ci n mk)/*+ NoHashJoin(ci n mk) NoHashJoin(ci mk n t) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence');","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,56.351,531.1548709869385,521.3356018066406,369.648,531.1541557312012,0.15244502878414057,1.0000013466066857,False,0.9815146811549577,"(((((((((((cn mc) mk) t) k) mi) ci) chn) rt) it) an) n) NoHashJoin(an chn ci cn it k mc mi mk rt t n) NoHashJoin(chn ci cn k mc mi mk t rt) NoHashJoin(ci cn k mc mi mk t chn) NoHashJoin(cn k mc mk t mi) NoMergeJoin(chn ci cn k mc mi mk rt t it)/*+ NoHashJoin(cn k mc mk t mi) NoHashJoin(ci cn k mc mi mk t chn) NoHashJoin(chn ci cn k mc mi mk t rt) NoMergeJoin(chn ci cn k mc mi mk rt t it) NoHashJoin(an chn ci cn it k mc mi mk rt t n) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,17.997,34.459590911865234,222.8245735168457,15.677,34.45911407470703,1.1479874976079607,1.000013837766031,False,6.466346553012482,"((((mk t) k) ci) n) NoHashJoin(mk t)/*+ NoHashJoin(mk t) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,189.001,1418.3921813964844,534.8610877990723,1387.02,1418.391466140747,0.13626407694193307,1.0000005042724482,False,0.3770898941279995,"((((((((t kt) miidx) it) mc) ct) cn) mi) it2) NoHashJoin(cn ct it kt mc mi miidx t it2) NoHashJoin(cn ct it kt mc miidx t mi) NoHashJoin(kt miidx t it)/*+ NoHashJoin(kt miidx t it) NoHashJoin(cn ct it kt mc miidx t mi) NoHashJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,4814.655,7628.946542739868,5090.550184249878,7592.011,7628.945827484131,0.6341738704013995,1.000000093755514,False,0.6672678374396894,"((((((n ci) mk) t) k) mc) cn) NoHashJoin(ci mk n t k) NoHashJoin(ci mk n t)/*+ NoHashJoin(ci mk n t) NoHashJoin(ci mk n t k) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'Z%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ci.movie_id = t.id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,84.05,256.9136619567871,505.4798126220703,171.25,256.9127082824707,0.4908029197080292,1.0000037120558294,False,1.9675157994376236,"((((((((((cn mc) mi_idx) it2) mi) ci) n) mk) k) it1) t) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk n t) NoHashJoin(ci cn it2 k mc mi mi_idx mk n it1) NoHashJoin(ci cn it2 mc mi mi_idx mk n k) NoMergeJoin(cn mc mi_idx it2) NoMergeJoin(cn mc mi_idx)/*+ NoMergeJoin(cn mc mi_idx) NoMergeJoin(cn mc mi_idx it2) NoHashJoin(ci cn it2 mc mi mi_idx mk n k) NoHashJoin(ci cn it2 k mc mi mi_idx mk n it1) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,249.976,2152.1167755126953,801.9242286682129,1792.402,2152.116298675537,0.13946424964935322,1.0000002215666313,False,0.3726212329518325,"(((((((((((((k mk) cc) t) cct2) mi) mi_idx) it2) cct1) it1) mc) cn) kt) ct) NoHashJoin(cc cct1 cct2 cn it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(cc cct2 k mi mi_idx mk t it2) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1)/*+ NoHashJoin(k mk) NoHashJoin(cc cct2 k mi mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 cn it1 it2 k mc mi mi_idx mk t kt) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,142.951,470.17717361450195,488.9178276062012,429.494,470.17669677734375,0.3328358486963729,1.0000010141658688,False,1.0398597611436546,"((((((((t mi_idx) mk) k) mi) ci) n) it1) it2) NoHashJoin(ci it1 k mi mi_idx mk n t it2) NoHashJoin(ci k mi mi_idx mk n t it1) NoHashJoin(ci k mi mi_idx mk t n) NoHashJoin(k mi mi_idx mk t ci) NoHashJoin(k mi_idx mk t mi) NoHashJoin(mi_idx mk t k)/*+ NoHashJoin(mi_idx mk t k) NoHashJoin(k mi_idx mk t mi) NoHashJoin(k mi mi_idx mk t ci) NoHashJoin(ci k mi mi_idx mk t n) NoHashJoin(ci k mi mi_idx mk n t it1) NoHashJoin(ci it1 k mi mi_idx mk n t it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info = 'Horror'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,455.133,7953.122138977051,729.6903133392334,7926.64,7953.121662139893,0.05741814943027562,1.0000000599559744,False,0.09174891876894796,"((((((n ci) mk) t) k) mc) cn) NoHashJoin(ci mk n t k) NoHashJoin(ci mk n t)/*+ NoHashJoin(ci mk n t) NoHashJoin(ci mk n t k) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ci.movie_id = t.id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,525.142,966.7792320251465,730.1161289215088,945.158,966.7785167694092,0.555612923976732,1.0000007398341242,False,0.7552051646340546,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,122.128,248.40974807739258,399.08337593078613,221.97,248.40927124023438,0.5502004775420102,1.0000019195626468,False,1.606555882307775,"((((((t mc) cn) ci) an) rt) n)/*+  */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%') AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mc.movie_id AND ci.note = '(voice: English version)'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,47.416,169.2967414855957,495.1760768890381,17.057,169.2960262298584,2.7798557776865804,1.0000042248820202,False,2.924912580149533,"(((((((((((lt ml) t) mc) cn) ct) mi) mk) k) cc) cct2) cct1) NoHashJoin(lt ml t) NoNestLoop(lt ml)/*+ NoNestLoop(lt ml) NoHashJoin(lt ml t) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join complete_cast AS cc
on t.id = cc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = cc.movie_id AND ml.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,2863.788,5129.03618812561,3069.8273181915283,5068.25,5129.035711288452,0.5650447393084398,1.0000000929681885,False,0.5985193886318964,"((((((ci t) rt) chn) mc) cn) ct) NoHashJoin(ci rt t chn) NoNestLoop(chn ci cn mc rt t ct)/*+ NoHashJoin(ci rt t chn) NoNestLoop(chn ci cn mc rt t ct) */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note like '%(producer)%' AND t.production_year > 1990
inner join role_type AS rt
on rt.id = ci.role_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,201.656,186.47050857543945,442.16346740722656,162.144,186.46931648254395,1.2436846260114467,1.0000063929708007,False,2.3712398143992717,"(((((k mk) t1) ml) lt) t2) NoNestLoop(k mk ml t1 lt)/*+ NoNestLoop(k mk ml t1 lt) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,349.006,2302.312135696411,661.9503498077393,2232.44,2302.311420440674,0.1563338768343158,1.0000003106685442,False,0.2875155567273513,"(((((((n ci) t) mc) cn) chn) rt) an) NoHashJoin(chn ci cn mc n rt t an) NoHashJoin(ci cn mc n t chn) NoHashJoin(ci n t) NoMergeJoin(chn ci cn mc n t rt) NoMergeJoin(ci mc n t cn) NoMergeJoin(ci n t mc)/*+ NoHashJoin(ci n t) NoMergeJoin(ci n t mc) NoMergeJoin(ci mc n t cn) NoHashJoin(ci cn mc n t chn) NoMergeJoin(chn ci cn mc n t rt) NoHashJoin(chn ci cn mc n rt t an) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%' AND ci.note = '(voice)'
inner join title AS t
on ci.movie_id = t.id AND t.production_year BETWEEN 2007 AND 2010
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
