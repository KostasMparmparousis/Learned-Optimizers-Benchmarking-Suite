filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,335.701,674.3595600128174,777.1730422973633,592.709,674.3576526641846,0.5663841784079541,1.0000028283932498,False,1.1524641845866004,"((((((((((cn mc) mi) it1) ci) n) mi_idx) it2) t) mk) k) NoHashJoin(ci cn it1 mc mi n) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoMergeJoin(cn it1 mc mi ci) NoNestLoop(ci cn it1 it2 mc mi mi_idx mk n t k) NoNestLoop(cn mc mi it1)/*+ NoNestLoop(cn mc mi it1) NoMergeJoin(cn it1 mc mi ci) NoHashJoin(ci cn it1 mc mi n) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoNestLoop(ci cn it1 it2 mc mi mi_idx mk n t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,2569.409,4087.2292518615723,2922.3556518554688,4053.487,4087.2275829315186,0.6338762157125458,1.0000004083281442,False,0.7149970469125289,"(((((((it pi) an) n) ci) ml) lt) t) NoMergeJoin(an ci it lt ml n pi t) NoMergeJoin(an ci it ml n pi lt)/*+ NoMergeJoin(an ci it ml n pi lt) NoMergeJoin(an ci it lt ml n pi t) */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join name AS n
on n.id = an.person_id AND n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'))
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in')
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010;","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,148.603,305.32288551330566,427.84690856933594,274.653,305.32169342041016,0.5410572613443144,1.0000039043832167,False,1.4012987540332278,"((((((cn mc) t) ci) rt) ct) chn) NoHashJoin(ci cn mc rt t ct) NoMergeJoin(ci cn ct mc rt t chn) NoMergeJoin(ci cn mc t rt)/*+ NoMergeJoin(ci cn mc t rt) NoHashJoin(ci cn mc rt t ct) NoMergeJoin(ci cn ct mc rt t chn) */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,527.703,1372.5194931030273,890.3439044952393,1327.554,1372.5178241729736,0.3975002146805327,1.0000012159623899,False,0.6486938739988504,"((((((((it1 mi) at) mk) k) mc) cn) ct) t) NoHashJoin(it1 mi at) NoMergeJoin(at cn ct it1 k mc mi mk t) NoMergeJoin(at it1 k mi mk mc)/*+ NoHashJoin(it1 mi at) NoMergeJoin(at it1 k mi mk mc) NoMergeJoin(at cn ct it1 k mc mi mk t) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join movie_keyword AS mk
on mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,29.071,4159.345626831055,702.5055885314941,36.001,4159.344434738159,0.8075053470736925,1.0000002866059579,False,0.16889815199344474,"((((((((((((((((k mk) cc) cct2) t) cct1) mi) ci) rt) pi) an) it) it3) n) chn) mc) cn) NoHashJoin(k mk) NoNestLoop(an cc cct1 cct2 ci it k mi mk pi rt t it3) NoNestLoop(an cc cct1 cct2 ci k mi mk pi rt t it) NoNestLoop(cc cct1 cct2 ci k mi mk t rt)/*+ NoHashJoin(k mk) NoNestLoop(cc cct1 cct2 ci k mi mk t rt) NoNestLoop(an cc cct1 cct2 ci k mi mk pi rt t it) NoNestLoop(an cc cct1 cct2 ci it k mi mk pi rt t it3) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info like 'USA:%200%'
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height'
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,342.365,726.2673377990723,819.1182613372803,585.987,726.2659072875977,0.5842535755912674,1.0000019696800584,False,1.1278489780643297,"(((((((((((k mk) cc) cct2) mi_idx) it2) t) cct1) mi) it1) ci) n) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it2 k mi_idx mk t mi) NoHashJoin(cc cct2 k mk mi_idx) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t ci) NoMergeJoin(cc cct2 it2 k mi_idx mk t cct1) NoMergeJoin(cc cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct2 k mi_idx mk it2) NoMergeJoin(cc k mk cct2)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct2) NoHashJoin(cc cct2 k mk mi_idx) NoMergeJoin(cc cct2 k mi_idx mk it2) NoMergeJoin(cc cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct2 it2 k mi_idx mk t cct1) NoHashJoin(cc cct1 cct2 it2 k mi_idx mk t mi) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,11541.682,12675.86874961853,11723.307132720947,12621.243,12675.866842269897,0.9144647638905297,1.0000001504708638,False,0.9248524995251234,"(((((((((rt ci) an) n) t) mi) chn) it) mc) cn) NoHashJoin(an ci n rt t mi) NoMergeJoin(an chn ci it mi n rt t mc) NoNestLoop(an chn ci mi n rt t it)/*+ NoHashJoin(an ci n rt t mi) NoNestLoop(an chn ci mi n rt t it) NoMergeJoin(an chn ci it mi n rt t mc) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f'
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,840.009,791.9337749481201,1051.4142513275146,752.763,791.9316291809082,1.1159010206399624,1.0000027095359407,False,1.327657859069208,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,408.585,793.2233810424805,770.4036235809326,747.424,793.2217121124268,0.5466575865907437,1.0000021039893743,False,0.9712336561353984,"((((((((it1 mi) at) mk) k) mc) cn) ct) t) NoHashJoin(it1 mi at) NoMergeJoin(at cn ct it1 k mc mi mk t) NoMergeJoin(at cn it1 k mc mi mk ct) NoMergeJoin(at it1 k mi mk mc)/*+ NoHashJoin(it1 mi at) NoMergeJoin(at it1 k mi mk mc) NoMergeJoin(at cn it1 k mc mi mk ct) NoMergeJoin(at cn ct it1 k mc mi mk t) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join movie_keyword AS mk
on mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,42.741,145.34521102905273,481.8153381347656,77.149,145.34354209899902,0.5540058847165874,1.000011482657087,False,3.3150102933818886,"((((((((((k mk) cc) cct1) t) mi) kt) mc) cn) it1) ct) NoHashJoin(cc cct1 cn it1 k kt mc mi mk t ct) NoHashJoin(k mk) NoMergeJoin(cc cct1 k kt mc mi mk t cn) NoMergeJoin(cc cct1 k kt mi mk t mc) NoMergeJoin(cc cct1 k mk t mi) NoMergeJoin(cc k mk cct1) NoNestLoop(cc cct1 k mi mk t kt)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mk t mi) NoNestLoop(cc cct1 k mi mk t kt) NoMergeJoin(cc cct1 k kt mi mk t mc) NoMergeJoin(cc cct1 k kt mc mi mk t cn) NoHashJoin(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,424.42,826.4560699462891,864.0148639678955,756.62,826.4541625976562,0.560942084533848,1.0000023078698361,False,1.045448015231941,"((((((((((it1 mi) cc) mk) cct1) k) mc) cn) ct) t) kt) NoMergeJoin(cc cct1 cn ct it1 k mc mi mk t) NoMergeJoin(cc cct1 cn it1 k mc mi mk ct) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc it1 mi mk cct1) NoNestLoop(cc cct1 cn ct it1 k mc mi mk t kt)/*+ NoMergeJoin(cc it1 mi mk cct1) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 cn it1 k mc mi mk ct) NoMergeJoin(cc cct1 cn ct it1 k mc mi mk t) NoNestLoop(cc cct1 cn ct it1 k mc mi mk t kt) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.production_year > 1990
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game');","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,6.654,92.27395057678223,328.6457061767578,59.813,92.27228164672852,0.1112467189406985,1.0000180870140407,False,3.5616948048927957,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(lt ml t mc)/*+ NoMergeJoin(lt ml t mc) NoMergeJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,259.271,450.83045959472656,698.8735198974609,372.788,450.82902908325195,0.6954918076762128,1.0000031730686854,False,1.5501963600671422,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) ct) cn) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(k mk) NoNestLoop(it2 k kt mi mi_idx mk t it1)/*+ NoHashJoin(k mk) NoNestLoop(it2 k kt mi mi_idx mk t it1) NoHashJoin(it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,187.434,209.80048179626465,405.1666259765625,186.695,209.79881286621094,1.003958327753823,1.0000079549070413,False,1.931215055229783,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct)/*+ NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,151.595,279.7887325286865,549.3321418762207,222.656,279.7870635986328,0.6808484837597011,1.000005965000784,False,1.9633936423317357,"(((((((((t mi) it) ci) an) chn) rt) n) mc) cn) NoHashJoin(ci it mi t an) NoHashJoin(mi t it) NoMergeJoin(an chn ci it mi t rt)/*+ NoHashJoin(mi t it) NoHashJoin(ci it mi t an) NoMergeJoin(an chn ci it mi t rt) */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from title AS t
inner join movie_info AS mi
on t.id = mi.movie_id AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%' AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join cast_info AS ci
on t.id = ci.movie_id AND mi.movie_id = ci.movie_id AND ci.note = '(voice)'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,3.849,224.34544563293457,216.38011932373047,202.212,224.34425354003906,0.019034478665954545,1.0000053136769795,False,0.9645003868356841,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,238.765,248.73685836791992,555.696964263916,216.348,248.7356662750244,1.1036154713701998,1.0000047926094129,False,2.234086380075014,"(((((((k mk) ml) lt) mc) cn) t) ct) NoHashJoin(k mk ml) NoMergeJoin(cn k lt mc mk ml t) NoMergeJoin(k lt mk ml mc)/*+ NoHashJoin(k mk ml) NoMergeJoin(k lt mk ml mc) NoMergeJoin(cn k lt mc mk ml t) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,740.296,383.7707042694092,1013.6222839355469,353.871,383.76903533935547,2.0919939752056544,1.0000043487876822,False,2.641229986257831,"((((((it2 mi_idx) t) ci) mi) it1) n) NoHashJoin(ci it1 it2 mi mi_idx t n) NoHashJoin(ci it2 mi mi_idx t it1) NoHashJoin(ci it2 mi_idx t mi) NoHashJoin(it2 mi_idx t ci)/*+ NoHashJoin(it2 mi_idx t ci) NoHashJoin(ci it2 mi_idx t mi) NoHashJoin(ci it2 mi mi_idx t it1) NoHashJoin(ci it1 it2 mi mi_idx t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from info_type AS it2
inner join movie_info_idx AS mi_idx
on it2.id = mi_idx.info_type_id AND it2.info = 'rating' AND mi_idx.info > '8.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,1311.711,1012.6798152923584,1719.118356704712,969.875,1012.6783847808838,1.3524536667096276,1.0000014126019634,False,1.6975955866547725,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoHashJoin(cc cct1 cct2 k mk t kt) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 cct2 k mk t) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc k mk cct2)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 k mk t) NoHashJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,4752.398,11825.723886489868,5031.140327453613,11787.336,11825.722694396973,0.4031782923639404,1.0000001008050778,False,0.42544041133632937,"((((((k mk) t) mc) cn) ci) n) NoHashJoin(k mk t) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t n)/*+ NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,833.546,1891.430377960205,1156.6014289855957,1860.566,1891.4291858673096,0.4480066818376774,1.0000006302603897,False,0.6114960251368011,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,1450.811,5043.773174285889,1932.8677654266357,4944.504,5043.771743774414,0.29341891522385255,1.0000002836193917,False,0.38321872273708596,"(((((((((((k mk) cc) t) kt) mi_idx) cct2) cct1) it2) ci) chn) n) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,52.865,90.39425849914551,436.21349334716797,45.102,90.3925895690918,1.172120970245222,1.0000184631291311,False,4.8257660879794475,"((((((((cn mc) mi) it1) at) mk) k) ct) t) NoHashJoin(at cn it1 k mc mi mk ct) NoHashJoin(cn it1 mc mi at) NoMergeJoin(cn mc mi)/*+ NoMergeJoin(cn mc mi) NoHashJoin(cn it1 mc mi at) NoHashJoin(at cn it1 k mc mi mk ct) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join aka_title AS at
on mc.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year BETWEEN 2005 AND 2010;","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,1059.618,1600.341796875,1507.134199142456,1504.342,1600.339412689209,0.7043730747396535,1.0000014898000837,False,0.9417590963468612,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) cn) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoMergeJoin(it1 it2 k kt mi mi_idx mk t mc) NoMergeJoin(it2 k kt mi_idx mk t mi) NoNestLoop(it2 k kt mi mi_idx mk t it1)/*+ NoMergeJoin(it2 k kt mi_idx mk t mi) NoNestLoop(it2 k kt mi mi_idx mk t it1) NoMergeJoin(it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,114.902,158.69641304016113,287.7161502838135,138.689,158.69474411010742,0.8284867581423184,1.0000105166057205,False,1.8130162526629547,"(((k mk) t) mi) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mk t mi)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mi) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,263.238,305.5105209350586,475.1291275024414,278.213,305.509090423584,0.946174334053405,1.0000046823859565,False,1.5552045500305136,"((((mc ct) mi) it) t) NoHashJoin(ct mc mi it) NoHashJoin(mc ct)/*+ NoHashJoin(mc ct) NoHashJoin(ct mc mi it) */ select min(t.title) AS american_vhs_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%' AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year > 2010;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,147.254,420.7472801208496,473.53315353393555,376.891,420.7456111907959,0.3907071275249342,1.0000039666012177,False,1.1254618965453738,"(((((((it pi) an) n) ci) t) ml) lt) NoHashJoin(an ci it n pi t) NoNestLoop(an ci it ml n pi t lt)/*+ NoHashJoin(an ci it n pi t) NoNestLoop(an ci it ml n pi t lt) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name like '%a%'
inner join name AS n
on n.id = an.person_id AND n.id = pi.person_id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1984
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id AND ml.linked_movie_id = t.id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,6766.812,7276.621103286743,7133.216381072998,7233.483,7276.619434356689,0.9354846067931589,1.000000229355138,False,0.9802926270121244,"((((((((mk k) mi) it1) ci) n) mi_idx) it2) t) NoHashJoin(ci it1 k mi mk n mi_idx) NoHashJoin(ci it1 k mi mk n) NoHashJoin(k mi mk it1) NoHashJoin(k mk mi) NoHashJoin(mk k) NoMergeJoin(ci it1 it2 k mi mi_idx mk n t) NoMergeJoin(ci it1 k mi mi_idx mk n it2)/*+ NoHashJoin(mk k) NoHashJoin(k mk mi) NoHashJoin(k mi mk it1) NoHashJoin(ci it1 k mi mk n) NoHashJoin(ci it1 k mi mk n mi_idx) NoMergeJoin(ci it1 k mi mi_idx mk n it2) NoMergeJoin(ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,364.956,397.25303649902344,540.961503982544,385.849,397.2506523132324,0.9458518746970966,1.000006001716491,False,1.3617636644080207,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,487.149,5532.966613769531,1156.0113430023193,546.548,5532.965183258057,0.8913197011058498,1.0000002585433718,False,0.20893161346835157,"((((((((((((((((k mk) cc) cct1) t) mi) ci) rt) pi) an) n) cct2) it3) it) chn) mc) cn) NoHashJoin(an cc cct1 cct2 ci it it3 k mi mk n pi rt t chn) NoHashJoin(cc cct1 k mk t mi) NoHashJoin(k mk) NoMergeJoin(an cc cct1 cct2 chn ci it it3 k mi mk n pi rt t mc) NoMergeJoin(an cc cct1 ci k mi mk n pi rt t cct2) NoMergeJoin(cc k mk cct1) NoNestLoop(an cc cct1 cct2 ci it3 k mi mk n pi rt t it) NoNestLoop(an cc cct1 cct2 ci k mi mk n pi rt t it3) NoNestLoop(cc cct1 ci k mi mk t rt)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct1) NoHashJoin(cc cct1 k mk t mi) NoNestLoop(cc cct1 ci k mi mk t rt) NoMergeJoin(an cc cct1 ci k mi mk n pi rt t cct2) NoNestLoop(an cc cct1 cct2 ci k mi mk n pi rt t it3) NoNestLoop(an cc cct1 cct2 ci it3 k mi mk n pi rt t it) NoHashJoin(an cc cct1 cct2 ci it it3 k mi mk n pi rt t chn) NoMergeJoin(an cc cct1 cct2 chn ci it it3 k mi mk n pi rt t mc) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1255.326,2315.1156902313232,1572.5924968719482,2284.1,2315.1142597198486,0.5495932752506458,1.0000006179010252,False,0.679272087876236,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,38.142,156.4955711364746,403.61618995666504,110.166,156.49175643920898,0.346222972604978,1.0000243763464123,False,2.579153043843906,"((((((((lt ml) t) mi) mc) cn) ct) mk) k) NoMergeJoin(cn ct lt mc mi mk ml t k) NoMergeJoin(lt mi ml t mc)/*+ NoMergeJoin(lt mi ml t mc) NoMergeJoin(cn ct lt mc mi mk ml t k) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,273.46,443.58110427856445,481.1246395111084,404.193,443.57943534851074,0.6765579809645392,1.0000037624152986,False,1.0846414445094805,"((((ct mc) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,80.681,131.78515434265137,286.334753036499,108.736,131.78372383117676,0.7419897733961153,1.0000108549935685,False,2.1727626501381296,"((((mk k) t) mi_idx) it) NoHashJoin(k mk t) NoHashJoin(mk k) NoMergeJoin(k mi_idx mk t it) NoMergeJoin(k mk t mi_idx)/*+ NoHashJoin(mk k) NoHashJoin(k mk t) NoMergeJoin(k mk t mi_idx) NoMergeJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '9.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,541.503,3028.0513763427734,982.7461242675781,2960.094,3028.0497074127197,0.18293439329967226,1.000000551156756,False,0.32454755345059166,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) cn) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(k mk) NoNestLoop(it2 k kt mi mi_idx mk t it1)/*+ NoHashJoin(k mk) NoNestLoop(it2 k kt mi mi_idx mk t it1) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,17.881,472.72396087646484,571.4869499206543,48.959,472.72229194641113,0.3652239629077391,1.0000035304661576,False,1.2089274393377651,"(((((((((((((lt ml) t2) kt2) mi_idx2) it2) t1) kt1) mi_idx1) it1) mc2) cn2) mc1) cn1) NoHashJoin(it2 kt1 kt2 lt mi_idx2 ml t1 t2 mi_idx1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 it1) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 t1) NoMergeJoin(kt2 lt mi_idx2 ml t2 it2) NoMergeJoin(kt2 lt ml t2 mi_idx2) NoMergeJoin(lt ml t2 kt2)/*+ NoMergeJoin(lt ml t2 kt2) NoMergeJoin(kt2 lt ml t2 mi_idx2) NoMergeJoin(kt2 lt mi_idx2 ml t2 it2) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 t1) NoHashJoin(it2 kt1 kt2 lt mi_idx2 ml t1 t2 mi_idx1) NoMergeJoin(it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 it1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join title AS t1
on t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_info_idx AS mi_idx1
on t1.id = mi_idx1.movie_id AND ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]';","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,109.887,206.62689208984375,425.72784423828125,174.777,206.62474632263184,0.6287268919823548,1.0000103848510409,False,2.0603913704195596,"(((((((k mk) t) kt) mi_idx) mi) it1) it2) NoHashJoin(it1 k kt mi mi_idx mk t it2) NoHashJoin(k mk t kt) NoHashJoin(k mk) NoMergeJoin(k kt mi_idx mk t mi)/*+ NoHashJoin(k mk) NoHashJoin(k mk t kt) NoMergeJoin(k kt mi_idx mk t mi) NoHashJoin(it1 k kt mi mi_idx mk t it2) */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.0'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,41.986,151.3831615447998,402.62365341186523,107.32,151.3807773590088,0.391222512113306,1.0000157495940543,False,2.6596748968795327,"((((((((lt ml) mk) k) t) mc) cn) ct) mi) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(k lt mc mk ml t cn) NoMergeJoin(k lt mk ml t mc) NoMergeJoin(lt ml mk)/*+ NoMergeJoin(lt ml mk) NoMergeJoin(k lt mk ml t mc) NoHashJoin(k lt mc mk ml t cn) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_keyword AS mk
on ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,687.795,2671.0410118103027,1004.4100284576416,2639.086,2671.03910446167,0.2606186384225448,1.000000714084878,False,0.37603718597001734,"(((((((n an) ci) rt) chn) t) mc) cn) NoMergeJoin(an chn ci n rt t mc) NoMergeJoin(an chn ci n rt t) NoMergeJoin(an ci n rt chn) NoMergeJoin(an ci n rt)/*+ NoMergeJoin(an ci n rt) NoMergeJoin(an ci n rt chn) NoMergeJoin(an chn ci n rt t) NoMergeJoin(an chn ci n rt t mc) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,172.184,732.5475215911865,488.9090061187744,678.114,732.5458526611328,0.2539160082228062,1.0000022782601903,False,0.6674107898402614,"(((((((k mk) ml) t) lt) mc) cn) ct) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,319.314,2067.722797393799,871.7942237854004,1716.01,2067.721128463745,0.18607933520200934,1.000000807134981,False,0.4216207939187222,"(((((((((((((k mk) cc) t) cct2) mi_idx) it2) mi) it1) kt) cct1) mc) cn) ct) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct2 it2 k mi_idx mk t mi) NoHashJoin(k mk) NoMergeJoin(cc k mk t cct2)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk t cct2) NoHashJoin(cc cct2 it2 k mi_idx mk t mi) NoHashJoin(cc cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,3590.977,4133.402109146118,3915.1337146759033,4100.673,4133.400440216064,0.8757043051225982,1.0000004037668446,False,0.9471943914708754,"(((((((rt ci) an) n) mc) cn) chn) t) NoMergeJoin(an chn ci cn mc n rt t) NoMergeJoin(an ci cn mc n rt chn) NoMergeJoin(an ci n rt mc)/*+ NoMergeJoin(an ci n rt mc) NoMergeJoin(an ci cn mc n rt chn) NoMergeJoin(an chn ci cn mc n rt t) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id;","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,31.415,374.6602535247803,583.688497543335,47.789,374.65834617614746,0.6573688505723074,1.0000050909012232,False,1.5579220468477457,"(((((((((((((lt ml) t2) mi_idx2) it2) kt2) mi_idx1) it1) t1) kt1) mc2) cn2) mc1) cn1) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(lt mi_idx2 ml t2 it2)/*+ NoMergeJoin(lt mi_idx2 ml t2 it2) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.5'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode')
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]';","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,2841.437,4021.8796730041504,3200.623035430908,3982.514,4021.876096725464,0.7134782200389,1.0000008892065793,False,0.7958034903255213,"((((((((it miidx) t) kt) mc) cn) ct) mi) it2) NoNestLoop(cn it kt mc miidx t ct)/*+ NoNestLoop(cn it kt mc miidx t ct) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,89.836,293.1385040283203,565.8328533172607,201.473,293.1368350982666,0.4458959761357601,1.000005693348136,False,1.9302686853652486,"(((((((((((k mk) cc) t) kt) mi_idx) cct1) cct2) it2) ci) chn) n) NoHashJoin(cc k kt mk t mi_idx) NoHashJoin(cc k mk t kt) NoHashJoin(cc k mk t) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 k kt mi_idx mk t cct2) NoMergeJoin(cc k kt mi_idx mk t cct1)/*+ NoHashJoin(k mk) NoHashJoin(cc k mk t) NoHashJoin(cc k mk t kt) NoHashJoin(cc k kt mk t mi_idx) NoMergeJoin(cc k kt mi_idx mk t cct1) NoMergeJoin(cc cct1 k kt mi_idx mk t cct2) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '8.0'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,141.958,1343.7237739562988,497.06149101257324,1309.807,1343.7223434448242,0.10838085305697709,1.0000010645885897,False,0.36991383929680377,"((((((((kt t) miidx) it) mc) cn) ct) mi) it2) NoHashJoin(kt t miidx) NoMergeJoin(cn ct it kt mc mi miidx t it2) NoMergeJoin(cn it kt mc miidx t ct) NoMergeJoin(it kt miidx t mc) NoMergeJoin(kt miidx t it)/*+ NoHashJoin(kt t miidx) NoMergeJoin(kt miidx t it) NoMergeJoin(it kt miidx t mc) NoMergeJoin(cn it kt mc miidx t ct) NoMergeJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie' AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%')
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,705.621,10208.649396896362,1123.396635055542,10157.513,10208.64725112915,0.06946789041766424,1.0000002101911407,False,0.11004363334537651,"(((((((((n an) ci) rt) mi) chn) it) mc) cn) t) NoHashJoin(an chn ci cn it mc mi n rt t) NoHashJoin(an chn ci it mc mi n rt cn) NoHashJoin(an ci mi n rt chn) NoHashJoin(an ci n rt mi) NoHashJoin(an ci n rt) NoMergeJoin(an chn ci it mi n rt mc) NoMergeJoin(an chn ci mi n rt it)/*+ NoHashJoin(an ci n rt) NoHashJoin(an ci n rt mi) NoHashJoin(an ci mi n rt chn) NoMergeJoin(an chn ci mi n rt it) NoMergeJoin(an chn ci it mi n rt mc) NoHashJoin(an chn ci it mc mi n rt cn) NoHashJoin(an chn ci cn it mc mi n rt t) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,194.673,229.2799949645996,427.4930953979492,208.296,229.2783260345459,0.9345978799400853,1.0000072790572165,False,1.8645159478944286,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct)/*+ NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,3755.537,6674.766302108765,4054.2800426483154,6644.501,6674.762725830078,0.5652097877628433,1.0000005357911335,False,0.6074043691409453,"((((((ci mi) mi_idx) it2) it1) n) t) NoHashJoin(ci mi mi_idx) NoMergeJoin(ci it1 it2 mi mi_idx n t) NoNestLoop(ci it2 mi mi_idx it1) NoNestLoop(ci mi mi_idx it2)/*+ NoHashJoin(ci mi mi_idx) NoNestLoop(ci mi mi_idx it2) NoNestLoop(ci it2 mi mi_idx it1) NoMergeJoin(ci it1 it2 mi mi_idx n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from cast_info AS ci
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)') AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id;","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,8542.042,9771.302700042725,8820.944786071777,9752.614,9771.30103111267,0.8758720482529094,1.0000001707991646,False,0.9027400504789611,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(ci k mk t n) NoHashJoin(k mk) NoMergeJoin(ci k mk n t mc)/*+ NoHashJoin(k mk) NoHashJoin(ci k mk t n) NoMergeJoin(ci k mk n t mc) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,414.073,2660.7534885406494,812.4508857727051,2616.249,2660.7518196105957,0.15826972126888533,1.000000627240031,False,0.3053463610490392,"(((((((((n ci) mk) cc) k) cct2) t) cct1) kt) chn) NoHashJoin(cc cct1 cct2 ci k kt mk n t chn) NoHashJoin(cc cct2 ci k mk n t cct1) NoHashJoin(cc cct2 ci k mk n t) NoHashJoin(cc ci k mk n cct2) NoHashJoin(cc ci mk n k) NoNestLoop(cc cct1 cct2 ci k mk n t kt)/*+ NoHashJoin(cc ci mk n k) NoHashJoin(cc ci k mk n cct2) NoHashJoin(cc cct2 ci k mk n t) NoHashJoin(cc cct2 ci k mk n t cct1) NoNestLoop(cc cct1 cct2 ci k mk n t kt) NoHashJoin(cc cct1 cct2 ci k kt mk n t chn) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on mk.movie_id = ci.movie_id
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id AND ci.movie_id = cc.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%');","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,501.391,859.5151901245117,784.9586009979248,829.482,859.513521194458,0.6044627852081179,1.0000019417147172,False,0.9132591653788937,"(((((((k mk) t) mi_idx) it2) mi) kt) it1) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(k mk) NoMergeJoin(it2 k mi mi_idx mk t kt) NoMergeJoin(it2 k mi_idx mk t mi) NoMergeJoin(k mi_idx mk t it2)/*+ NoHashJoin(k mk) NoMergeJoin(k mi_idx mk t it2) NoMergeJoin(it2 k mi_idx mk t mi) NoMergeJoin(it2 k mi mi_idx mk t kt) NoHashJoin(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,31.42,61.72633171081543,235.12792587280273,38.339,61.72513961791992,0.8195310258483529,1.0000193129234358,False,3.809273293316956,"((((k mk) t) ci) n) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t)/*+ NoMergeJoin(k mk t) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,7522.315,20912.99557685852,7842.135906219482,20876.243,20912.993907928467,0.3603289634059155,1.0000000798034974,False,0.3749886764537524,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,892.909,2045.5248355865479,1206.7010402679443,2012.594,2045.5231666564941,0.4436607681430035,1.000000815893988,False,0.5899229399784092,"(((((((it2 mi_idx) t) mi) it1) mc) ct) cn) NoHashJoin(it1 it2 mc mi mi_idx t ct) NoHashJoin(it2 mi_idx t mi) NoNestLoop(it2 mi mi_idx t it1)/*+ NoHashJoin(it2 mi_idx t mi) NoNestLoop(it2 mi mi_idx t it1) NoHashJoin(it1 it2 mc mi mi_idx t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,34.993,203.55629920959473,509.3822479248047,74.068,203.55486869812012,0.4724442404277151,1.0000070276455864,False,2.5024321510100482,"(((((((((((lt ml) cc) cct1) mk) cct2) k) t) mc) cn) ct) mi) NoHashJoin(cc cct1 cct2 cn k lt mc mk ml t ct) NoMergeJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoMergeJoin(cc cct1 cct2 k lt mk ml t mc) NoMergeJoin(cc cct1 cct2 k lt mk ml t) NoMergeJoin(cc cct1 cct2 lt mk ml k) NoMergeJoin(cc cct1 lt mk ml cct2) NoMergeJoin(cc cct1 lt ml mk)/*+ NoMergeJoin(cc cct1 lt ml mk) NoMergeJoin(cc cct1 lt mk ml cct2) NoMergeJoin(cc cct1 cct2 lt mk ml k) NoMergeJoin(cc cct1 cct2 k lt mk ml t) NoMergeJoin(cc cct1 cct2 k lt mk ml t mc) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoHashJoin(cc cct1 cct2 cn k lt mc mk ml t ct) NoMergeJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,3646.247,4402.709484100342,3927.9167652130127,4376.881,4402.708053588867,0.8330697133415323,1.000000324916269,False,0.8921592613916727,"((((((rt ci) an1) t) mc) cn) n1) NoHashJoin(an1 ci cn mc rt t n1) NoMergeJoin(an1 ci rt t mc) NoMergeJoin(an1 ci rt t) NoMergeJoin(rt ci)/*+ NoMergeJoin(rt ci) NoMergeJoin(an1 ci rt t) NoMergeJoin(an1 ci rt t mc) NoHashJoin(an1 ci cn mc rt t n1) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,3694.472,5814.0974044799805,3909.986972808838,5792.294,5814.095735549927,0.6378253590028408,1.0000002870489462,False,0.6725013055601176,"((((mk k) t) ci) n) NoMergeJoin(k mk t ci) NoNestLoop(ci k mk t n)/*+ NoMergeJoin(k mk t ci) NoNestLoop(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,45.443,990.6013011932373,261.2442970275879,964.729,990.5991554260254,0.047104419997740295,1.0000021661306697,False,0.2637235208576722,"((((cn mc) t) mk) k)/*+  */ select min(t.title) AS movie_title
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join title AS t
on mc.movie_id = t.id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,4172.655,7356.930494308472,4451.879501342773,7322.837,7356.928825378418,0.5698139942210921,1.0000002268514612,False,0.6051274393175582,"((((((n ci) mc) t) cn) mk) k) NoMergeJoin(ci cn mc n t mk) NoMergeJoin(ci n mc)/*+ NoMergeJoin(ci n mc) NoMergeJoin(ci cn mc n t mk) */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,7762.754,6437.62993812561,8054.274082183838,6411.656,6437.628269195557,1.2107252790854657,1.000000259246105,False,1.251124442944932,"((((((rt ci) a1) t) mc) cn) n1) NoHashJoin(a1 ci cn mc rt t n1) NoMergeJoin(a1 ci rt t mc) NoMergeJoin(a1 ci rt t) NoMergeJoin(rt ci)/*+ NoMergeJoin(rt ci) NoMergeJoin(a1 ci rt t) NoMergeJoin(a1 ci rt t mc) NoHashJoin(a1 ci cn mc rt t n1) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'writer'
inner join aka_name AS a1
on a1.person_id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join name AS n1
on n1.id = ci.person_id AND a1.person_id = n1.id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,3537.618,3383.8000297546387,4573.6448764801025,3263.655,3383.789539337158,1.0839436153637563,1.000003100197976,False,1.3516339663890626,"(((((((((((k mk) cc) cct2) cct1) mi_idx) it2) mi) ci) it1) t) n) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk t n) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 it2 k mi mi_idx mk ci) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk mi) NoMergeJoin(cc cct1 cct2 k mi_idx mk it2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc k mk cct2) NoNestLoop(cc cct1 cct2 ci it2 k mi mi_idx mk it1)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 k mi_idx mk it2) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk mi) NoMergeJoin(cc cct1 cct2 it2 k mi mi_idx mk ci) NoNestLoop(cc cct1 cct2 ci it2 k mi mi_idx mk it1) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,81.245,169.88086700439453,477.8745174407959,156.806,169.86393928527832,0.5181243064678648,1.000099654577584,False,2.8132782004909744,"((((k mk) t) mi_idx) it)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,22.719,50.905466079711914,420.2160835266113,25.731,50.89402198791504,0.8829427538766469,1.0002248612184668,False,8.256688450097206,"((((mk t) k) ci) n) NoHashJoin(mk t k) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t ci)/*+ NoHashJoin(mk t k) NoMergeJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,3.016,216.31908416748047,469.30837631225586,187.253,216.31550788879395,0.016106551029890042,1.0000165326967143,False,2.1695549287826537,"(((((((it2 mi_idx) t) mc) cn) ct) mi) it1) NoHashJoin(it2 mi_idx) NoNestLoop(cn ct it2 mc mi mi_idx t it1) NoNestLoop(cn it2 mc mi_idx t ct)/*+ NoHashJoin(it2 mi_idx) NoNestLoop(cn it2 mc mi_idx t ct) NoNestLoop(cn ct it2 mc mi mi_idx t it1) */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,3814.34,6127.152442932129,4043.5917377471924,6087.617,6127.148866653442,0.6265735837192123,1.00000058367746,False,0.659946710247917,"((((mk k) t) ci) n) NoHashJoin(mk k) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t)/*+ NoHashJoin(mk k) NoMergeJoin(k mk t) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,41.101,531.1570167541504,741.2333488464355,369.648,531.1541557312012,0.1111895641258711,1.0000053864267433,False,1.395514542903338,"(((((((((((cn mc) t) mk) k) mi) it) ci) rt) an) n) chn) NoHashJoin(an ci cn it k mc mi mk rt t n) NoHashJoin(ci cn it k mc mi mk rt t an) NoHashJoin(ci cn it k mc mi mk t rt) NoHashJoin(cn k mc mi mk t it) NoHashJoin(cn mc t mk) NoMergeJoin(cn mc mk t k)/*+ NoHashJoin(cn mc t mk) NoMergeJoin(cn mc mk t k) NoHashJoin(cn k mc mi mk t it) NoHashJoin(ci cn it k mc mi mk t rt) NoHashJoin(ci cn it k mc mi mk rt t an) NoHashJoin(an ci cn it k mc mi mk rt t n) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mc.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,14.62,34.46388244628906,264.1408443450928,15.677,34.45911407470703,0.9325763857880972,1.0001383776603106,False,7.665340547422024,"((((mk t) k) ci) n) NoHashJoin(mk t k) NoHashJoin(mk t) NoMergeJoin(ci k mk t n)/*+ NoHashJoin(mk t) NoHashJoin(mk t k) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,185.664,1418.403148651123,889.6040916442871,1387.02,1418.391466140747,0.13385819959337283,1.0000082364499892,False,0.6271922194123041,"((((((((kt t) miidx) it) mc) cn) ct) mi) it2) NoHashJoin(kt t miidx) NoMergeJoin(cn ct it kt mc mi miidx t it2) NoMergeJoin(cn it kt mc miidx t ct) NoMergeJoin(it kt miidx t mc) NoMergeJoin(kt miidx t it)/*+ NoHashJoin(kt t miidx) NoMergeJoin(kt miidx t it) NoMergeJoin(it kt miidx t mc) NoMergeJoin(cn it kt mc miidx t ct) NoMergeJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from kind_type AS kt
inner join title AS t
on kt.id = t.kind_id AND kt.kind = 'movie' AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%')
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,6301.269,7628.9496421813965,6618.118762969971,7592.011,7628.945827484131,0.8299868111360744,1.0000005000294079,False,0.8675010824074091,"((((((n ci) mc) t) cn) mk) k) NoMergeJoin(ci n mc)/*+ NoMergeJoin(ci n mc) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'Z%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,55.91,256.9282054901123,731.9643497467041,171.25,256.9127082824707,0.3264817518248175,1.0000603209072265,False,2.8490780181333926,"((((((((((cn mc) t) mi) it1) mi_idx) it2) mk) k) ci) n) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk t n) NoHashJoin(cn it1 it2 mc mi mi_idx mk t k) NoHashJoin(cn it1 it2 mc mi mi_idx t mk) NoHashJoin(cn it1 mc mi t mi_idx) NoHashJoin(cn mc t) NoMergeJoin(cn it1 it2 k mc mi mi_idx mk t ci) NoMergeJoin(cn it1 mc mi mi_idx t it2) NoMergeJoin(cn mc t mi) NoNestLoop(cn mc mi t it1)/*+ NoHashJoin(cn mc t) NoMergeJoin(cn mc t mi) NoNestLoop(cn mc mi t it1) NoHashJoin(cn it1 mc mi t mi_idx) NoMergeJoin(cn it1 mc mi mi_idx t it2) NoHashJoin(cn it1 it2 mc mi mi_idx t mk) NoHashJoin(cn it1 it2 mc mi mi_idx mk t k) NoMergeJoin(cn it1 it2 k mc mi mi_idx mk t ci) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND t.id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mc.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,182.703,2152.123212814331,956.6459655761719,1792.402,2152.116298675537,0.10193193268028043,1.000003212716152,False,0.4445140656036638,"(((((((((((((k mk) cc) cct1) mi_idx) t) cct2) mi) it1) it2) kt) mc) cn) ct) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 it1 k mi mi_idx mk t it2) NoHashJoin(cc cct1 cct2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 k mi_idx mk t mi) NoHashJoin(cc cct1 k mk mi_idx) NoHashJoin(k mk) NoMergeJoin(cc cct1 k mi_idx mk t cct2) NoMergeJoin(cc cct1 k mi_idx mk t) NoMergeJoin(cc k mk cct1)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct1) NoHashJoin(cc cct1 k mk mi_idx) NoMergeJoin(cc cct1 k mi_idx mk t) NoMergeJoin(cc cct1 k mi_idx mk t cct2) NoHashJoin(cc cct1 cct2 k mi_idx mk t mi) NoHashJoin(cc cct1 cct2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it1 k mi mi_idx mk t it2) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.5'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,148.065,470.18957138061523,818.9976215362549,429.494,470.17669677734375,0.3447428834861488,1.0000273824784591,False,1.741893265127298,"((((((((t mi_idx) it2) mi) it1) ci) mk) k) n) NoHashJoin(ci it1 it2 mi mi_idx mk t k) NoHashJoin(it1 it2 mi mi_idx t ci) NoHashJoin(it2 mi mi_idx t it1) NoHashJoin(mi_idx t it2) NoMergeJoin(it2 mi_idx t mi)/*+ NoHashJoin(mi_idx t it2) NoMergeJoin(it2 mi_idx t mi) NoHashJoin(it2 mi mi_idx t it1) NoHashJoin(it1 it2 mi mi_idx t ci) NoHashJoin(ci it1 it2 mi mi_idx mk t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,598.934,7953.125,938.1170272827148,7926.64,7953.121662139893,0.07555963182382447,1.0000004196918202,False,0.11795582503767484,"((((((n ci) mc) t) cn) mk) k) NoMergeJoin(ci cn mc n t mk) NoMergeJoin(ci n mc)/*+ NoMergeJoin(ci n mc) NoMergeJoin(ci cn mc n t mk) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,518.894,966.7885303497314,902.1506309509277,945.158,966.7785167694092,0.5490023890185556,1.0000103576777395,False,0.9331513012572494,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,126.72,248.4140396118164,453.3984661102295,221.97,248.40927124023438,0.5708879578321395,1.0000191956264686,False,1.8252075047221241,"((((((t mc) cn) ci) an) rt) n) NoMergeJoin(an ci cn mc rt t n)/*+ NoMergeJoin(an ci cn mc rt t n) */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%') AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mc.movie_id AND ci.note = '(voice: English version)'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,19.565,169.30031776428223,959.2902660369873,17.057,169.2960262298584,1.1470364073400952,1.000025349292121,False,5.666348392221147,"(((((((((((lt ml) cc) cct2) t) mc) cn) ct) mk) k) cct1) mi) NoHashJoin(cc cct2 cn ct lt mc mk ml t k) NoMergeJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) NoMergeJoin(cc cct2 cn ct k lt mc mk ml t cct1) NoMergeJoin(cc cct2 cn ct lt mc ml t mk)/*+ NoMergeJoin(cc cct2 cn ct lt mc ml t mk) NoHashJoin(cc cct2 cn ct lt mc mk ml t k) NoMergeJoin(cc cct2 cn ct k lt mc mk ml t cct1) NoMergeJoin(cc cct1 cct2 cn ct k lt mc mk ml t mi) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year = 1998
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,3811.649,5129.042625427246,4126.518249511719,5068.25,5129.035711288452,0.752064124697874,1.0000013480387315,False,0.8045407522567447,"((((((rt ci) chn) t) mc) ct) cn) NoNestLoop(chn ci mc rt t ct)/*+ NoNestLoop(chn ci mc rt t ct) */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND ci.note like '%(producer)%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,203.122,186.47289276123047,586.0714912414551,162.144,186.46931648254395,1.252725971975528,1.0000191789124022,False,3.142991577900267,"(((((k mk) t1) ml) lt) t2) NoHashJoin(k mk) NoMergeJoin(k lt mk ml t1 t2)/*+ NoHashJoin(k mk) NoMergeJoin(k lt mk ml t1 t2) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,384.64,2302.3147583007812,731.5454483032227,2232.44,2302.311420440674,0.17229578398523587,1.0000014497865397,False,0.3177439167474577,"(((((((n ci) mc) cn) t) rt) chn) an) NoHashJoin(ci cn mc n t) NoMergeJoin(chn ci cn mc n rt t an) NoMergeJoin(ci cn mc n rt t chn) NoMergeJoin(ci n mc) NoNestLoop(ci cn mc n t rt)/*+ NoMergeJoin(ci n mc) NoHashJoin(ci cn mc n t) NoNestLoop(ci cn mc n t rt) NoMergeJoin(ci cn mc n rt t chn) NoMergeJoin(chn ci cn mc n rt t an) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%' AND ci.note = '(voice)'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.production_year BETWEEN 2007 AND 2010
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
