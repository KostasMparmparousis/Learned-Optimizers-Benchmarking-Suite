filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
2a.sql,897.92,728.7862300872803,1112.0498180389404,718.593,728.7845611572266,1.2495529458260797,1.0000022900183987,False,1.5258965094885277,"((((k mk) t) mc) cn) NoMergeJoin(k mc mk t cn)/*+ NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
1a.sql,209.894,235.2774143218994,427.18982696533203,219.693,235.2757453918457,0.9553968492396208,1.000007093506604,False,1.8156985381296247,"((((it mi_idx) t) mc) ct) NoMergeJoin(it mc mi_idx t ct)/*+ NoMergeJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND ( mc.note like '%(co-production)%' OR mc.note like '%(presents)%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
5a.sql,282.097,295.0294017791748,497.7989196777344,275.201,295.0279712677002,1.0250580484809284,1.000004848731693,False,1.687293979410669,"((((mc ct) t) mi) it) NoMergeJoin(ct mc mi t it)/*+ NoMergeJoin(ct mc mi t it) */ select min(t.title) AS typical_european_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note like '%(theatrical)%' AND mc.note like '%(France)%' AND ct.kind = 'production companies'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
18a.sql,877.204,5029.18815612793,1162.3804569244385,5002.012,5029.186964035034,0.17537023101903793,1.0000002370349133,False,0.23112691280656494,"((((((n ci) t) mi_idx) it2) mi) it1) NoMergeJoin(ci it2 mi mi_idx n t it1) NoMergeJoin(ci mi_idx n t it2)/*+ NoMergeJoin(ci mi_idx n t it2) NoMergeJoin(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'm' AND n.name like '%Tim%' AND ci.note IN ('(producer)',
'(executive producer)')
inner join title AS t
on t.id = ci.movie_id
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 'ci'), (3, 'n'), (4, 't')]"
19a.sql,669.373,503.673791885376,1075.484037399292,471.569,503.67236137390137,1.4194592943980626,1.0000028401627414,False,2.1352849984970805,"(((((((((n an) ci) t) chn) mc) cn) mi) rt) it) NoHashJoin(an chn ci cn mc n t mi) NoMergeJoin(an chn ci cn mc mi n rt t it) NoMergeJoin(an chn ci n t mc)/*+ NoMergeJoin(an chn ci n t mc) NoHashJoin(an chn ci cn mc n t mi) NoMergeJoin(an chn ci cn mc mi n rt t it) */ select min(n.name) AS voicing_actress,
min(t.title) AS voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%Ang%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 2005 AND 2009
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn'), (6, 'mi'), (7, 'it')]"
17a.sql,7998.908,10497.048377990723,8279.377222061157,10479.73,10497.046709060669,0.7632742446608834,1.000000158990438,False,0.7887339602780561,"((((((k mk) t) ci) n) mc) cn) NoMergeJoin(ci k mc mk n t cn)/*+ NoMergeJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_american_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
7a.sql,706.49,686.9797706604004,1018.0580615997314,670.652,686.9781017303467,1.0534375503241622,1.0000024293788252,False,1.481936700799439,"(((((((lt ml) t) ci) n) pi) an) it) NoMergeJoin(an ci lt ml n pi t it)/*+ NoMergeJoin(an ci lt ml n pi t it) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.production_year BETWEEN 1980 AND 1995
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = ml.linked_movie_id
inner join name AS n
on ci.person_id = n.id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'B%'))
inner join person_info AS pi
on n.id = pi.person_id AND pi.person_id = ci.person_id AND pi.note = 'Volker Boehm'
inner join aka_name AS an
on n.id = an.person_id AND an.person_id = ci.person_id AND pi.person_id = an.person_id AND an.name like '%a%'
inner join info_type AS it
on it.id = pi.info_type_id AND it.info = 'mini biography';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
31a.sql,409.79,456.27379417419434,851.9227504730225,376.879,456.2711715698242,1.0873251096505776,1.0000057479072393,False,1.8671413044614211,"((((((((((cn mc) mk) k) ci) mi_idx) it2) t) mi) it1) n) NoHashJoin(cn mc) NoMergeJoin(ci cn it2 k mc mi mi_idx mk t it1) NoMergeJoin(ci cn k mc mi_idx mk it2) NoMergeJoin(ci cn k mc mk mi_idx)/*+ NoHashJoin(cn mc) NoMergeJoin(ci cn k mc mk mi_idx) NoMergeJoin(ci cn k mc mi_idx mk it2) NoMergeJoin(ci cn it2 k mc mi mi_idx mk t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'ci'), (4, 'n'), (5, 't'), (6, 'mk'), (7, 'k'), (8, 'it1')]"
27a.sql,29.505,144.1664695739746,509.32979583740234,29.648,144.1650390625,0.995176740420939,1.0000099227349704,False,3.5329633255715494,"(((((((((((lt ml) cc) cct2) t) mc) cn) cct1) ct) mk) k) mi) NoHashJoin(cc lt ml cct2) NoMergeJoin(cc cct2 lt ml t mc)/*+ NoHashJoin(cc lt ml cct2) NoMergeJoin(cc cct2 lt ml t mc) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
13a.sql,1909.748,1938.1787776947021,2267.752170562744,1925.491,1938.1771087646484,0.9918239036173111,1.0000008610823263,False,1.170043831550647,"((((((((it miidx) mc) ct) cn) t) kt) mi) it2) NoMergeJoin(ct it mc miidx cn) NoMergeJoin(it mc miidx ct)/*+ NoMergeJoin(it mc miidx ct) NoMergeJoin(ct it mc miidx cn) */ select min(mi.info) AS release_date,
min(miidx.info) AS rating,
min(t.title) AS german_movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]'
inner join title AS t
on mc.movie_id = t.id AND miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
15a.sql,451.001,453.1667232513428,806.4963817596436,437.473,453.16481590270996,1.030923051251163,1.000004208951282,False,1.7796977025965546,"((((((((it1 mi) mk) k) t) mc) ct) at) cn) NoHashJoin(at ct it1 k mc mi mk t cn) NoHashJoin(ct it1 k mc mi mk t at) NoHashJoin(it1 k mc mi mk t ct) NoHashJoin(it1 mi mk k) NoMergeJoin(it1 k mi mk t mc)/*+ NoHashJoin(it1 mi mk k) NoMergeJoin(it1 k mi mk t mc) NoHashJoin(it1 k mc mi mk t ct) NoHashJoin(ct it1 k mc mi mk t at) NoHashJoin(at ct it1 k mc mi mk t cn) */ select min(mi.info) AS release_date,
min(t.title) AS internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join title AS t
on t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join aka_title AS at
on mc.movie_id = at.movie_id AND t.id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mc', 'cn'), (0, 'at'), (1, 't'), (2, 'mi'), (3, 'ct'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
12a.sql,223.484,261.1231803894043,536.3864898681641,251.718,261.1217498779297,0.8878347992594888,1.0000054783313732,False,2.0541624361774393,"(((((((mi_idx it2) t) mc) ct) cn) mi) it1) NoMergeJoin(cn ct it2 mc mi mi_idx t it1) NoMergeJoin(it2 mc mi_idx t ct) NoMergeJoin(it2 mi_idx t mc)/*+ NoMergeJoin(it2 mi_idx t mc) NoMergeJoin(it2 mc mi_idx t ct) NoMergeJoin(cn ct it2 mc mi mi_idx t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS drama_horror_movie
from movie_info_idx AS mi_idx
inner join info_type AS it2
on mi_idx.info_type_id = it2.id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2008
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Drama',
'Horror')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 'mc'), (1, 'ct'), (2, 't'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
10a.sql,304.946,315.8605098724365,585.010290145874,300.272,315.8586025238037,1.0155658869291844,1.0000060386154361,False,1.8521271400286985,"((((((cn mc) t) ci) chn) ct) rt) NoHashJoin(chn ci cn ct mc t rt) NoHashJoin(ci cn mc t chn) NoMergeJoin(chn ci cn mc t ct)/*+ NoHashJoin(ci cn mc t chn) NoMergeJoin(chn ci cn mc t ct) NoHashJoin(chn ci cn ct mc t rt) */ select min(chn.name) AS uncredited_voiced_character,
min(t.title) AS russian_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(voice)%' AND ci.note like '%(uncredited)%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor';","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
25a.sql,1616.338,2202.3375034332275,1964.989423751831,2185.28,2202.335834503174,0.7396480084931907,1.000000757799981,False,0.8922296922054642,"((((((((it1 mi) t) mk) k) ci) mi_idx) it2) n) NoHashJoin(ci it1 it2 k mi mi_idx mk t n) NoHashJoin(it1 mi mk t k) NoMergeJoin(ci it1 k mi mi_idx mk t it2) NoMergeJoin(ci it1 k mi mk t mi_idx) NoMergeJoin(it1 mi t)/*+ NoMergeJoin(it1 mi t) NoHashJoin(it1 mi mk t k) NoMergeJoin(ci it1 k mi mk t mi_idx) NoMergeJoin(ci it1 k mi mi_idx mk t it2) NoHashJoin(ci it1 it2 k mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'genres' AND mi.info = 'Horror'
inner join title AS t
on t.id = mi.movie_id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), (3, 'ci'), (4, 'it1'), (5, 'n'), (6, 't')]"
3a.sql,131.777,112.47920989990234,303.6353588104248,107.535,112.47754096984863,1.2254335797647278,1.0000148378959863,False,2.69951988807987,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29a.sql,154.292,3017.1151161193848,821.9518661499023,179.787,3017.11368560791,0.858193306523831,1.0000004741324404,False,0.27242986237831784,"((((((((((((((((k mk) cc) cct2) cct1) ci) pi) n) it3) t) mc) cn) chn) an) rt) mi) it) NoMergeJoin(an cc cct1 cct2 chn ci cn it3 k mc mi mk n pi rt t it) NoMergeJoin(cc cct1 cct2 ci cn it3 k mc mk n pi t chn) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t mc) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t) NoMergeJoin(cc cct1 cct2 ci k mk n pi it3)/*+ NoMergeJoin(cc cct1 cct2 ci k mk n pi it3) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t mc) NoMergeJoin(cc cct1 cct2 ci cn it3 k mc mk n pi t chn) NoMergeJoin(an cc cct1 cct2 chn ci cn it3 k mc mi mk n pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join cast_info AS ci
on ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join name AS n
on n.id = ci.person_id AND n.id = pi.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
11a.sql,44.863,66.67327880859375,360.4540824890137,58.542,66.67184829711914,0.7663386970038605,1.000021456004463,False,5.406391028529334,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(cn lt mc mk ml t k) NoMergeJoin(lt mc ml t cn) NoMergeJoin(lt ml t mc)/*+ NoMergeJoin(lt ml t mc) NoMergeJoin(lt mc ml t cn) NoHashJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS non_polish_sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
28a.sql,240.383,4252.471446990967,793.6809062957764,4058.65,4252.469539642334,0.059227329284367955,1.0000004485272886,False,0.1866399979816272,"(((((((((((((k mk) cc) t) cct1) kt) cct2) mi_idx) it2) mi) it1) mc) cn) ct) NoHashJoin(cc k mk t cct1)/*+ NoHashJoin(cc k mk t cct1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
32a.sql,24.844,19.92177963256836,270.55978775024414,11.844,19.92011070251465,2.097602161431949,1.0000837811636007,False,13.58224318081172,"(((((k mk) t1) ml) lt) t2)/*+  */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = '10,000-mile-club'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
30a.sql,793.344,1785.2716445922852,1271.181344985962,1723.827,1785.2699756622314,0.4602225165286308,1.0000009348334293,False,0.7120387181296921,"(((((((((((k mk) cc) t) cct2) ci) mi_idx) it2) cct1) mi) it1) n) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk t it1) NoMergeJoin(cc cct2 ci k mi_idx mk t it2)/*+ NoMergeJoin(cc cct2 ci k mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 't'), (4, 'ci'), (5, 'mi'), (6, 'cct1'), (7, 'it1'), (8, 'n'), (9, 'cct2')]"
4a.sql,96.469,92.62895584106445,256.176233291626,78.473,92.62704849243164,1.2293272845437284,1.0000205917025735,False,2.7656741466026267,"((((k mk) t) mi_idx) it) NoMergeJoin(k mi_idx mk t it)/*+ NoMergeJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '5.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
26a.sql,580.285,1246.182918548584,696.7382431030273,1202.641,1246.1814880371094,0.48250891163697224,1.000001147915844,False,0.5590985340349395,"(((((((((((k mk) cc) t) cct1) mi_idx) it2) kt) cct2) ci) n) chn) NoHashJoin(cc cct1 it2 k kt mi_idx mk t cct2) NoHashJoin(cc cct1 k mk t mi_idx) NoHashJoin(cc k mk t cct1) NoHashJoin(k mk cc) NoMergeJoin(cc cct1 k mi_idx mk t it2)/*+ NoHashJoin(k mk cc) NoHashJoin(cc k mk t cct1) NoHashJoin(cc cct1 k mk t mi_idx) NoMergeJoin(cc cct1 k mi_idx mk t it2) NoHashJoin(cc cct1 it2 k kt mi_idx mk t cct2) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(n.name) AS playing_actor,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join name AS n
on n.id = ci.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), ('it2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
33a.sql,103.016,348.1462001800537,655.4877758026123,41.933,348.1450080871582,2.4566808957145922,1.000003424127498,False,1.882801018472483,"(((((((((((((it2 mi_idx2) ml) lt) mi_idx1) it1) t2) kt2) mc1) cn1) t1) kt1) mc2) cn2) NoHashJoin(it1 it2 lt mi_idx1 mi_idx2 ml t2 kt2) NoHashJoin(it1 it2 lt mi_idx1 mi_idx2 ml t2) NoMergeJoin(it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 cn1) NoMergeJoin(it2 lt mi_idx1 mi_idx2 ml it1) NoMergeJoin(it2 lt mi_idx2 ml mi_idx1)/*+ NoMergeJoin(it2 lt mi_idx2 ml mi_idx1) NoMergeJoin(it2 lt mi_idx1 mi_idx2 ml it1) NoHashJoin(it1 it2 lt mi_idx1 mi_idx2 ml t2) NoHashJoin(it1 it2 lt mi_idx1 mi_idx2 ml t2 kt2) NoMergeJoin(it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 cn1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating' AND mi_idx2.info < '3.0'
inner join movie_link AS ml
on ml.linked_movie_id = mi_idx2.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t2
on t2.id = mi_idx2.movie_id AND t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2005 AND 2008
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_companies AS mc1
on mi_idx1.movie_id = mc1.movie_id AND ml.movie_id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[us]'
inner join title AS t1
on t1.id = mc1.movie_id AND t1.id = ml.movie_id AND t1.id = mi_idx1.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc2'), (7, 't2'), (8, 'mc1'), (9, 'cn1'), (10, 'cn2'), (11, 'kt2')]"
21a.sql,142.69,128.45802307128906,497.77674674987793,103.602,128.45635414123535,1.377290013706299,1.0000129921954026,False,3.8750651929805024,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mi mk ml t ct) NoHashJoin(cn lt mc mi mk ml t k) NoMergeJoin(lt mi ml t mc)/*+ NoMergeJoin(lt mi ml t mc) NoHashJoin(cn lt mc mi mk ml t k) NoHashJoin(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
8a.sql,2629.799,1283.923864364624,2910.151481628418,1262.888,1283.9221954345703,2.0823691412065046,1.0000012998685275,False,2.266610462827474,"((((((ci mc) t) cn) an1) n1) rt) NoHashJoin(an1 ci cn mc n1 t rt) NoMergeJoin(an1 ci cn mc t n1) NoMergeJoin(ci mc t cn) NoMergeJoin(ci mc)/*+ NoMergeJoin(ci mc) NoMergeJoin(ci mc t cn) NoMergeJoin(an1 ci cn mc t n1) NoHashJoin(an1 ci cn mc n1 t rt) */ select min(an1.name) AS actress_pseudonym,
min(t.title) AS japanese_movie_dubbed
from cast_info AS ci
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND ci.note = '(voice: English version)' AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id AND n1.name like '%Yo%' AND n1.name not like '%Yu%'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress';","[('mc', 'cn'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'an1'), (4, 'n1')]"
16a.sql,235.218,248.56805801391602,550.8236885070801,226.202,248.5663890838623,1.039858179856942,1.0000067142225457,False,2.2160022943457616,"(((((((k mk) t) mc) cn) ci) n) an)/*+  */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 50 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
9a.sql,665.891,639.9807929992676,989.4556999206543,625.903,639.979362487793,1.0638884939040074,1.000002235246257,False,1.5460743860151074,"(((((((n an) ci) t) chn) rt) mc) cn) NoHashJoin(an chn ci mc n rt t cn) NoHashJoin(an ci n t chn)/*+ NoHashJoin(an ci n t chn) NoHashJoin(an chn ci mc n rt t cn) */ select min(an.name) AS alternative_name,
min(chn.name) AS character_name,
min(t.title) AS movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%Ang%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join title AS t
on ci.movie_id = t.id AND t.production_year BETWEEN 2005 AND 2015
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'mc'), (4, 'chn'), (5, 'cn')]"
23a.sql,698.388,509.9821090698242,886.1029148101807,456.271,509.9806785583496,1.5306429731453457,1.000002805030729,False,1.7375225220592292,"((((((((((it1 mi) mk) k) cc) cct1) t) kt) mc) ct) cn) NoHashJoin(cc it1 k mi mk cct1) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct)/*+ NoHashJoin(cc it1 k mi mk cct1) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('kt', 't'), ('cc', 'cct1'), (0, 1), (2, 'mi'), (3, 'it1'), (4, 'mk'), (5, 'mc'), (6, 'cn'), (7, 'ct'), (8, 'k')]"
14a.sql,364.555,389.0664577484131,680.6879043579102,366.558,389.0643119812012,0.9945356532936125,1.0000055151992764,False,1.7495511240588926,"(((((((k mk) t) kt) mi_idx) it2) mi) it1)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS northern_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
20a.sql,2968.811,1900.0780582427979,3377.596378326416,1884.45,1900.0756740570068,1.575425721032662,1.0000012547846506,False,1.7776115048695056,"(((((((((k mk) cc) cct1) t) kt) cct2) ci) chn) n) NoHashJoin(cc k mk cct1) NoHashJoin(k mk cc) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n)/*+ NoHashJoin(k mk cc) NoHashJoin(cc k mk cct1) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(t.title) AS complete_downey_ironman_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 1950
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
6a.sql,34.25,21.312475204467773,243.63970756530762,14.753,21.311283111572266,2.3215617162610993,1.000055937171369,False,11.432427896986106,"((((k mk) t) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
22a.sql,387.898,379.7733783721924,817.9912567138672,351.877,379.77123260498047,1.10236815705488,1.0000056501573256,False,2.153905263184328,"((((((((((k mk) t) kt) mi_idx) it2) mc) cn) ct) mi) it1)/*+  */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2008
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
24a.sql,141.242,419.44217681884766,280.57193756103516,353.74,419.44074630737305,0.3992819585005936,1.0000034105210025,False,0.6689191263154664,"(((((((((((k mk) t) ci) n) mi) chn) it) mc) cn) rt) an) NoMergeJoin(chn ci cn it k mc mi mk n rt t an) NoMergeJoin(chn ci cn it k mc mi mk n t rt) NoMergeJoin(chn ci it k mc mi mk n t cn) NoMergeJoin(chn ci it k mi mk n t mc) NoMergeJoin(chn ci k mi mk n t it) NoMergeJoin(ci k mi mk n t chn) NoMergeJoin(ci k mk n t mi)/*+ NoMergeJoin(ci k mk n t mi) NoMergeJoin(ci k mi mk n t chn) NoMergeJoin(chn ci k mi mk n t it) NoMergeJoin(chn ci it k mi mk n t mc) NoMergeJoin(chn ci it k mc mi mk n t cn) NoMergeJoin(chn ci cn it k mc mi mk n t rt) NoMergeJoin(chn ci cn it k mc mi mk n rt t an) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS voiced_action_movie_jap_eng
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id;","[('k', 'mk'), (0, 't'), (1, 'mi'), ('it', 2), (3, 'ci'), (4, 'mc'), (5, 'cn'), (6, 'an'), (7, 'chn'), (8, 'n'), (9, 'rt')]"
