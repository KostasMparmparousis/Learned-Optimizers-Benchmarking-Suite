filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
2a.sql,851.302,728.7859916687012,1065.7877922058105,718.593,728.7845611572266,1.1846789490017298,1.000001962872913,False,1.4624181809140706,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
1a.sql,15.927,235.2774143218994,228.64603996276855,219.693,235.2757453918457,0.07249662028375961,1.000007093506604,False,0.9718215516944361,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND ( mc.note like '%(co-production)%' OR mc.note like '%(presents)%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
5a.sql,275.535,295.0296401977539,491.3644790649414,275.201,295.0279712677002,1.0012136583806017,1.0000056568536417,False,1.6654843842555216,"((((ct mc) t) mi) it) NoMergeJoin(ct mc) NoNestLoop(ct mc mi t it)/*+ NoMergeJoin(ct mc) NoNestLoop(ct mc mi t it) */ select min(t.title) AS typical_european_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note like '%(theatrical)%' AND mc.note like '%(France)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
18a.sql,726.109,5029.188632965088,1011.9020938873291,5002.012,5029.186964035034,0.14516338625337166,1.0000003318488784,False,0.20120590089883164,"((((((n ci) mi_idx) t) it2) mi) it1) NoNestLoop(ci it2 mi mi_idx n t it1)/*+ NoNestLoop(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'm' AND n.name like '%Tim%' AND ci.note IN ('(producer)',
'(executive producer)')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 'ci'), (3, 'n'), (4, 't')]"
19a.sql,565.56,503.6745071411133,926.886796951294,471.569,503.67236137390137,1.1993154766322636,1.000004260244112,False,1.8402574134164553,"(((((((((n ci) mc) cn) t) mi) rt) it) an) chn) NoHashJoin(ci cn it mc mi n rt t an) NoHashJoin(ci cn mc n t mi) NoMergeJoin(ci n mc) NoNestLoop(ci cn mc mi n rt t it) NoNestLoop(ci cn mc mi n t rt)/*+ NoMergeJoin(ci n mc) NoHashJoin(ci cn mc n t mi) NoNestLoop(ci cn mc mi n t rt) NoNestLoop(ci cn mc mi n rt t it) NoHashJoin(ci cn it mc mi n rt t an) */ select min(n.name) AS voicing_actress,
min(t.title) AS voiced_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year BETWEEN 2005 AND 2009
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn'), (6, 'mi'), (7, 'it')]"
17a.sql,7864.683,10497.048377990723,8146.667957305908,10479.73,10497.046709060669,0.750466185674631,1.000000158990438,False,0.7760914267699696,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(k mk) NoMergeJoin(ci k mk n t mc)/*+ NoHashJoin(k mk) NoMergeJoin(ci k mk n t mc) */ select min(n.name) AS member_in_charnamed_american_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
7a.sql,115.889,686.9800090789795,430.9072494506836,670.652,686.9781017303467,0.1728004986192541,1.000002776432943,False,0.6272503422821237,"(((((((it pi) an) n) ci) ml) t) lt) NoHashJoin(an ci it ml n pi t) NoMergeJoin(an it n pi ci) NoNestLoop(an ci it ml n pi t lt)/*+ NoMergeJoin(an it n pi ci) NoHashJoin(an ci it ml n pi t) NoNestLoop(an ci it ml n pi t lt) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name like '%a%'
inner join name AS n
on n.id = an.person_id AND n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'B%'))
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1995
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
31a.sql,211.359,456.2726020812988,653.1016826629639,376.879,456.2711715698242,0.5608139482433354,1.0000031352221306,False,1.4313893214334235,"((((((((((cn mc) mi) it1) ci) n) mi_idx) it2) t) mk) k) NoHashJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoHashJoin(ci cn it1 it2 mc mi mi_idx n t) NoHashJoin(ci cn it1 mc mi n mi_idx) NoHashJoin(cn it1 mc mi ci) NoHashJoin(cn mc mi it1) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk n t k) NoMergeJoin(cn mc mi) NoNestLoop(ci cn it1 mc mi mi_idx n it2)/*+ NoMergeJoin(cn mc mi) NoHashJoin(cn mc mi it1) NoHashJoin(cn it1 mc mi ci) NoHashJoin(ci cn it1 mc mi n mi_idx) NoNestLoop(ci cn it1 mc mi mi_idx n it2) NoHashJoin(ci cn it1 it2 mc mi mi_idx n t) NoHashJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk n t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'ci'), (4, 'n'), (5, 't'), (6, 'mk'), (7, 'k'), (8, 'it1')]"
27a.sql,26.757,144.1664695739746,505.19824028015137,29.648,144.1650390625,0.9024892066918511,1.0000099227349704,False,3.5043048131879764,"(((((((((((lt ml) cc) cct2) t) mk) k) cct1) mi) mc) cn) ct) NoHashJoin(cc cct2 lt mk ml t k) NoMergeJoin(cc cct1 cct2 k lt mc mi mk ml t cn) NoMergeJoin(cc cct2 lt ml t mk) NoNestLoop(cc cct1 cct2 cn k lt mc mi mk ml t ct)/*+ NoMergeJoin(cc cct2 lt ml t mk) NoHashJoin(cc cct2 lt mk ml t k) NoMergeJoin(cc cct1 cct2 k lt mc mi mk ml t cn) NoNestLoop(cc cct1 cct2 cn k lt mc mi mk ml t ct) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
13a.sql,2239.565,1938.1790161132812,2595.9815979003906,1925.491,1938.1771087646484,1.163113720084903,1.0000009840940873,False,1.3393933847227266,"((((((((it miidx) t) kt) mc) cn) ct) mi) it2) NoMergeJoin(it kt mc miidx t cn) NoNestLoop(cn it kt mc miidx t ct)/*+ NoMergeJoin(it kt mc miidx t cn) NoNestLoop(cn it kt mc miidx t ct) */ select min(mi.info) AS release_date,
min(miidx.info) AS rating,
min(t.title) AS german_movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
15a.sql,401.119,453.16624641418457,757.8480243682861,437.473,453.16481590270996,0.9169000144008888,1.0000031567134615,False,1.6723452434378503,"((((((((it1 mi) at) t) mc) ct) mk) k) cn) NoHashJoin(at ct it1 mc mi mk t k) NoHashJoin(at ct it1 mc mi t mk) NoHashJoin(at it1 mc mi t ct) NoMergeJoin(at it1 mi t mc)/*+ NoMergeJoin(at it1 mi t mc) NoHashJoin(at it1 mc mi t ct) NoHashJoin(at ct it1 mc mi t mk) NoHashJoin(at ct it1 mc mi mk t k) */ select min(mi.info) AS release_date,
min(t.title) AS internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join aka_title AS at
on mi.movie_id = at.movie_id
inner join title AS t
on t.id = at.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mi.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mc', 'cn'), (0, 'at'), (1, 't'), (2, 'mi'), (3, 'ct'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
12a.sql,192.694,261.1231803894043,512.7086639404297,251.718,261.1217498779297,0.7655153783201837,1.0000054783313732,False,1.9634850952864438,"(((((((mi_idx it2) t) mi) it1) mc) ct) cn) NoHashJoin(it1 it2 mc mi mi_idx t ct) NoHashJoin(mi_idx it2) NoMergeJoin(it1 it2 mi mi_idx t mc) NoNestLoop(it2 mi mi_idx t it1)/*+ NoHashJoin(mi_idx it2) NoNestLoop(it2 mi mi_idx t it1) NoMergeJoin(it1 it2 mi mi_idx t mc) NoHashJoin(it1 it2 mc mi mi_idx t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS drama_horror_movie
from movie_info_idx AS mi_idx
inner join info_type AS it2
on mi_idx.info_type_id = it2.id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2008
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.info IN ('Drama',
'Horror')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mi_idx', 'it2'), (0, 'mc'), (1, 'ct'), (2, 't'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
10a.sql,280.084,315.8605098724365,558.7522983551025,300.272,315.8586025238037,0.9327676240208878,1.0000060386154361,False,1.768995030974323,"((((((cn mc) t) ci) rt) chn) ct) NoMergeJoin(chn ci cn mc rt t ct) NoMergeJoin(ci cn mc t rt)/*+ NoMergeJoin(ci cn mc t rt) NoMergeJoin(chn ci cn mc rt t ct) */ select min(chn.name) AS uncredited_voiced_character,
min(t.title) AS russian_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(voice)%' AND ci.note like '%(uncredited)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
25a.sql,2073.558,2202.3370265960693,2440.3274059295654,2185.28,2202.335834503174,0.9488752013471957,1.0000005412857007,False,1.108063251615792,"((((((((mk k) mi) it1) ci) n) mi_idx) it2) t) NoHashJoin(ci it1 k mi mk n mi_idx) NoHashJoin(k mi mk it1) NoHashJoin(mk k) NoMergeJoin(ci it1 it2 k mi mi_idx mk n t) NoMergeJoin(k mk mi) NoNestLoop(ci it1 k mi mi_idx mk n it2)/*+ NoHashJoin(mk k) NoMergeJoin(k mk mi) NoHashJoin(k mi mk it1) NoHashJoin(ci it1 k mi mk n mi_idx) NoNestLoop(ci it1 k mi mi_idx mk n it2) NoMergeJoin(ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), (3, 'ci'), (4, 'it1'), (5, 'n'), (6, 't')]"
3a.sql,130.546,112.47920989990234,300.5564212799072,107.535,112.47754096984863,1.2139861440461246,1.0000148378959863,False,2.6721460896844826,"(((k mk) t) mi) NoHashJoin(k mk t) NoHashJoin(k mk) NoMergeJoin(k mk t mi)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoMergeJoin(k mk t mi) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29a.sql,135.959,3017.115592956543,805.0954341888428,179.787,3017.11368560791,0.7562226412365743,1.000000632176587,False,0.2668429227673024,"((((((((((((((((k mk) cc) cct1) cct2) mi) ci) rt) pi) an) it3) chn) mc) n) t) cn) it) NoHashJoin(k mk) NoMergeJoin(cc cct1 k mk cct2) NoNestLoop(an cc cct1 cct2 chn ci cn it3 k mc mi mk n pi rt t it)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct1 k mk cct2) NoNestLoop(an cc cct1 cct2 chn ci cn it3 k mc mi mk n pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2010
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
11a.sql,46.612,66.67304039001465,363.1927967071533,58.542,66.67184829711914,0.7962146834751119,1.000017880003719,False,5.4474685490734585,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoMergeJoin(cn lt mc mk ml t k) NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(lt ml t mc)/*+ NoMergeJoin(lt ml t mc) NoMergeJoin(cn lt mc ml t mk) NoMergeJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS non_polish_sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
28a.sql,237.351,4252.475023269653,780.0071239471436,4058.65,4252.469539642334,0.058480282852672684,1.000001289515955,False,0.18342450584907619,"(((((((((((((k mk) cc) cct1) t) mi) mi_idx) it2) cct2) it1) kt) mc) cn) ct) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(k mk) NoMergeJoin(cc cct1 it2 k mi mi_idx mk t cct2) NoMergeJoin(cc cct1 k mi mi_idx mk t it2) NoMergeJoin(cc cct1 k mi mk t mi_idx) NoMergeJoin(cc cct1 k mk t mi) NoMergeJoin(cc k mk cct1)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mk t mi) NoMergeJoin(cc cct1 k mi mk t mi_idx) NoMergeJoin(cc cct1 k mi mi_idx mk t it2) NoMergeJoin(cc cct1 it2 k mi mi_idx mk t cct2) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it1 it2 k kt mc mi mi_idx mk t cn) NoHashJoin(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
32a.sql,22.542,19.92177963256836,269.6077823638916,11.844,19.92011070251465,1.9032421479229993,1.0000837811636007,False,13.534452011346364,"(((((k mk) t1) ml) lt) t2) NoHashJoin(k mk) NoMergeJoin(k lt mk ml t1 t2)/*+ NoHashJoin(k mk) NoMergeJoin(k lt mk ml t1 t2) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = '10,000-mile-club'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
30a.sql,670.231,1785.2716445922852,1147.9439735412598,1723.827,1785.2699756622314,0.3888040969308405,1.0000009348334293,False,0.6430086144900518,"(((((((((((k mk) cc) cct2) mi_idx) it2) cct1) t) mi) it1) ci) n) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk t n) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t mi) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct2 it2 k mi_idx mk cct1) NoMergeJoin(cc cct2 k mi_idx mk it2) NoMergeJoin(cc cct2 k mk mi_idx) NoMergeJoin(cc k mk cct2)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk mi_idx) NoMergeJoin(cc cct2 k mi_idx mk it2) NoMergeJoin(cc cct2 it2 k mi_idx mk cct1) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t mi) NoHashJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t ci) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 't'), (4, 'ci'), (5, 'mi'), (6, 'cct1'), (7, 'it1'), (8, 'n'), (9, 'cct2')]"
4a.sql,99.005,92.62824058532715,304.5816421508789,78.473,92.62704849243164,1.2616441323767411,1.0000128698141084,False,3.2882580964000554,"((((mk k) mi_idx) it) t) NoHashJoin(mk k) NoMergeJoin(k mi_idx mk it)/*+ NoHashJoin(mk k) NoMergeJoin(k mi_idx mk it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join movie_info_idx AS mi_idx
on mk.movie_id = mi_idx.movie_id AND mi_idx.info > '5.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.production_year > 2005;","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
26a.sql,1899.944,1246.1845874786377,2380.3279399871826,1202.641,1246.1814880371094,1.5798097686674575,1.0000024871509954,False,1.9100973356107984,"(((((((((((mk t) mi_idx) k) kt) cc) cct2) cct1) it2) ci) chn) n) NoHashJoin(mi_idx mk t k) NoMergeJoin(cc cct2 k kt mi_idx mk t cct1) NoNestLoop(cc cct1 cct2 k kt mi_idx mk t it2)/*+ NoHashJoin(mi_idx mk t k) NoMergeJoin(cc cct2 k kt mi_idx mk t cct1) NoNestLoop(cc cct1 cct2 k kt mi_idx mk t it2) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(n.name) AS playing_actor,
min(t.title) AS complete_hero_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '7.0'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join complete_cast AS cc
on t.id = cc.movie_id AND mk.movie_id = cc.movie_id AND cc.movie_id = mi_idx.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = mi_idx.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), ('it2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
33a.sql,29.7,348.146915435791,584.4335556030273,41.933,348.1450080871582,0.7082727207688455,1.000005478603997,False,1.6787072686008877,"(((((((((((((lt ml) mi_idx2) it2) t2) kt2) mi_idx1) it1) t1) kt1) mc2) cn2) mc1) cn1) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoHashJoin(it2 lt mi_idx2 ml t2 kt2) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(lt mi_idx2 ml it2)/*+ NoMergeJoin(lt mi_idx2 ml it2) NoHashJoin(it2 lt mi_idx2 ml t2 kt2) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc2) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc2 mi_idx1 mi_idx2 ml t1 t2 mc1) NoMergeJoin(cn2 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join movie_info_idx AS mi_idx2
on ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join title AS t2
on t2.id = mi_idx2.movie_id AND t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2005 AND 2008
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[us]';","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc2'), (7, 't2'), (8, 'mc1'), (9, 'cn1'), (10, 'cn2'), (11, 'kt2')]"
21a.sql,91.075,128.45993041992188,450.65760612487793,103.602,128.45635414123535,0.8790853458427443,1.00002784041872,False,3.5082546841504496,"((((((((lt ml) t) mi) mc) cn) ct) mk) k) NoMergeJoin(cn ct lt mc mi mk ml t k) NoMergeJoin(cn ct lt mc mi ml t mk) NoMergeJoin(lt mi ml t mc)/*+ NoMergeJoin(lt mi ml t mc) NoMergeJoin(cn ct lt mc mi ml t mk) NoMergeJoin(cn ct lt mc mi mk ml t k) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
8a.sql,434.399,1283.923864364624,714.7061824798584,1262.888,1283.9221954345703,0.343972703834386,1.0000012998685275,False,0.556658483684793,"((((((ci n1) t) an1) rt) mc) cn) NoHashJoin(ci n1 t an1) NoMergeJoin(an1 ci mc n1 rt t cn) NoMergeJoin(an1 ci n1 rt t mc) NoMergeJoin(an1 ci n1 t rt)/*+ NoHashJoin(ci n1 t an1) NoMergeJoin(an1 ci n1 t rt) NoMergeJoin(an1 ci n1 rt t mc) NoMergeJoin(an1 ci mc n1 rt t cn) */ select min(an1.name) AS actress_pseudonym,
min(t.title) AS japanese_movie_dubbed
from cast_info AS ci
inner join name AS n1
on n1.id = ci.person_id AND ci.note = '(voice: English version)' AND n1.name like '%Yo%' AND n1.name not like '%Yu%'
inner join title AS t
on ci.movie_id = t.id
inner join aka_name AS an1
on an1.person_id = n1.id AND an1.person_id = ci.person_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]';","[('mc', 'cn'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'an1'), (4, 'n1')]"
16a.sql,342.535,248.56829643249512,659.4154834747314,226.202,248.5663890838623,1.514288114163447,1.0000076733971952,False,2.6528746943829775,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoMergeJoin(k mk t) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoMergeJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 50 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
9a.sql,402.566,639.9810314178467,720.381498336792,625.903,639.979362487793,0.6431763388256646,1.0000026077872999,False,1.1256323884202322,"(((((((n ci) mc) cn) t) rt) an) chn) NoHashJoin(ci cn mc n rt t an) NoMergeJoin(an ci cn mc n rt t chn) NoMergeJoin(ci n mc) NoNestLoop(ci cn mc n t rt)/*+ NoMergeJoin(ci n mc) NoNestLoop(ci cn mc n t rt) NoHashJoin(ci cn mc n rt t an) NoMergeJoin(an ci cn mc n rt t chn) */ select min(an.name) AS alternative_name,
min(chn.name) AS character_name,
min(t.title) AS movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.production_year BETWEEN 2005 AND 2015
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'mc'), (4, 'chn'), (5, 'cn')]"
23a.sql,655.468,509.9828243255615,1095.261573791504,456.271,509.9806785583496,1.4365760699233567,1.0000042075460938,False,2.1476530775394647,"((((((((((it1 mi) cc) mk) cct1) k) mc) cn) ct) t) kt) NoHashJoin(cc cct1 it1 mi mk k) NoMergeJoin(cc cct1 cn ct it1 k mc mi mk t) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc it1 mi mk cct1) NoNestLoop(cc cct1 cn ct it1 k mc mi mk t kt) NoNestLoop(cc cct1 cn it1 k mc mi mk ct)/*+ NoMergeJoin(cc it1 mi mk cct1) NoHashJoin(cc cct1 it1 mi mk k) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoNestLoop(cc cct1 cn it1 k mc mi mk ct) NoMergeJoin(cc cct1 cn ct it1 k mc mi mk t) NoNestLoop(cc cct1 cn ct it1 k mc mi mk t kt) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie');","[('kt', 't'), ('cc', 'cct1'), (0, 1), (2, 'mi'), (3, 'it1'), (4, 'mk'), (5, 'mc'), (6, 'cn'), (7, 'ct'), (8, 'k')]"
14a.sql,359.664,389.0655040740967,680.3193092346191,366.558,389.0643119812012,0.9811926079910955,1.000003063999598,False,1.74860373538319,"(((((((k mk) t) kt) mi_idx) it2) mi) it1) NoHashJoin(k mk t kt) NoMergeJoin(it2 k kt mi_idx mk t mi) NoNestLoop(it2 k kt mi mi_idx mk t it1)/*+ NoHashJoin(k mk t kt) NoMergeJoin(it2 k kt mi_idx mk t mi) NoNestLoop(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS northern_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
20a.sql,3025.946,1900.0771045684814,3235.058307647705,1884.45,1900.0756740570068,1.6057449123086311,1.0000007528707904,False,1.7025944554830639,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc k mk cct2)/*+ NoHashJoin(k mk) NoMergeJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(t.title) AS complete_downey_ironman_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 1950
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
6a.sql,31.646,21.312952041625977,239.638090133667,14.753,21.311283111572266,2.1450552430014236,1.0000783120399168,False,11.24465800013425,"((((mk k) t) ci) n) NoHashJoin(mk k)/*+ NoHashJoin(mk k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
22a.sql,305.367,379.7738552093506,744.0545558929443,351.877,379.77123260498047,0.8678231313782941,1.0000069057478422,False,1.9592177922198588,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) ct) cn) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(it2 k kt mi_idx mk t mi) NoHashJoin(k mk) NoNestLoop(it2 k kt mi mi_idx mk t it1)/*+ NoHashJoin(k mk) NoHashJoin(it2 k kt mi_idx mk t mi) NoNestLoop(it2 k kt mi mi_idx mk t it1) NoHashJoin(it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2008
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
24a.sql,527.045,419.44217681884766,1004.030704498291,353.74,419.44074630737305,1.4899219765929776,1.0000034105210025,False,2.3937366918628378,"(((((((((((mk k) mi) it) ci) rt) an) n) mc) cn) t) chn) NoHashJoin(an ci cn it k mc mi mk n rt t) NoHashJoin(an ci it k mi mk n rt mc) NoHashJoin(ci it k mi mk rt an) NoHashJoin(ci it k mi mk rt) NoHashJoin(mk k) NoMergeJoin(an ci cn it k mc mi mk n rt t chn) NoNestLoop(k mi mk it)/*+ NoHashJoin(mk k) NoNestLoop(k mi mk it) NoHashJoin(ci it k mi mk rt) NoHashJoin(ci it k mi mk rt an) NoHashJoin(an ci it k mi mk n rt mc) NoHashJoin(an ci cn it k mc mi mk n rt t) NoMergeJoin(an ci cn it k mc mi mk n rt t chn) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS voiced_action_movie_jap_eng
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat')
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join cast_info AS ci
on ci.movie_id = mk.movie_id AND mi.movie_id = ci.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2010
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('k', 'mk'), (0, 't'), (1, 'mi'), ('it', 2), (3, 'ci'), (4, 'mc'), (5, 'cn'), (6, 'an'), (7, 'chn'), (8, 'n'), (9, 'rt')]"
