filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,415.697,674.3590831756592,852.8165817260742,592.709,674.3576526641846,0.701350915879462,1.0000021212949375,False,1.2646354324843085,"((((((((((cn mc) mi_idx) t) it2) ci) mk) k) mi) it1) n) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk t n) NoHashJoin(ci cn it2 k mc mi mi_idx mk t it1)/*+ NoHashJoin(ci cn it2 k mc mi mi_idx mk t it1) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id;","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,21759.595,4087.229013442993,22188.80343437195,4053.487,4087.2275829315186,5.3681176231723455,1.000000349995552,False,5.428815250472859,"(((((((it pi) an) ci) ml) lt) t) n)/*+  */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join cast_info AS ci
on an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in')
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010
inner join name AS n
on n.id = an.person_id AND ci.person_id = n.id AND n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'));","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,154.805,305.32336235046387,435.49346923828125,274.653,305.32169342041016,0.5636384820118476,1.0000054661365034,False,1.4263430297389061,"((((((cn mc) t) ci) chn) ct) rt) NoHashJoin(ci cn mc t chn) NoNestLoop(chn ci cn mc t ct)/*+ NoHashJoin(ci cn mc t chn) NoNestLoop(chn ci cn mc t ct) */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor';","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,597.938,1372.5197315216064,943.1922435760498,1327.554,1372.5178241729736,0.45040578387018526,1.0000013896713027,False,0.6871985390385594,"((((((((it1 mi) mk) k) t) at) mc) ct) cn) NoHashJoin(at ct it1 k mc mi mk t cn) NoHashJoin(it1 k mi mk t at) NoNestLoop(at it1 k mc mi mk t ct)/*+ NoHashJoin(it1 k mi mk t at) NoNestLoop(at it1 k mc mi mk t ct) NoHashJoin(at ct it1 k mc mi mk t cn) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join title AS t
on t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 1990
inner join aka_title AS at
on t.id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,181.766,4159.345865249634,851.9346714019775,36.001,4159.344434738159,5.048915307908114,1.0000003439271494,False,0.20482426612394963,"((((((((((((((((t cc) cct1) cct2) mk) k) ci) an) pi) n) rt) it3) chn) mc) cn) mi) it) NoHashJoin(an cc cct1 cct2 ci it3 k mk n pi rt t chn) NoHashJoin(cc cct1 cct2 mk t k) NoHashJoin(cc t cct1) NoHashJoin(t cc)/*+ NoHashJoin(t cc) NoHashJoin(cc t cct1) NoHashJoin(cc cct1 cct2 mk t k) NoHashJoin(an cc cct1 cct2 ci it3 k mk n pi rt t chn) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from title AS t
inner join complete_cast AS cc
on t.id = cc.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join aka_name AS an
on ci.person_id = an.person_id
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info like 'USA:%200%'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,328.625,726.2675762176514,808.6032867431641,585.987,726.2659072875977,0.5608059564461328,1.000002297960068,False,1.113370844795777,"(((((((((((k mk) t) cc) mi_idx) cct2) cct1) mi) it1) it2) ci) n) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk t n) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join complete_cast AS cc
on t.id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,12625.497,12675.868034362793,13019.528865814209,12621.243,12675.866842269897,1.000337050796027,1.00000009404429,False,1.027111520483815,"(((((((((ci t) an) chn) rt) mc) cn) mi) it) n) NoHashJoin(an chn ci cn it mc mi rt t n) NoHashJoin(an chn ci cn mc mi rt t it) NoHashJoin(an chn ci rt t mc) NoHashJoin(an ci t chn) NoHashJoin(ci t an)/*+ NoHashJoin(ci t an) NoHashJoin(an ci t chn) NoHashJoin(an chn ci rt t mc) NoHashJoin(an chn ci cn mc mi rt t it) NoHashJoin(an chn ci cn it mc mi rt t n) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)') AND t.production_year > 2000
inner join aka_name AS an
on ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,424.152,791.9344902038574,628.7052631378174,752.763,791.9316291809082,0.5634602125768667,1.0000036127145877,False,0.7938883105200443,"((((k mk) mc) cn) t) NoMergeJoin(k mc mk cn)/*+ NoMergeJoin(k mc mk cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,472.652,793.2231426239014,798.1562614440918,747.424,793.2217121124268,0.6323746628419745,1.0000018034194635,False,1.0062208954398435,"((((((((it1 mi) mk) k) t) mc) ct) cn) at) NoHashJoin(cn ct it1 k mc mi mk t at) NoHashJoin(ct it1 k mc mi mk t cn) NoHashJoin(it1 k mi mk t mc) NoNestLoop(it1 k mc mi mk t ct)/*+ NoHashJoin(it1 k mi mk t mc) NoNestLoop(it1 k mc mi mk t ct) NoHashJoin(ct it1 k mc mi mk t cn) NoHashJoin(cn ct it1 k mc mi mk t at) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join title AS t
on t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_title AS at
on mc.movie_id = at.movie_id AND t.id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,389.852,145.34544944763184,826.4360427856445,77.149,145.34354209899902,5.053234649833438,1.0000131230366707,False,5.686087120559698,"((((((((((it1 mi) cc) t) cct1) kt) mk) k) mc) ct) cn) NoHashJoin(cc cct1 ct it1 k kt mc mi mk t cn) NoHashJoin(cc cct1 it1 k kt mi mk t mc) NoHashJoin(cc cct1 it1 kt mi mk t k) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct)/*+ NoHashJoin(cc cct1 it1 kt mi mk t k) NoHashJoin(cc cct1 it1 k kt mi mk t mc) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct) NoHashJoin(cc cct1 ct it1 k kt mc mi mk t cn) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,410.399,826.4555931091309,846.2309837341309,756.62,826.4541625976562,0.5424109856995586,1.0000017309023772,False,1.0239297253634896,"((((((((((it1 mi) t) cc) cct1) kt) mk) k) mc) ct) cn) NoHashJoin(cc cct1 it1 k kt mi mk t mc) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct)/*+ NoHashJoin(cc cct1 it1 k kt mi mk t mc) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join title AS t
on t.id = mi.movie_id AND t.production_year > 1990
inner join complete_cast AS cc
on t.id = cc.movie_id AND mi.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game')
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,9.692,92.27347373962402,324.65124130249023,59.813,92.27228164672852,0.16203835286643373,1.0000129192957434,False,3.518404828715977,"(((((((lt ml) t) mc) ct) mk) k) cn) NoHashJoin(ct k lt mc mk ml t cn) NoHashJoin(ct lt mc mk ml t k) NoHashJoin(ct lt mc ml t mk) NoHashJoin(lt ml) NoMergeJoin(lt mc ml t ct) NoMergeJoin(lt ml t mc)/*+ NoHashJoin(lt ml) NoMergeJoin(lt ml t mc) NoMergeJoin(lt mc ml t ct) NoHashJoin(ct lt mc ml t mk) NoHashJoin(ct lt mc mk ml t k) NoHashJoin(ct k lt mc mk ml t cn) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,222.762,450.83045959472656,659.2066287994385,372.788,450.82902908325195,0.5975567883086366,1.0000031730686854,False,1.4622098096476095,"((((((((((k mk) t) kt) mc) mi_idx) ct) it2) mi) it1) cn) NoHashJoin(k mk t) NoMergeJoin(k kt mk t mc)/*+ NoHashJoin(k mk t) NoMergeJoin(k kt mk t mc) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join movie_info_idx AS mi_idx
on mc.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,144.329,209.80000495910645,351.90749168395996,186.695,209.79881286621094,0.7730737298802861,1.000005682076458,False,1.677356925314787,"((((it mi_idx) t) mc) ct) NoNestLoop(it mc mi_idx t ct)/*+ NoNestLoop(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,140.852,279.7884941101074,533.7743759155273,222.656,279.7870635986328,0.6325991664271342,1.000005112857815,False,1.9077879050235533,"(((((((((t mc) cn) ci) an) chn) mi) it) n) rt) NoHashJoin(an chn ci cn it mc mi n t rt) NoHashJoin(an chn ci cn it mc mi t n) NoHashJoin(an ci cn mc t chn) NoHashJoin(cn mc t ci)/*+ NoHashJoin(cn mc t ci) NoHashJoin(an ci cn mc t chn) NoHashJoin(an chn ci cn it mc mi t n) NoHashJoin(an chn ci cn it mc mi n t rt) */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%' AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join cast_info AS ci
on t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND ci.note = '(voice)'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,384.242,224.34592247009277,592.6673412322998,202.212,224.34425354003906,1.9001938559531584,1.0000074391477711,False,2.6417763409595225,"((((ct mc) mi_idx) it) t) NoHashJoin(ct it mc mi_idx t) NoMergeJoin(ct mc) NoNestLoop(ct mc mi_idx it) NoNestLoop(ct mc mi_idx)/*+ NoMergeJoin(ct mc) NoNestLoop(ct mc mi_idx) NoNestLoop(ct mc mi_idx it) NoHashJoin(ct it mc mi_idx t) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%'
inner join movie_info_idx AS mi_idx
on mc.movie_id = mi_idx.movie_id
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2010;","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,155.172,248.73733520507812,469.50435638427734,216.348,248.7356662750244,0.7172333462754451,1.000006709653178,False,1.88756346613015,"(((((((k mk) ml) t) mc) lt) ct) cn)/*+  */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]';","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,433.144,383.7707042694092,709.2225551605225,353.871,383.76903533935547,1.2240166614387729,1.0000043487876822,False,1.8480452820623692,"((((((mi_idx it2) t) ci) n) mi) it1)/*+  */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,802.182,1012.6798152923584,1195.3709125518799,969.875,1012.6783847808838,0.8270983374146152,1.0000014126019634,False,1.1804052802119656,"(((((((((k mk) cc) t) cct2) cct1) kt) ci) chn) n) NoHashJoin(cc cct1 cct2 chn ci k kt mk t n) NoHashJoin(cc cct1 cct2 ci k kt mk t chn)/*+ NoHashJoin(cc cct1 cct2 ci k kt mk t chn) NoHashJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,19125.695,11825.724363327026,19408.264875411987,11787.336,11825.722694396973,1.622562977758503,1.0000001411271089,False,1.6411905958701047,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(ci k mc mk n t cn) NoHashJoin(ci k mk t n)/*+ NoHashJoin(ci k mk t n) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,1074.313,1891.4306163787842,1385.2784633636475,1860.566,1891.4291858673096,0.5774119273382401,1.0000007563124675,False,0.7323977411971847,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(ci cn k mc mk t an)/*+ NoHashJoin(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,1162.393,5043.773412704468,1638.463020324707,4944.504,5043.771743774414,0.2350878874807261,1.0000003308892904,False,0.3248487646862848,"(((((((((((k mk) t) cc) cct2) cct1) mi_idx) kt) ci) it2) chn) n) NoHashJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoHashJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 ci k kt mi_idx mk t it2)/*+ NoMergeJoin(cc cct1 cct2 ci k kt mi_idx mk t it2) NoHashJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoHashJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join complete_cast AS cc
on t.id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,897.9,90.39449691772461,1255.7802200317383,45.102,90.3925895690918,19.908208061726754,1.000021100719007,False,13.892512937378342,"((((((((cn mc) t) at) mi) mk) k) it1) ct) NoHashJoin(at cn k mc mi mk t it1) NoHashJoin(at cn mc mi t mk) NoNestLoop(at cn it1 k mc mi mk t ct) NoNestLoop(at cn mc mi mk t k) NoNestLoop(at cn mc t mi) NoNestLoop(cn mc t at)/*+ NoNestLoop(cn mc t at) NoNestLoop(at cn mc t mi) NoHashJoin(at cn mc mi t mk) NoNestLoop(at cn mc mi mk t k) NoHashJoin(at cn k mc mi mk t it1) NoNestLoop(at cn it1 k mc mi mk t ct) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join aka_title AS at
on t.id = at.movie_id AND mc.movie_id = at.movie_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = at.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,4839.535,1600.3408432006836,5278.133392333984,1504.342,1600.339412689209,3.217044395489855,1.0000008938800502,False,3.2981337274351157,"((((((((((k mk) t) kt) mi_idx) it2) mc) ct) mi) it1) cn) NoNestLoop(ct it1 it2 k kt mc mi mi_idx mk t cn) NoNestLoop(it2 k kt mc mi_idx mk t ct)/*+ NoNestLoop(it2 k kt mc mi_idx mk t ct) NoNestLoop(ct it1 it2 k kt mc mi mi_idx mk t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,90.426,158.69617462158203,263.7944221496582,138.689,158.69474411010742,0.652005566411179,1.0000090142334745,False,1.6622757333830118,"(((k mk) t) mi) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,183.694,305.5105209350586,392.5435543060303,278.213,305.509090423584,0.6602638985237929,1.0000046823859565,False,1.2848833851777512,"((((mc t) ct) mi) it) NoHashJoin(ct mc mi t it) NoMergeJoin(mc t ct) NoNestLoop(ct mc t mi)/*+ NoMergeJoin(mc t ct) NoNestLoop(ct mc t mi) NoHashJoin(ct mc mi t it) */ select min(t.title) AS american_vhs_movie
from movie_companies AS mc
inner join title AS t
on t.id = mc.movie_id AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%' AND t.production_year > 2010
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,270.067,420.7475185394287,583.9974880218506,376.891,420.7456111907959,0.7165652668808754,1.0000045332585346,False,1.388006131232168,"(((((((lt ml) t) ci) pi) n) it) an) NoHashJoin(lt ml t)/*+ NoHashJoin(lt ml t) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.production_year BETWEEN 1980 AND 1984
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = ml.linked_movie_id
inner join person_info AS pi
on pi.person_id = ci.person_id AND pi.note = 'Volker Boehm'
inner join name AS n
on ci.person_id = n.id AND n.id = pi.person_id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join info_type AS it
on it.id = pi.info_type_id AND it.info = 'mini biography'
inner join aka_name AS an
on n.id = an.person_id AND an.person_id = ci.person_id AND pi.person_id = an.person_id AND an.name like '%a%';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,6585.213,7276.621341705322,6944.748878479004,7233.483,7276.619434356689,0.910379273719175,1.0000002621201576,False,0.9543922065910507,"((((((((k mk) mi_idx) t) it2) ci) mi) it1) n) NoHashJoin(ci it1 it2 k mi mi_idx mk t n) NoHashJoin(ci it2 k mi mi_idx mk t it1)/*+ NoHashJoin(ci it2 k mi mi_idx mk t it1) NoHashJoin(ci it1 it2 k mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mk.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,230.847,397.25255966186523,402.02951431274414,385.849,397.2506523132324,0.5982832662518239,1.0000048013731928,False,1.0120298405343928,"(((k mk) t) mi) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,12074.019,5532.967090606689,12743.663311004639,546.548,5532.965183258057,22.09141557557616,1.0000003447244958,False,2.303224923512098,"((((((((((((((((ci t) cc) cct1) cct2) chn) pi) n) an) mi) it) mc) cn) mk) k) it3) rt) NoHashJoin(an cc cct1 cct2 chn ci cn it it3 k mc mi mk n pi t rt) NoHashJoin(an cc cct1 cct2 chn ci cn it k mc mi mk n pi t it3) NoHashJoin(an cc cct1 cct2 chn ci cn it mc mi mk n pi t k) NoHashJoin(an cc cct1 cct2 chn ci cn it mc mi n pi t mk) NoHashJoin(an cc cct1 cct2 chn ci it mi n pi t mc) NoHashJoin(an cc cct1 cct2 chn ci mi n pi t it) NoHashJoin(an cc cct1 cct2 chn ci n pi t mi) NoHashJoin(cc cct1 cct2 chn ci n pi t an) NoHashJoin(cc cct1 cct2 ci t chn) NoHashJoin(cc cct1 ci t cct2) NoHashJoin(cc ci t cct1) NoHashJoin(ci t cc) NoMergeJoin(an cc cct1 cct2 chn ci it mc mi n pi t cn) NoMergeJoin(cc cct1 cct2 chn ci pi t n)/*+ NoHashJoin(ci t cc) NoHashJoin(cc ci t cct1) NoHashJoin(cc cct1 ci t cct2) NoHashJoin(cc cct1 cct2 ci t chn) NoMergeJoin(cc cct1 cct2 chn ci pi t n) NoHashJoin(cc cct1 cct2 chn ci n pi t an) NoHashJoin(an cc cct1 cct2 chn ci n pi t mi) NoHashJoin(an cc cct1 cct2 chn ci mi n pi t it) NoHashJoin(an cc cct1 cct2 chn ci it mi n pi t mc) NoMergeJoin(an cc cct1 cct2 chn ci it mc mi n pi t cn) NoHashJoin(an cc cct1 cct2 chn ci cn it mc mi n pi t mk) NoHashJoin(an cc cct1 cct2 chn ci cn it mc mi mk n pi t k) NoHashJoin(an cc cct1 cct2 chn ci cn it k mc mi mk n pi t it3) NoHashJoin(an cc cct1 cct2 chn ci cn it it3 k mc mi mk n pi t rt) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)') AND t.production_year BETWEEN 2000 AND 2010
inner join complete_cast AS cc
on t.id = cc.movie_id AND ci.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join name AS n
on n.id = ci.person_id AND n.id = pi.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1372.651,2315.115451812744,1687.0627403259277,2284.1,2315.1142597198486,0.6009592399632241,1.000000514917521,False,0.7287168368657877,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(ci cn k mc mk t an)/*+ NoHashJoin(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,70.095,156.4931869506836,425.94456672668457,110.166,156.49175643920898,0.6362670878492457,1.0000091411299046,False,2.72183389348146,"((((((((lt ml) mc) ct) mk) k) t) cn) mi) NoMergeJoin(ct lt mc mk ml k)/*+ NoMergeJoin(ct lt mc mk ml k) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_companies AS mc
on ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,285.106,443.58086585998535,491.34230613708496,404.193,443.57943534851074,0.7053709490268263,1.000003224927399,False,1.107676025943466,"((((mc ct) t) mi) it) NoMergeJoin(ct mc t mi) NoNestLoop(ct mc mi t it)/*+ NoMergeJoin(ct mc t mi) NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%' AND ct.kind = 'production companies'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,90.143,131.78539276123047,297.1470355987549,108.736,131.78372383117676,0.8290078722778105,1.0000126641591631,False,2.25480830985941,"((((k mk) t) mi_idx) it) NoHashJoin(k mi_idx mk t it)/*+ NoHashJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '9.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,2554.718,3028.0513763427734,2992.7122592926025,2960.094,3028.0497074127197,0.8630529976412911,1.000000551156756,False,0.9883299643220484,"((((((((((k mk) t) kt) mi_idx) mc) it2) ct) mi) it1) cn) NoHashJoin(ct it1 it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(k kt mi_idx mk t mc)/*+ NoMergeJoin(k kt mi_idx mk t mc) NoHashJoin(ct it1 it2 k kt mc mi mi_idx mk t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,17.454,472.72372245788574,571.5909004211426,48.959,472.72229194641113,0.3565023795420658,1.0000030261138495,False,1.2091473369441597,"(((((((((((((lt ml) t2) kt2) mi_idx2) it2) mi_idx1) it1) mc1) cn1) t1) kt1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoHashJoin(it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 cn1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 mc1) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoHashJoin(lt ml t2 kt2) NoHashJoin(lt ml t2)/*+ NoHashJoin(lt ml t2) NoHashJoin(lt ml t2 kt2) NoHashJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 mc1) NoHashJoin(it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 cn1) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join movie_companies AS mc1
on mi_idx1.movie_id = mc1.movie_id AND ml.movie_id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]'
inner join title AS t1
on t1.id = mc1.movie_id AND t1.id = ml.movie_id AND t1.id = mi_idx1.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,191.954,206.62736892700195,509.0305805206299,174.777,206.62474632263184,1.0982795219050563,1.0000126925957167,False,2.4635509036551215,"(((((((t kt) mi_idx) mk) k) mi) it1) it2)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%') AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.info > '6.0'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = mi_idx.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,74.731,151.3843536376953,467.5614833831787,107.32,151.3807773590088,0.6963380544166977,1.0000236243910814,False,3.088645015174734,"((((((((lt ml) mc) ct) mk) k) t) cn) mi) NoMergeJoin(ct lt mc mk ml k) NoMergeJoin(lt mc ml ct)/*+ NoMergeJoin(lt mc ml ct) NoMergeJoin(ct lt mc mk ml k) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_companies AS mc
on ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,652.965,2671.046257019043,1055.9990406036377,2639.086,2671.03910446167,0.24742088738298035,1.0000026778182922,False,0.3953513967053909,"(((((((n an) ci) chn) rt) mc) cn) t) NoHashJoin(an ci n chn)/*+ NoHashJoin(an ci n chn) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id;","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,180.673,732.553243637085,820.8985328674316,678.114,732.5458526611328,0.2664345523024152,1.0000100894379857,False,1.1206104435447124,"(((((((k mk) ml) lt) mc) cn) t) ct) NoHashJoin(cn k lt mc mk ml t)/*+ NoHashJoin(cn k lt mc mk ml t) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,983.054,2067.7285194396973,2179.0664196014404,1716.01,2067.721128463745,0.5728719529606471,1.0000035744549158,False,1.0538492786115803,"(((((((((((((k mk) cc) cct2) cct1) t) kt) mc) mi_idx) it2) ct) cn) mi) it1) NoHashJoin(cc cct1 cct2 k kt mk t mc)/*+ NoHashJoin(cc cct1 cct2 k kt mk t mc) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join movie_info_idx AS mi_idx
on mc.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,4755.364,4133.413791656494,5314.456224441528,4100.673,4133.400440216064,1.15965452500114,1.0000032301347577,False,1.2857346635797346,"(((((((n an) ci) chn) rt) mc) t) cn) NoHashJoin(an ci n chn) NoHashJoin(n an)/*+ NoHashJoin(n an) NoHashJoin(an ci n chn) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,192.575,374.6626377105713,758.4085464477539,47.789,374.65834617614746,4.029693025591663,1.000011454527752,False,2.0242670534054628,"(((((((((((((it2 mi_idx2) t2) kt2) ml) lt) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(it2 mi_idx2 t2)/*+ NoHashJoin(it2 mi_idx2 t2) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating' AND mi_idx2.info < '3.5'
inner join title AS t2
on t2.id = mi_idx2.movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join movie_link AS ml
on t2.id = ml.linked_movie_id AND ml.linked_movie_id = mi_idx2.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,3295.414,4021.8887329101562,4009.190320968628,3982.514,4021.876096725464,0.8274707885521557,1.0000031418632471,False,0.9968458064217433,"((((((((miidx it) t) kt) mc) ct) cn) mi) it2) NoHashJoin(it miidx t) NoMergeJoin(cn ct it kt mc mi miidx t it2) NoNestLoop(it kt mc miidx t ct)/*+ NoHashJoin(it miidx t) NoNestLoop(it kt mc miidx t ct) NoMergeJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from movie_info_idx AS miidx
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,247.044,293.14494132995605,791.9261455535889,201.473,293.1368350982666,1.2261891171521742,1.0000276534052321,False,2.7015579440506547,"(((((((((((mi_idx cc) t) cct1) cct2) mk) k) it2) ci) chn) kt) n) NoHashJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoHashJoin(cc cct1 cct2 ci it2 k mi_idx mk t chn) NoHashJoin(cc cct1 cct2 k mi_idx mk t it2) NoHashJoin(cc cct1 cct2 mi_idx mk t k) NoHashJoin(cc mi_idx t cct1)/*+ NoHashJoin(cc mi_idx t cct1) NoHashJoin(cc cct1 cct2 mi_idx mk t k) NoHashJoin(cc cct1 cct2 k mi_idx mk t it2) NoHashJoin(cc cct1 cct2 ci it2 k mi_idx mk t chn) NoHashJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from movie_info_idx AS mi_idx
inner join complete_cast AS cc
on cc.movie_id = mi_idx.movie_id AND mi_idx.info > '8.0'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = mi_idx.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,147.205,1343.7325954437256,885.6160640716553,1309.807,1343.7223434448242,0.11238678675560598,1.0000076295515599,False,0.6590766823161189,"((((((((t kt) miidx) it) mc) ct) cn) mi) it2) NoHashJoin(kt miidx t it)/*+ NoHashJoin(kt miidx t it) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,664.919,10208.656072616577,1130.4941177368164,10157.513,10208.64725112915,0.06546080718774369,1.0000008641191345,False,0.11073887557548583,"(((((((((n an) ci) chn) rt) mi) it) mc) t) cn) NoHashJoin(an chn ci it mc mi n rt t cn) NoHashJoin(an chn ci mi n rt it) NoHashJoin(an ci n chn)/*+ NoHashJoin(an ci n chn) NoHashJoin(an chn ci mi n rt it) NoHashJoin(an chn ci it mc mi n rt t cn) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,150.242,229.28237915039062,490.2491569519043,208.296,229.2783260345459,0.7212908553212736,1.0000176777103829,False,2.1382272168108787,"((((it mi_idx) t) mc) ct) NoNestLoop(it mc mi_idx t ct)/*+ NoNestLoop(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,5751.644,6674.771547317505,6078.336238861084,6644.501,6674.762725830078,0.8656246721913353,1.0000013216181292,False,0.9106445410170259,"((((((ci t) n) mi_idx) mi) it1) it2) NoMergeJoin(ci it1 mi mi_idx n t it2)/*+ NoMergeJoin(ci it1 mi mi_idx n t it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND ci.movie_id = mi_idx.movie_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,7652.886,9771.3041305542,7960.999250411987,9752.614,9771.30103111267,0.7847010042640876,1.0000003171984486,False,0.814732779704921,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(ci k mc mk n t cn) NoHashJoin(ci k mk n t mc)/*+ NoHashJoin(ci k mk n t mc) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,355.028,2660.7666015625,879.6083927154541,2616.249,2660.7518196105957,0.13570115076967065,1.00000555555456,False,0.3305864102891738,"(((((((((n ci) cc) cct1) t) cct2) kt) chn) mk) k) NoHashJoin(cc cct1 cct2 chn ci kt mk n t k) NoHashJoin(cc cct1 cct2 chn ci kt n t mk) NoHashJoin(cc cct1 cct2 ci kt n t chn) NoHashJoin(cc ci n cct1) NoHashJoin(ci n cc)/*+ NoHashJoin(ci n cc) NoHashJoin(cc ci n cct1) NoHashJoin(cc cct1 cct2 ci kt n t chn) NoHashJoin(cc cct1 cct2 chn ci kt n t mk) NoHashJoin(cc cct1 cct2 chn ci kt mk n t k) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join complete_cast AS cc
on ci.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join movie_keyword AS mk
on mk.movie_id = ci.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence');","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,482.865,859.5170974731445,954.0319442749023,829.482,859.513521194458,0.5821283644491382,1.0000041608172512,False,1.1099673486800916,"(((((((k mk) t) kt) mi_idx) it2) mi) it1) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,344.203,61.73849105834961,707.6661586761475,38.339,61.72513961791992,8.977881530556353,1.0002163047424815,False,11.46479640316114,"((((n ci) t) mk) k) NoHashJoin(ci mk n t k) NoHashJoin(ci n t mk)/*+ NoHashJoin(ci n t mk) NoHashJoin(ci mk n t k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,15707.642,20912.99796104431,16111.299514770508,20876.243,20912.993907928467,0.7524170896075506,1.0000001938084935,False,0.7703966053689923,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(ci cn k mc mk t an)/*+ NoHashJoin(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,1038.939,2045.5327033996582,1565.8917427062988,2012.594,2045.5231666564941,0.5162188697770141,1.0000046622513592,False,0.765521392390693,"(((((((it2 mi_idx) t) mc) ct) cn) mi) it1)/*+  */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,42.141,203.56011390686035,996.1941242218018,74.068,203.55486869812012,0.5689501539126208,1.000025768033817,False,4.89398328123115,"(((((((((((lt ml) cc) cct1) cct2) t) mc) ct) mk) k) cn) mi) NoMergeJoin(cc cct1 cct2 ct lt mc mk ml t k)/*+ NoMergeJoin(cc cct1 cct2 ct lt mc mk ml t k) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,3813.338,4402.714967727661,4132.815361022949,4376.881,4402.708053588867,0.8712455284939207,1.0000015704286338,False,0.938698480734848,"((((((rt ci) an1) n1) t) mc) cn) NoHashJoin(an1 ci mc n1 rt t cn) NoHashJoin(an1 ci rt n1)/*+ NoHashJoin(an1 ci rt n1) NoHashJoin(an1 ci mc n1 rt t cn) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,6263.447,5814.099311828613,6626.037359237671,5792.294,5814.095735549927,1.0813413476594937,1.0000006151048846,False,1.1396505425122565,"((((k mk) t) ci) n) NoHashJoin(ci k mk t n)/*+ NoHashJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,409.83,990.6017780303955,632.8787803649902,964.729,990.5991554260254,0.42481360050335376,1.0000026474930408,False,0.638884837422266,"((((k mk) mc) cn) t) NoMergeJoin(k mc mk cn)/*+ NoMergeJoin(k mc mk cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,3691.527,7356.94146156311,4215.2259349823,7322.837,7356.928825378418,0.5041115895383169,1.0000017175896345,False,0.5729599993466677,"((((((n ci) t) mk) k) mc) cn) NoHashJoin(ci k mk n t mc) NoHashJoin(ci n t) NoMergeJoin(ci mk n t k) NoMergeJoin(ci n t mk)/*+ NoHashJoin(ci n t) NoMergeJoin(ci n t mk) NoMergeJoin(ci mk n t k) NoHashJoin(ci k mk n t mc) */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join title AS t
on ci.movie_id = t.id
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,7301.908,6437.633752822876,7646.721601486206,6411.656,6437.628269195557,1.1388489962655515,1.0000008518086305,False,1.1878165811586596,"((((((rt ci) a1) n1) t) mc) cn) NoHashJoin(a1 ci mc n1 rt t cn) NoHashJoin(a1 ci rt n1)/*+ NoHashJoin(a1 ci rt n1) NoHashJoin(a1 ci mc n1 rt t cn) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'writer'
inner join aka_name AS a1
on a1.person_id = ci.person_id
inner join name AS n1
on a1.person_id = n1.id AND n1.id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,2136.18,3383.7947845458984,2733.5846424102783,3263.655,3383.789539337158,0.6545360952674225,1.0000015500989878,False,0.8078471224737438,"(((((((((((k mk) cc) cct2) mi_idx) cct1) it2) ci) t) mi) it1) n)/*+  */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,101.396,169.86751556396484,348.48546981811523,156.806,169.86393928527832,0.6466334196395546,1.0000210537839966,False,2.0515565062508685,"((((k mk) t) mi_idx) it) NoMergeJoin(k mi_idx mk t it)/*+ NoMergeJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,170.198,50.89759826660156,305.52196502685547,25.731,50.89402198791504,6.614511678520073,1.0000702691307708,False,6.003101210971353,"((((k mk) t) ci) n) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,145.947,216.32003784179688,300.8437156677246,187.253,216.31550788879395,0.7794107437531042,1.000020941415838,False,1.3907635129996594,"(((((((it2 mi_idx) t) mc) ct) cn) mi) it1) NoMergeJoin(cn ct it2 mc mi_idx t mi) NoMergeJoin(ct it2 mc mi_idx t cn) NoMergeJoin(it2 mc mi_idx t ct) NoMergeJoin(it2 mi_idx t mc) NoNestLoop(cn ct it2 mc mi mi_idx t it1)/*+ NoMergeJoin(it2 mi_idx t mc) NoMergeJoin(it2 mc mi_idx t ct) NoMergeJoin(ct it2 mc mi_idx t cn) NoMergeJoin(cn ct it2 mc mi_idx t mi) NoNestLoop(cn ct it2 mc mi mi_idx t it1) */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,347.623,6127.166509628296,721.7545509338379,6087.617,6127.148866653442,0.0571032967415657,1.0000028794754685,False,0.11779615064715239,"((((n ci) t) mk) k) NoHashJoin(ci mk n t k) NoHashJoin(ci n t)/*+ NoHashJoin(ci n t) NoHashJoin(ci mk n t k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence');","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,65.862,531.158447265625,622.542142868042,369.648,531.1541557312012,0.17817491234904556,1.000008079640115,False,1.1720554873773579,"(((((((((((cn mc) mk) k) t) ci) n) chn) rt) mi) it) an) NoHashJoin(chn ci cn it k mc mi mk n rt t an) NoHashJoin(chn ci cn k mc mk n t rt) NoHashJoin(ci cn k mc mk n t chn) NoHashJoin(ci cn k mc mk t n) NoHashJoin(cn mc) NoMergeJoin(chn ci cn k mc mi mk n rt t it)/*+ NoHashJoin(cn mc) NoHashJoin(ci cn k mc mk t n) NoHashJoin(ci cn k mc mk n t chn) NoHashJoin(chn ci cn k mc mk n t rt) NoMergeJoin(chn ci cn k mc mi mk n rt t it) NoHashJoin(chn ci cn it k mc mi mk n rt t an) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id;","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,24.442,34.47246551513672,392.66371726989746,15.677,34.45911407470703,1.5590993174714551,1.0003874574488694,False,11.395061301303517,"((((k mk) t) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,196.684,1418.395757675171,842.9841995239258,1387.02,1418.391466140747,0.14180329050770718,1.00000302563469,False,0.5943240774125444,"((((((((t kt) miidx) it) mc) ct) cn) mi) it2) NoHashJoin(kt miidx t it)/*+ NoHashJoin(kt miidx t it) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,10724.269,7628.952503204346,11094.202995300293,7592.011,7628.945827484131,1.412572900645165,1.000000875051464,False,1.4542249016020254,"((((((n ci) t) mc) cn) mk) k) NoHashJoin(ci cn mc mk n t k) NoHashJoin(ci cn mc n t mk) NoHashJoin(ci n t) NoMergeJoin(ci mc n t cn) NoMergeJoin(ci n t mc)/*+ NoHashJoin(ci n t) NoMergeJoin(ci n t mc) NoMergeJoin(ci mc n t cn) NoHashJoin(ci cn mc n t mk) NoHashJoin(ci cn mc mk n t k) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'Z%'
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,60.202,256.92296028137207,976.8023490905762,171.25,256.9127082824707,0.35154452554744525,1.0000399046001651,False,3.802078751264419,"((((((((((cn mc) t) mi_idx) mi) ci) it1) it2) mk) k) n) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk t n) NoHashJoin(ci cn it1 it2 mc mi mi_idx mk t k) NoHashJoin(ci cn it1 it2 mc mi mi_idx t mk) NoHashJoin(ci cn it1 mc mi mi_idx t it2) NoHashJoin(ci cn mc mi mi_idx t it1) NoHashJoin(cn mc mi_idx t mi) NoHashJoin(cn mc t)/*+ NoHashJoin(cn mc t) NoHashJoin(cn mc mi_idx t mi) NoHashJoin(ci cn mc mi mi_idx t it1) NoHashJoin(ci cn it1 mc mi mi_idx t it2) NoHashJoin(ci cn it1 it2 mc mi mi_idx t mk) NoHashJoin(ci cn it1 it2 mc mi mi_idx mk t k) NoHashJoin(ci cn it1 it2 k mc mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = mc.movie_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,826.795,2152.1191596984863,1500.1161098480225,1792.402,2152.116298675537,0.46127765981068974,1.0000013293997871,False,0.6970423070403905,"(((((((((((((it2 mi_idx) cc) cct2) cct1) t) mc) kt) mk) k) mi) it1) ct) cn) NoHashJoin(cc cct1 cct2 it2 k kt mc mi mi_idx mk t it1) NoHashJoin(cc cct2 it2 mi_idx cct1) NoHashJoin(it2 mi_idx cc) NoMergeJoin(cc cct1 cct2 it2 mi_idx t mc)/*+ NoHashJoin(it2 mi_idx cc) NoHashJoin(cc cct2 it2 mi_idx cct1) NoMergeJoin(cc cct1 cct2 it2 mi_idx t mc) NoHashJoin(cc cct1 cct2 it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on it2.id = mi_idx.info_type_id AND it2.info = 'rating' AND mi_idx.info > '6.5'
inner join complete_cast AS cc
on mi_idx.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2005
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,160.229,470.1805114746094,554.865837097168,429.494,470.17669677734375,0.37306458297438383,1.000008113326951,False,1.1801219433040713,"((((((((t mi_idx) mk) k) mi) ci) it2) it1) n) NoHashJoin(ci it1 it2 k mi mi_idx mk t n) NoHashJoin(ci it2 k mi mi_idx mk t it1) NoMergeJoin(ci k mi mi_idx mk t it2)/*+ NoMergeJoin(ci k mi mi_idx mk t it2) NoHashJoin(ci it2 k mi mi_idx mk t it1) NoHashJoin(ci it1 it2 k mi mi_idx mk t n) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info = 'Horror'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,433.5,7953.137159347534,874.1738796234131,7926.64,7953.121662139893,0.0546889981126934,1.0000019485691656,False,0.1099158188142447,"((((((n ci) t) mk) k) mc) cn) NoHashJoin(ci k mk n t mc) NoHashJoin(ci n t) NoMergeJoin(ci mk n t k) NoMergeJoin(ci n t mk)/*+ NoHashJoin(ci n t) NoMergeJoin(ci n t mk) NoMergeJoin(ci mk n t k) NoHashJoin(ci k mk n t mc) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join title AS t
on ci.movie_id = t.id
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,522.351,966.7823314666748,778.395414352417,945.158,966.7785167694092,0.55265997854327,1.000003945781996,False,0.8051434747986603,"((((k mk) t) mc) cn) NoHashJoin(k mk t)/*+ NoHashJoin(k mk t) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,245.887,248.42166900634766,792.1631336212158,221.97,248.40927124023438,1.1077487948821914,1.000049908628818,False,3.1889435111104287,"((((((cn mc) t) ci) an) n) rt) NoHashJoin(an ci cn mc n t rt) NoHashJoin(an ci cn mc t n) NoHashJoin(cn mc t)/*+ NoHashJoin(cn mc t) NoHashJoin(an ci cn mc t n) NoHashJoin(an ci cn mc n t rt) */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from company_name AS cn
inner join movie_companies AS mc
on mc.company_id = cn.id AND cn.country_code = '[jp]' AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join title AS t
on t.id = mc.movie_id AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%')
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mc.movie_id AND ci.note = '(voice: English version)'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,34.772,169.30079460144043,564.4006729125977,17.057,169.2960262298584,2.038576537491939,1.0000281658801344,False,3.333809336707606,"(((((((((((lt ml) t) mc) ct) cc) cct1) cct2) mi) mk) k) cn) NoHashJoin(lt mc ml t ct) NoHashJoin(lt ml t mc) NoHashJoin(lt ml t) NoMergeJoin(cc cct1 cct2 ct lt mc mi mk ml t k)/*+ NoHashJoin(lt ml t) NoHashJoin(lt ml t mc) NoHashJoin(lt mc ml t ct) NoMergeJoin(cc cct1 cct2 ct lt mc mi mk ml t k) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join complete_cast AS cc
on mc.movie_id = cc.movie_id AND t.id = cc.movie_id AND ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,3951.932,5129.054307937622,4355.320692062378,5068.25,5129.035711288452,0.7797429092882158,1.0000036257593468,False,0.849150003474686,"((((((ci t) chn) rt) mc) ct) cn) NoHashJoin(chn ci ct mc rt t cn) NoNestLoop(chn ci mc rt t ct) NoNestLoop(ci t chn)/*+ NoNestLoop(ci t chn) NoNestLoop(chn ci mc rt t ct) NoHashJoin(chn ci ct mc rt t cn) */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note like '%(producer)%' AND t.production_year > 1990
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,210.842,186.47360801696777,481.94146156311035,162.144,186.46931648254395,1.3003379711861063,1.0000230146948828,False,2.5845617426726966,"(((((k mk) t1) ml) lt) t2) NoHashJoin(k mk t1)/*+ NoHashJoin(k mk t1) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,2385.718,2302.32572555542,3054.2654991149902,2232.44,2302.311420440674,1.0686594040601314,1.0000062133708842,False,1.3266083258755623,"(((((((ci t) an) chn) n) rt) mc) cn) NoHashJoin(an chn ci mc n rt t cn) NoHashJoin(an ci t chn)/*+ NoHashJoin(an ci t chn) NoHashJoin(an chn ci mc n rt t cn) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from cast_info AS ci
inner join title AS t
on ci.movie_id = t.id AND ci.note = '(voice)' AND t.production_year BETWEEN 2007 AND 2010
inner join aka_name AS an
on an.person_id = ci.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
