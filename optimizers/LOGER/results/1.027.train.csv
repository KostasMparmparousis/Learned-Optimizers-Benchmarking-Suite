filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,337.493,674.3597984313965,776.289701461792,592.709,674.3576526641846,0.5694075844976203,1.0000031819424062,False,1.1511542849627412,"((((((((((cn mc) mi) it1) ci) n) mi_idx) it2) t) mk) k) NoHashJoin(ci cn it1 mc mi n mi_idx) NoHashJoin(ci cn it1 mc mi n) NoHashJoin(cn mc mi it1) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk n t k) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t) NoMergeJoin(cn it1 mc mi ci) NoMergeJoin(cn mc mi) NoNestLoop(ci cn it1 mc mi mi_idx n it2)/*+ NoMergeJoin(cn mc mi) NoHashJoin(cn mc mi it1) NoMergeJoin(cn it1 mc mi ci) NoHashJoin(ci cn it1 mc mi n) NoHashJoin(ci cn it1 mc mi n mi_idx) NoNestLoop(ci cn it1 mc mi mi_idx n it2) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t) NoMergeJoin(ci cn it1 it2 mc mi mi_idx n t mk) NoMergeJoin(ci cn it1 it2 mc mi mi_idx mk n t k) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital');","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,2652.62,4087.229013442993,2818.3469772338867,4053.487,4087.2275829315186,0.6544044670674902,1.000000349995552,False,0.6895498036379121,"(((((((it pi) n) an) ci) ml) lt) t) NoHashJoin(it pi) NoMergeJoin(an ci it lt ml n pi t) NoMergeJoin(an it n pi ci)/*+ NoHashJoin(it pi) NoMergeJoin(an it n pi ci) NoMergeJoin(an ci it lt ml n pi t) */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'))
inner join aka_name AS an
on n.id = an.person_id AND pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in')
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010;","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,254.433,305.32336235046387,542.4413681030273,274.653,305.32169342041016,0.9263798320062041,1.0000054661365034,False,1.7766224274018985,"((((((cn mc) t) ci) rt) chn) ct)/*+  */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,638.552,1372.5199699401855,998.3036518096924,1327.554,1372.5178241729736,0.48099888968734983,1.0000015633802157,False,0.7273520490790214,"((((((((it1 mi) mk) k) mc) cn) at) t) ct) NoHashJoin(cn it1 k mc mi mk at) NoHashJoin(it1 k mc mi mk cn) NoHashJoin(it1 mi mk k) NoHashJoin(it1 mi) NoMergeJoin(at cn it1 k mc mi mk t ct) NoMergeJoin(it1 k mi mk mc)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi mk k) NoMergeJoin(it1 k mi mk mc) NoHashJoin(it1 k mc mi mk cn) NoHashJoin(cn it1 k mc mi mk at) NoMergeJoin(at cn it1 k mc mi mk t ct) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_title AS at
on mc.movie_id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,38.646,4159.346103668213,708.6436748504639,36.001,4159.344434738159,1.0734701813838505,1.000000401248341,False,0.1703738860701193,"((((((((((((((((k mk) cc) cct1) mi) cct2) it) t) mc) cn) ci) rt) an) pi) it3) chn) n)/*+  */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info like 'USA:%200%'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join title AS t
on t.id = mi.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,383.609,726.2673377990723,824.2030143737793,585.987,726.2659072875977,0.6546373895666627,1.0000019696800584,False,1.1348502058315662,"(((((((((((k mk) cc) cct2) mi_idx) t) it2) cct1) mi) it1) ci) n)/*+  */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,6518.331,12675.868272781372,6920.005798339844,12621.243,12675.866842269897,0.5164571350064332,1.000000112853148,False,0.5459197295496883,"(((((((((rt ci) chn) an) t) mc) cn) mi) it) n) NoHashJoin(an chn ci cn it mc mi rt t n) NoMergeJoin(an chn ci mc rt t cn) NoMergeJoin(rt ci) NoNestLoop(an chn ci cn mc mi rt t it)/*+ NoMergeJoin(rt ci) NoMergeJoin(an chn ci mc rt t cn) NoNestLoop(an chn ci cn mc mi rt t it) NoHashJoin(an chn ci cn it mc mi rt t n) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,428.536,791.9330596923828,471.91882133483887,752.763,791.9316291809082,0.569284090743036,1.000001806357294,False,0.5959085405174973,"((((mk k) mc) cn) t) NoHashJoin(cn k mc mk t) NoHashJoin(k mk mc) NoHashJoin(mk k) NoMergeJoin(k mc mk cn)/*+ NoHashJoin(mk k) NoHashJoin(k mk mc) NoMergeJoin(k mc mk cn) NoHashJoin(cn k mc mk t) */ select min(t.title) AS movie_title
from movie_keyword AS mk
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,429.564,793.2231426239014,790.358304977417,747.424,793.2217121124268,0.5747259922079034,1.0000018034194635,False,0.9963901553736039,"((((((((it1 mi) mk) k) at) mc) cn) t) ct) NoHashJoin(it1 k mi mk at) NoHashJoin(it1 mi mk k) NoHashJoin(it1 mi) NoMergeJoin(at it1 k mc mi mk cn) NoNestLoop(at cn it1 k mc mi mk t ct)/*+ NoHashJoin(it1 mi) NoHashJoin(it1 mi mk k) NoHashJoin(it1 k mi mk at) NoMergeJoin(at it1 k mc mi mk cn) NoNestLoop(at cn it1 k mc mi mk t ct) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join aka_title AS at
on mi.movie_id = at.movie_id AND mk.movie_id = at.movie_id
inner join movie_companies AS mc
on mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,44.912,145.34521102905273,484.607458114624,77.149,145.34354209899902,0.5821462365033895,1.000011482657087,False,3.3342207786881883,"((((((((((k mk) cc) cct1) t) mi) mc) cn) it1) kt) ct) NoHashJoin(cc cct1 cn it1 k mc mi mk t kt) NoMergeJoin(cc cct1 cn it1 k kt mc mi mk t ct) NoMergeJoin(cc cct1 cn k mc mi mk t it1) NoMergeJoin(cc cct1 k mc mi mk t cn) NoMergeJoin(cc cct1 k mi mk t mc) NoMergeJoin(cc cct1 k mk t mi) NoNestLoop(cc k mk cct1)/*+ NoNestLoop(cc k mk cct1) NoMergeJoin(cc cct1 k mk t mi) NoMergeJoin(cc cct1 k mi mk t mc) NoMergeJoin(cc cct1 k mc mi mk t cn) NoMergeJoin(cc cct1 cn k mc mi mk t it1) NoHashJoin(cc cct1 cn it1 k mc mi mk t kt) NoMergeJoin(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,412.229,826.4560699462891,854.2826175689697,756.62,826.4541625976562,0.5448296370701277,1.0000023078698361,False,1.0336721093930303,"((((((((((it1 mi) mk) cc) cct1) k) mc) cn) t) ct) kt) NoHashJoin(it1 mi) NoMergeJoin(cc cct1 cn it1 k mc mi mk t ct) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 it1 k mi mk mc) NoNestLoop(cc it1 mi mk cct1)/*+ NoHashJoin(it1 mi) NoNestLoop(cc it1 mi mk cct1) NoMergeJoin(cc cct1 it1 k mi mk mc) NoMergeJoin(cc cct1 it1 k mc mi mk cn) NoMergeJoin(cc cct1 cn it1 k mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game');","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,9.133,92.27347373962402,329.3590545654297,59.813,92.27228164672852,0.15269255847391033,1.0000129192957434,False,3.5694257114656165,"(((((((lt ml) t) mk) k) mc) cn) ct) NoHashJoin(lt mk ml t k) NoMergeJoin(k lt mc mk ml t cn) NoNestLoop(cn k lt mc mk ml t ct)/*+ NoHashJoin(lt mk ml t k) NoMergeJoin(k lt mc mk ml t cn) NoNestLoop(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,292.388,450.83022117614746,735.7258796691895,372.788,450.82902908325195,0.7843278217109992,1.0000026442239045,False,1.6319398978483421,"((((((((((k mk) t) mi_idx) it2) mi) it1) mc) cn) kt) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoHashJoin(cn it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(it1 it2 k mi mi_idx mk t mc) NoHashJoin(it2 k mi mi_idx mk t it1) NoHashJoin(it2 k mi_idx mk t mi) NoMergeJoin(it1 it2 k mc mi mi_idx mk t cn) NoMergeJoin(k mi_idx mk t it2)/*+ NoMergeJoin(k mi_idx mk t it2) NoHashJoin(it2 k mi_idx mk t mi) NoHashJoin(it2 k mi mi_idx mk t it1) NoHashJoin(it1 it2 k mi mi_idx mk t mc) NoMergeJoin(it1 it2 k mc mi mi_idx mk t cn) NoHashJoin(cn it1 it2 k mc mi mi_idx mk t kt) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,0.728,209.80072021484375,215.68775177001953,186.695,209.79881286621094,0.0038994081255523715,1.0000090913223327,False,1.0280694577026228,"((((it mi_idx) t) mc) ct) NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct)/*+ NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,157.901,279.7889709472656,559.577226638794,222.656,279.7870635986328,0.7091701997700489,1.000006817143753,False,2.000011077858599,"(((((((((t mc) cn) mi) it) ci) chn) an) rt) n)/*+  */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%' AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND t.id = ci.movie_id AND mi.movie_id = ci.movie_id AND ci.note = '(voice)'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,1.696,224.34592247009277,214.56456184387207,202.212,224.34425354003906,0.008387237157043103,1.0000074391477711,False,0.9564076567959803,"((((it mi_idx) t) mc) ct) NoHashJoin(it mc mi_idx t ct) NoHashJoin(it mi_idx t mc) NoHashJoin(it mi_idx)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mi_idx t mc) NoHashJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,153.775,248.73709678649902,473.4768867492676,216.348,248.7356662750244,0.7107761569323497,1.0000057511312954,False,1.90353435773762,"(((((((k mk) ml) lt) t) mc) cn) ct) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(k lt mk ml t mc) NoMergeJoin(k lt mc mk ml t cn)/*+ NoHashJoin(k lt mk ml t mc) NoMergeJoin(k lt mc mk ml t cn) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,506.711,383.7709426879883,787.8968715667725,353.871,383.76903533935547,1.43190880292536,1.0000049700430653,False,2.053049618424944,"((((((mi_idx it2) t) ci) mi) it1) n) NoHashJoin(mi_idx it2) NoMergeJoin(it2 mi_idx t ci)/*+ NoHashJoin(mi_idx it2) NoMergeJoin(it2 mi_idx t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,798.322,1012.6798152923584,1198.1980800628662,969.875,1012.6783847808838,0.8231184430983374,1.0000014126019634,False,1.1831970525589166,"(((((((((k mk) cc) cct2) cct1) t) kt) ci) chn) n) NoHashJoin(cc cct1 cct2 k mk t) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 cct2 k kt mk t ci) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct2 k mk cct1) NoMergeJoin(cc k mk cct2)/*+ NoMergeJoin(cc k mk cct2) NoMergeJoin(cc cct2 k mk cct1) NoHashJoin(cc cct1 cct2 k mk t) NoMergeJoin(cc cct1 cct2 k mk t kt) NoMergeJoin(cc cct1 cct2 k kt mk t ci) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,9197.673,11825.724124908447,9474.85899925232,11787.336,11825.722694396973,0.7803012487299931,1.0000001209660934,False,0.8012076085414642,"((((((k mk) t) mc) cn) ci) n) NoMergeJoin(ci cn k mc mk t n) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc) NoMergeJoin(k mk t)/*+ NoMergeJoin(k mk t) NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(ci cn k mc mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,957.467,1891.430377960205,1280.1039218902588,1860.566,1891.4291858673096,0.5146106077397953,1.0000006302603897,False,0.6767918838596491,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t mc) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,859.358,5043.773412704468,1339.4019603729248,4944.504,5043.771743774414,0.17380064815399077,1.0000003308892904,False,0.26555562551500556,"(((((((((((k mk) cc) cct1) cct2) mi_idx) t) kt) it2) ci) chn) n) NoHashJoin(cc cct1 cct2 k mi_idx mk t) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 k mi_idx mk t kt) NoMergeJoin(cc cct1 k mk cct2) NoMergeJoin(cc k mk cct1)/*+ NoMergeJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mk cct2) NoHashJoin(cc cct1 cct2 k mi_idx mk t) NoMergeJoin(cc cct1 cct2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join movie_info_idx AS mi_idx
on cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,48.129,90.39449691772461,415.543794631958,45.102,90.3925895690918,1.0671145403751496,1.000021100719007,False,4.597100233690463,"((((((((cn mc) mi) it1) t) mk) at) k) ct) NoHashJoin(at cn it1 k mc mi mk t ct) NoHashJoin(at cn it1 mc mi mk t k) NoHashJoin(cn it1 mc mi t mk) NoHashJoin(cn it1 mc mi t) NoHashJoin(cn mc mi it1) NoHashJoin(cn mc mi) NoMergeJoin(cn it1 mc mi mk t at)/*+ NoHashJoin(cn mc mi) NoHashJoin(cn mc mi it1) NoHashJoin(cn it1 mc mi t) NoHashJoin(cn it1 mc mi t mk) NoMergeJoin(cn it1 mc mi mk t at) NoHashJoin(at cn it1 mc mi mk t k) NoHashJoin(at cn it1 k mc mi mk t ct) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id
inner join aka_title AS at
on mc.movie_id = at.movie_id AND t.id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,1267.793,1600.3408432006836,1708.4178924560547,1504.342,1600.339412689209,0.8427558361064171,1.0000008938800502,False,1.0675347235154515,"((((((((((k mk) t) mi) mi_idx) it2) mc) cn) kt) it1) ct) NoHashJoin(k mi mk t mi_idx) NoMergeJoin(cn it2 k mc mi mi_idx mk t kt) NoMergeJoin(it2 k mc mi mi_idx mk t cn) NoMergeJoin(it2 k mi mi_idx mk t mc) NoMergeJoin(k mi mi_idx mk t it2) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct)/*+ NoHashJoin(k mi mk t mi_idx) NoMergeJoin(k mi mi_idx mk t it2) NoMergeJoin(it2 k mi mi_idx mk t mc) NoMergeJoin(it2 k mc mi mi_idx mk t cn) NoMergeJoin(cn it2 k mc mi mi_idx mk t kt) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,135.84,158.69641304016113,313.36212158203125,138.689,158.69474411010742,0.9794576354289094,1.0000105166057205,False,1.9746219280243504,"(((k mk) t) mi) NoMergeJoin(k mk t mi)/*+ NoMergeJoin(k mk t mi) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,263.594,305.5107593536377,478.26528549194336,278.213,305.509090423584,0.9474539291837548,1.0000054627836161,False,1.5654699008426733,"((((ct mc) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_vhs_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,113.55,420.7472801208496,434.3240261077881,376.891,420.7456111907959,0.3012807416467891,1.0000039666012177,False,1.0322722675075862,"(((((((it pi) n) ci) t) an) ml) lt) NoHashJoin(it pi)/*+ NoHashJoin(it pi) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note = 'Volker Boehm'
inner join name AS n
on n.id = pi.person_id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join cast_info AS ci
on ci.person_id = n.id AND pi.person_id = ci.person_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 1984
inner join aka_name AS an
on n.id = an.person_id AND an.person_id = ci.person_id AND pi.person_id = an.person_id AND an.name like '%a%'
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id AND ml.linked_movie_id = t.id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link = 'features';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,5937.033,7276.621103286743,6301.620960235596,7233.483,7276.619434356689,0.8207709895772203,1.000000229355138,False,0.8660094178462019,"((((((((k mk) mi) it1) ci) n) mi_idx) it2) t) NoHashJoin(ci it1 it2 k mi mi_idx mk n t) NoHashJoin(ci it1 k mi mk n mi_idx) NoHashJoin(k mi mk it1) NoNestLoop(ci it1 k mi mi_idx mk n it2)/*+ NoHashJoin(k mi mk it1) NoHashJoin(ci it1 k mi mk n mi_idx) NoNestLoop(ci it1 k mi mi_idx mk n it2) NoHashJoin(ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,364.956,397.25232124328613,541.6793823242188,385.849,397.2506523132324,0.9458518746970966,1.0000042012015435,False,1.3635707812434357,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,226.262,5532.96685218811,893.4087753295898,546.548,5532.965183258057,0.4139837672080037,1.0000003016339338,False,0.16147016034601377,"((((((((((((((((k mk) cc) cct2) cct1) t) mi) ci) rt) chn) mc) cn) it) pi) it3) an) n) NoHashJoin(cc cct1 cct2 k mk t mi) NoMergeJoin(cc cct1 cct2 chn ci k mc mi mk rt t cn) NoMergeJoin(cc cct1 cct2 chn ci k mi mk rt t mc) NoMergeJoin(cc cct1 cct2 ci k mi mk rt t chn) NoMergeJoin(cc cct1 cct2 k mi mk t ci) NoNestLoop(cc cct1 cct2 chn ci cn k mc mi mk rt t it) NoNestLoop(cc cct1 cct2 ci k mi mk t rt)/*+ NoHashJoin(cc cct1 cct2 k mk t mi) NoMergeJoin(cc cct1 cct2 k mi mk t ci) NoNestLoop(cc cct1 cct2 ci k mi mk t rt) NoMergeJoin(cc cct1 cct2 ci k mi mk rt t chn) NoMergeJoin(cc cct1 cct2 chn ci k mi mk rt t mc) NoMergeJoin(cc cct1 cct2 chn ci k mc mi mk rt t cn) NoNestLoop(cc cct1 cct2 chn ci cn k mc mi mk rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = pi.person_id AND n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1152.541,2315.115451812744,1471.9321727752686,2284.1,2315.1142597198486,0.5045930563460443,1.000000514917521,False,0.6357924524007669,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t mc) NoMergeJoin(cn k mc mk t ci) NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoMergeJoin(cn k mc mk t ci) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,37.406,156.4936637878418,395.02501487731934,110.166,156.49175643920898,0.339542145489534,1.000012188173206,False,2.5242544646801974,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoMergeJoin(cn lt mc mi mk ml t k) NoMergeJoin(cn lt mc mi ml t mk) NoNestLoop(cn k lt mc mi mk ml t ct)/*+ NoMergeJoin(cn lt mc mi ml t mk) NoMergeJoin(cn lt mc mi mk ml t k) NoNestLoop(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,273.46,443.58110427856445,480.6382656097412,404.193,443.57943534851074,0.6765579809645392,1.0000037624152986,False,1.083544969193881,"((((ct mc) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_movie
from company_type AS ct
inner join movie_companies AS mc
on ct.id = mc.company_type_id AND ct.kind = 'production companies' AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,94.762,131.78563117980957,301.5258312225342,108.736,131.78372383117676,0.8714869040612124,1.0000144733247578,False,2.288035445172332,"((((mi_idx it) t) mk) k) NoHashJoin(it mi_idx t) NoHashJoin(mi_idx it) NoMergeJoin(it mi_idx mk t k) NoMergeJoin(it mi_idx t mk)/*+ NoHashJoin(mi_idx it) NoHashJoin(it mi_idx t) NoMergeJoin(it mi_idx t mk) NoMergeJoin(it mi_idx mk t k) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it
on it.id = mi_idx.info_type_id AND mi_idx.info > '9.0' AND it.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010
inner join movie_keyword AS mk
on mk.movie_id = mi_idx.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword like '%sequel%';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,780.672,3028.0511379241943,902.5218486785889,2960.094,3028.0497074127197,0.26373216526231935,1.0000004724200766,False,0.2980538418735991,"((((((((((k mk) t) mi) mi_idx) it2) mc) kt) cn) it1) ct) NoMergeJoin(it2 k mi mi_idx mk t mc) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(it2 k mc mi mi_idx mk t kt)/*+ NoMergeJoin(it2 k mi mi_idx mk t mc) NoNestLoop(it2 k mc mi mi_idx mk t kt) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,17.698,472.72348403930664,572.7252960205078,48.959,472.72229194641113,0.36148614146530766,1.0000025217615411,False,1.2115470452267845,"(((((((((((((lt ml) t2) kt2) mi_idx2) it2) mc1) cn1) t1) kt1) mi_idx1) it1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) NoHashJoin(cn1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 it1) NoHashJoin(cn1 it2 kt1 kt2 lt mc1 mi_idx2 ml t1 t2 mi_idx1) NoMergeJoin(cn1 it2 kt2 lt mc1 mi_idx2 ml t2 t1) NoMergeJoin(it2 kt2 lt mc1 mi_idx2 ml t2 cn1) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 mc1) NoMergeJoin(kt2 lt mi_idx2 ml t2 it2)/*+ NoMergeJoin(kt2 lt mi_idx2 ml t2 it2) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 mc1) NoMergeJoin(it2 kt2 lt mc1 mi_idx2 ml t2 cn1) NoMergeJoin(cn1 it2 kt2 lt mc1 mi_idx2 ml t2 t1) NoHashJoin(cn1 it2 kt1 kt2 lt mc1 mi_idx2 ml t1 t2 mi_idx1) NoHashJoin(cn1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 it1) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]'
inner join title AS t1
on t1.id = mc1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_info_idx AS mi_idx1
on mi_idx1.movie_id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id AND t1.id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,200.832,206.62617683410645,525.1953601837158,174.777,206.62474632263184,1.1490756792941863,1.0000069232340272,False,2.541783448162862,"(((((((t mi_idx) it2) kt) mk) k) mi) it1) NoHashJoin(it2 kt mi_idx mk t k) NoHashJoin(mi_idx t it2)/*+ NoHashJoin(mi_idx t it2) NoHashJoin(it2 kt mi_idx mk t k) */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%') AND mi_idx.info > '6.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = mi_idx.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,43.728,151.3824462890625,407.4711799621582,107.32,151.3807773590088,0.4074543421543049,1.000011024715838,False,2.6916969715105594,"((((((((lt ml) mk) k) t) mc) cn) ct) mi) NoMergeJoin(k lt mc mk ml t cn) NoMergeJoin(k lt mk ml t mc) NoMergeJoin(lt ml mk) NoNestLoop(cn k lt mc mk ml t ct)/*+ NoMergeJoin(lt ml mk) NoMergeJoin(k lt mk ml t mc) NoMergeJoin(k lt mc mk ml t cn) NoNestLoop(cn k lt mc mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_keyword AS mk
on ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,658.078,2671.0410118103027,979.0174961090088,2639.086,2671.03910446167,0.24935830056314953,1.000000714084878,False,0.36653057399035094,"(((((((n an) ci) rt) chn) mc) cn) t) NoMergeJoin(an chn ci n rt mc) NoMergeJoin(an n ci)/*+ NoMergeJoin(an n ci) NoMergeJoin(an chn ci n rt mc) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id;","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,243.092,732.5472831726074,571.2070465087891,678.114,732.5458526611328,0.35848249704327,1.0000019527944488,False,0.7797560308801895,"(((((((k mk) ml) lt) t) mc) cn) ct) NoHashJoin(cn k lt mc mk ml t ct)/*+ NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,296.657,2067.7225589752197,851.9911766052246,1716.01,2067.721128463745,0.1728760321909546,1.0000006918299837,False,0.4120435608443139,"(((((((((((((k mk) cc) t) cct2) mi_idx) it2) cct1) mi) it1) kt) mc) cn) ct) NoHashJoin(cc cct1 cct2 it1 it2 k kt mi mi_idx mk t mc) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoMergeJoin(cc cct2 it2 k mi_idx mk t cct1) NoMergeJoin(cc k mk t cct2) NoNestLoop(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(cc cct1 cct2 it2 k mi mi_idx mk t it1)/*+ NoMergeJoin(cc k mk t cct2) NoMergeJoin(cc cct2 it2 k mi_idx mk t cct1) NoNestLoop(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoHashJoin(cc cct1 cct2 it1 it2 k mi mi_idx mk t kt) NoHashJoin(cc cct1 cct2 it1 it2 k kt mi mi_idx mk t mc) NoNestLoop(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,3402.669,4133.402109146118,3729.8424243927,4100.673,4133.400440216064,0.8297830624387753,1.0000004037668446,False,0.9023665813026649,"(((((((rt ci) chn) mc) cn) an) t) n) NoHashJoin(an chn ci cn mc rt t n) NoMergeJoin(chn ci mc rt cn) NoMergeJoin(rt ci)/*+ NoMergeJoin(rt ci) NoMergeJoin(chn ci mc rt cn) NoHashJoin(an chn ci cn mc rt t n) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f';","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,28.474,374.6600151062012,582.8800201416016,47.789,374.65834617614746,0.5958274916821863,1.0000044545385702,False,1.555764141091782,"(((((((((((((lt ml) t2) mi_idx2) it2) mi_idx1) kt2) mc1) cn1) it1) mc2) t1) cn2) kt1) NoHashJoin(it2 lt mi_idx1 mi_idx2 ml t2 kt2) NoHashJoin(lt ml t2 mi_idx2) NoMergeJoin(cn1 cn2 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 kt1) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 mc2) NoMergeJoin(it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 cn1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 mc1) NoNestLoop(cn1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 it1) NoNestLoop(lt mi_idx2 ml t2 it2)/*+ NoHashJoin(lt ml t2 mi_idx2) NoNestLoop(lt mi_idx2 ml t2 it2) NoHashJoin(it2 lt mi_idx1 mi_idx2 ml t2 kt2) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 mc1) NoMergeJoin(it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 cn1) NoNestLoop(cn1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mi_idx1 mi_idx2 ml t2 mc2) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t2 t1) NoMergeJoin(cn1 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 cn2) NoMergeJoin(cn1 cn2 it1 it2 kt2 lt mc1 mc2 mi_idx1 mi_idx2 ml t1 t2 kt1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.5'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join movie_companies AS mc1
on mi_idx1.movie_id = mc1.movie_id AND ml.movie_id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]'
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join title AS t1
on t1.id = mc1.movie_id AND t1.id = ml.movie_id AND t1.id = mi_idx1.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode');","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,4904.306,4021.8777656555176,5252.707719802856,3982.514,4021.876096725464,1.2314598266321222,1.0000004149630703,False,1.3060341973437501,"((((((((it miidx) t) kt) mc) cn) ct) mi) it2) NoHashJoin(it miidx t kt) NoHashJoin(it miidx) NoMergeJoin(it kt mc miidx t cn) NoNestLoop(cn ct it kt mc mi miidx t it2) NoNestLoop(cn it kt mc miidx t ct)/*+ NoHashJoin(it miidx) NoHashJoin(it miidx t kt) NoMergeJoin(it kt mc miidx t cn) NoNestLoop(cn it kt mc miidx t ct) NoNestLoop(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,155.267,293.1389808654785,623.1856346130371,201.473,293.1368350982666,0.7706590957597296,1.000007320019032,False,2.125920594060211,"(((((((((((k mk) cc) mi_idx) cct2) cct1) it2) t) kt) ci) chn) n) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct2 k mi_idx mk cct1) NoMergeJoin(cc k mi_idx mk cct2)/*+ NoMergeJoin(cc k mi_idx mk cct2) NoMergeJoin(cc cct2 k mi_idx mk cct1) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join movie_info_idx AS mi_idx
on cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '8.0'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = mi_idx.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,154.443,1343.7237739562988,505.40637969970703,1309.807,1343.7223434448242,0.11791279173191166,1.0000010645885897,False,0.3761241168350491,"((((((((t kt) miidx) it) mc) cn) mi) it2) ct) NoHashJoin(kt t miidx) NoMergeJoin(cn it it2 kt mc mi miidx t ct) NoMergeJoin(cn it kt mc mi miidx t it2) NoMergeJoin(it kt mc miidx t cn) NoMergeJoin(kt miidx t it)/*+ NoHashJoin(kt t miidx) NoMergeJoin(kt miidx t it) NoMergeJoin(it kt mc miidx t cn) NoMergeJoin(cn it kt mc mi miidx t it2) NoMergeJoin(cn it it2 kt mc mi miidx t ct) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,677.814,10208.648681640625,1069.5827007293701,10157.513,10208.64725112915,0.06673031085463538,1.0000001401274272,False,0.10477222637025356,"(((((((((n an) ci) rt) mi) chn) it) mc) cn) t) NoHashJoin(an chn ci cn it mc mi n rt t) NoHashJoin(an chn ci it mi n rt mc)/*+ NoHashJoin(an chn ci it mi n rt mc) NoHashJoin(an chn ci cn it mc mi n rt t) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,0.512,229.2795181274414,213.27710151672363,208.296,229.2783260345459,0.0024580404808541693,1.0000051993265833,False,0.930210479138742,"((((it mi_idx) t) mc) ct) NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct)/*+ NoHashJoin(it mi_idx) NoNestLoop(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,7922.754,6674.764156341553,8204.681396484375,6644.501,6674.762725830078,1.1923775765855102,1.0000002143164535,False,1.2292094466120569,"((((((mi_idx it2) mi) it1) ci) n) t) NoHashJoin(ci it1 it2 mi mi_idx n t) NoHashJoin(mi_idx it2)/*+ NoHashJoin(mi_idx it2) NoHashJoin(ci it1 it2 mi mi_idx n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id;","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,21317.743,9771.303176879883,21596.105337142944,9752.614,9771.30103111267,2.1858491477259325,1.000000219598926,False,2.2101565869661646,"((((((k mk) t) mc) cn) ci) n) NoMergeJoin(cn k mc mk t ci)/*+ NoMergeJoin(cn k mc mk t ci) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,415.259,2660.7532501220703,818.4239864349365,2616.249,2660.7518196105957,0.15872304203460758,1.0000005376343122,False,0.3075912531198471,"(((((((((n ci) mk) cc) cct2) cct1) k) chn) t) kt) NoHashJoin(cc ci mk n cct2) NoMergeJoin(cc cct1 cct2 chn ci k mk n t kt)/*+ NoHashJoin(cc ci mk n cct2) NoMergeJoin(cc cct1 cct2 chn ci k mk n t kt) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on mk.movie_id = ci.movie_id
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id AND ci.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,815.05,859.5151901245117,1135.244369506836,829.482,859.513521194458,0.9826011896581239,1.0000019417147172,False,1.3207987326705428,"(((((((k mk) t) mi_idx) mi) it2) kt) it1)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,44.657,61.72657012939453,260.1964473724365,38.339,61.72513961791992,1.1647930305954772,1.000023175508123,False,4.215404760249369,"((((mk k) ci) n) t)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join title AS t
on t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,7402.366,20912.99557685852,7674.786329269409,20876.243,20912.993907928467,0.35458324565392346,1.0000000798034974,False,0.3669864947629411,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t an)/*+ NoMergeJoin(k mc mk t cn) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,1472.615,2045.5245971679688,1616.713523864746,2012.594,2045.5231666564941,0.7316999851932382,1.000000699337704,False,0.7903667629965502,"(((((((it2 mi_idx) mi) it1) mc) cn) t) ct) NoHashJoin(it2 mi_idx) NoNestLoop(cn it1 it2 mc mi mi_idx t ct) NoNestLoop(it2 mi mi_idx it1)/*+ NoHashJoin(it2 mi_idx) NoNestLoop(it2 mi mi_idx it1) NoNestLoop(cn it1 it2 mc mi mi_idx t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,34.206,203.55653762817383,511.4703178405762,74.068,203.55486869812012,0.4618188691472701,1.0000081989198508,False,2.512690171017755,"(((((((((((lt ml) cc) cct1) mk) k) cct2) t) mc) cn) ct) mi) NoHashJoin(cc cct1 cct2 k lt mk ml t) NoHashJoin(cc cct1 k lt mk ml cct2) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoMergeJoin(cc cct1 cct2 k lt mk ml t mc) NoNestLoop(cc cct1 cct2 cn k lt mc mk ml t ct) NoNestLoop(cc cct1 lt mk ml k)/*+ NoNestLoop(cc cct1 lt mk ml k) NoHashJoin(cc cct1 k lt mk ml cct2) NoHashJoin(cc cct1 cct2 k lt mk ml t) NoMergeJoin(cc cct1 cct2 k lt mk ml t mc) NoMergeJoin(cc cct1 cct2 k lt mc mk ml t cn) NoNestLoop(cc cct1 cct2 cn k lt mc mk ml t ct) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,2944.553,4402.7099609375,3226.917028427124,4376.881,4402.708053588867,0.672751441037579,1.000000433221692,False,0.7329391340851462,"((((((rt ci) mc) cn) an1) t) n1) NoMergeJoin(ci mc rt cn) NoMergeJoin(ci rt mc) NoMergeJoin(rt ci)/*+ NoMergeJoin(rt ci) NoMergeJoin(ci rt mc) NoMergeJoin(ci mc rt cn) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,4051.494,5814.104080200195,4276.602506637573,5792.294,5814.095735549927,0.6994627689823756,1.0000014352447308,False,0.7355576346100655,"((((k mk) t) ci) n) NoHashJoin(k mk t) NoMergeJoin(ci k mk t n) NoMergeJoin(k mk t ci)/*+ NoHashJoin(k mk t) NoMergeJoin(k mk t ci) NoMergeJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,40.566,990.6008243560791,246.40536308288574,964.729,990.5991554260254,0.04204911431085828,1.0000016847682986,False,0.2487437645521862,"((((cn mc) mk) k) t) NoHashJoin(cn k mc mk t)/*+ NoHashJoin(cn k mc mk t) */ select min(t.title) AS movie_title
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,3957.884,7356.93097114563,4239.031076431274,7322.837,7356.928825378418,0.5404850606397493,1.0000002916661643,False,0.5761957437739968,"((((((n ci) mc) mk) k) t) cn) NoHashJoin(ci k mc mk n t cn) NoHashJoin(ci n mc) NoMergeJoin(ci mc mk n k) NoMergeJoin(ci mc n mk)/*+ NoHashJoin(ci n mc) NoMergeJoin(ci mc n mk) NoMergeJoin(ci mc mk n k) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,5046.611,6437.62993812561,5326.135635375977,6411.656,6437.628269195557,0.7870994638514606,1.000000259246105,False,0.8273443903031586,"((((((rt ci) mc) cn) a1) t) n1) NoMergeJoin(ci mc rt cn) NoMergeJoin(ci rt mc) NoMergeJoin(rt ci)/*+ NoMergeJoin(rt ci) NoMergeJoin(ci rt mc) NoMergeJoin(ci mc rt cn) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'writer'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join aka_name AS a1
on a1.person_id = ci.person_id
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id
inner join name AS n1
on n1.id = ci.person_id AND a1.person_id = n1.id;","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,2269.873,3383.791446685791,2752.760171890259,3263.655,3383.789539337158,0.6955002903186764,1.0000005636723592,False,0.8135140025373712,"(((((((((((k mk) cc) cct1) cct2) mi_idx) it2) mi) it1) ci) n) t) NoMergeJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) NoMergeJoin(cc cct1 k mk cct2) NoMergeJoin(cc k mk cct1)/*+ NoMergeJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mk cct2) NoMergeJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,81.245,169.86560821533203,290.87138175964355,156.806,169.86393928527832,0.5181243064678648,1.0000098250991984,False,1.7123786424800795,"((((k mk) t) mi_idx) it)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,21.364,50.89592933654785,245.38397789001465,25.731,50.89402198791504,0.8302825385721503,1.0000374768697444,False,4.821469561754855,"((((t mk) k) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from title AS t
inner join movie_keyword AS mk
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,3.016,216.31741523742676,347.306489944458,187.253,216.31550788879395,0.016106551029890042,1.0000088174382475,False,1.6055552065319583,"(((((((it2 mi_idx) t) mc) cn) ct) mi) it1) NoHashJoin(it2 mi_idx) NoNestLoop(cn ct it2 mc mi mi_idx t it1) NoNestLoop(cn it2 mc mi_idx t ct)/*+ NoHashJoin(it2 mi_idx) NoNestLoop(cn it2 mc mi_idx t ct) NoNestLoop(cn ct it2 mc mi mi_idx t it1) */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,485.004,6127.150297164917,700.937032699585,6087.617,6127.148866653442,0.07967058374401675,1.0000002334709839,False,0.1143985641534488,"((((n ci) mk) k) t) NoHashJoin(ci k mk n t) NoHashJoin(ci mk n k)/*+ NoHashJoin(ci mk n k) NoHashJoin(ci k mk n t) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,46.857,531.1553478240967,525.5467891693115,369.648,531.1541557312012,0.12676113491754318,1.0000022443444763,False,0.9894430524521259,"(((((((((((cn mc) mi) mk) it) k) t) ci) chn) rt) an) n) NoHashJoin(an chn ci cn it k mc mi mk rt t n) NoHashJoin(chn ci cn it k mc mi mk rt t an) NoHashJoin(chn ci cn it k mc mi mk t rt) NoHashJoin(ci cn it k mc mi mk t chn) NoHashJoin(cn it k mc mi mk t ci) NoHashJoin(cn it mc mi mk k) NoHashJoin(cn mc mi mk it)/*+ NoHashJoin(cn mc mi mk it) NoHashJoin(cn it mc mi mk k) NoHashJoin(cn it k mc mi mk t ci) NoHashJoin(ci cn it k mc mi mk t chn) NoHashJoin(chn ci cn it k mc mi mk t rt) NoHashJoin(chn ci cn it k mc mi mk rt t an) NoHashJoin(an chn ci cn it k mc mi mk rt t n) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join title AS t
on t.id = mc.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND t.id = ci.movie_id AND mi.movie_id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join aka_name AS an
on ci.person_id = an.person_id
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%';","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,17.175,34.46054458618164,204.55670356750488,15.677,34.45911407470703,1.0955539963003127,1.000041513298093,False,5.936214817479866,"((((t mk) k) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from title AS t
inner join movie_keyword AS mk
on t.id = mk.movie_id AND t.production_year > 2014
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,199.024,1418.3928966522217,452.8040885925293,1387.02,1418.391466140747,0.14349036062926274,1.0000010085448967,False,0.31923774176712194,"((((((((t kt) miidx) it) mc) cn) mi) it2) ct) NoHashJoin(kt t miidx) NoMergeJoin(cn it it2 kt mc mi miidx t ct) NoMergeJoin(cn it kt mc mi miidx t it2) NoMergeJoin(it kt mc miidx t cn) NoMergeJoin(kt miidx t it)/*+ NoHashJoin(kt t miidx) NoMergeJoin(kt miidx t it) NoMergeJoin(it kt mc miidx t cn) NoMergeJoin(cn it kt mc mi miidx t it2) NoMergeJoin(cn it it2 kt mc mi miidx t ct) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,20210.881,7628.947734832764,20476.95016860962,7592.011,7628.945827484131,2.6621248309571732,1.000000250014704,False,2.6841126718765147,"((((((k mk) t) mc) cn) ci) n)/*+  */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'Z%';","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,45.649,256.9143772125244,487.4539375305176,171.25,256.9127082824707,0.26656350364963505,1.0000064960977013,False,1.8973523761797377,"((((((((((cn mc) t) mi) mi_idx) it2) it1) mk) k) ci) n) NoHashJoin(cn it2 mc mi mi_idx t it1) NoHashJoin(cn mc mi t mi_idx) NoHashJoin(cn mc t) NoMergeJoin(cn it1 it2 k mc mi mi_idx mk t ci) NoMergeJoin(cn it1 it2 mc mi mi_idx mk t k) NoMergeJoin(cn it1 it2 mc mi mi_idx t mk) NoMergeJoin(cn mc mi mi_idx t it2) NoMergeJoin(cn mc t mi)/*+ NoHashJoin(cn mc t) NoMergeJoin(cn mc t mi) NoHashJoin(cn mc mi t mi_idx) NoMergeJoin(cn mc mi mi_idx t it2) NoHashJoin(cn it2 mc mi mi_idx t it1) NoMergeJoin(cn it1 it2 mc mi mi_idx t mk) NoMergeJoin(cn it1 it2 mc mi mi_idx mk t k) NoMergeJoin(cn it1 it2 k mc mi mi_idx mk t ci) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mc.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,266.972,2152.11820602417,818.9835548400879,1792.402,2152.116298675537,0.14894649749330785,1.0000008862665246,False,0.3805480007488952,"(((((((((((((k mk) cc) mi_idx) t) cct2) mi) it1) cct1) it2) kt) mc) cn) ct) NoHashJoin(cc cct2 it1 k mi mi_idx mk t cct1) NoHashJoin(cc cct2 k mi mi_idx mk t it1) NoNestLoop(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(cc cct1 cct2 it1 k mi mi_idx mk t it2)/*+ NoHashJoin(cc cct2 k mi mi_idx mk t it1) NoHashJoin(cc cct2 it1 k mi mi_idx mk t cct1) NoNestLoop(cc cct1 cct2 it1 k mi mi_idx mk t it2) NoNestLoop(cc cct1 cct2 cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.5'
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,157.569,470.17812728881836,519.157886505127,429.494,470.17669677734375,0.3668712484924119,1.0000030424976065,False,1.104176132214776,"((((((((t mi_idx) it2) mk) k) mi) it1) ci) n) NoHashJoin(it2 k mi mi_idx mk t it1) NoHashJoin(it2 mi_idx mk t k) NoHashJoin(mi_idx t it2)/*+ NoHashJoin(mi_idx t it2) NoHashJoin(it2 mi_idx mk t k) NoHashJoin(it2 k mi mi_idx mk t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from title AS t
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info = 'Horror'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,534.828,7953.123092651367,814.9328231811523,7926.64,7953.121662139893,0.0674722202597822,1.000000179867923,False,0.10246703845366348,"((((((n ci) mc) mk) k) t) cn) NoHashJoin(ci k mc mk n t cn) NoHashJoin(ci n mc) NoMergeJoin(ci mc mk n k) NoMergeJoin(ci mc n mk)/*+ NoHashJoin(ci n mc) NoMergeJoin(ci mc n mk) NoMergeJoin(ci mc mk n k) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,561.456,966.7801856994629,775.3276824951172,945.158,966.7785167694092,0.5940340133607291,1.0000017262796232,False,0.8019703262397215,"((((k mk) t) mc) cn) NoNestLoop(k mc mk t cn)/*+ NoNestLoop(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,142.239,248.4109401702881,422.9567050933838,221.97,248.40927124023438,0.6408028111907015,1.000006718469264,False,1.702660705784794,"((((((t mc) cn) ci) rt) an) n)/*+  */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%') AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mc.movie_id AND ci.note = '(voice: English version)'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,32.469,169.297456741333,510.17022132873535,17.057,169.2960262298584,1.9035586562701532,1.0000084497640402,False,3.0134801902323542,"(((((((((((lt ml) cc) cct2) t) mc) cn) mk) k) mi) ct) cct1) NoHashJoin(cc cct2 lt ml t) NoMergeJoin(cc cct2 cn lt mc ml t mk) NoNestLoop(cc cct2 cn k lt mc mi mk ml t ct) NoNestLoop(cc cct2 cn lt mc mk ml t k)/*+ NoHashJoin(cc cct2 lt ml t) NoMergeJoin(cc cct2 cn lt mc ml t mk) NoNestLoop(cc cct2 cn lt mc mk ml t k) NoNestLoop(cc cct2 cn k lt mc mi mk ml t ct) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join title AS t
on t.id = cc.movie_id AND ml.movie_id = t.id AND t.production_year = 1998
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,3790.605,5129.036903381348,4074.1262435913086,5068.25,5129.035711288452,0.7479120011838406,1.0000002324204709,False,0.7943259655269309,"((((((rt ci) chn) t) mc) cn) ct) NoMergeJoin(rt ci) NoNestLoop(chn ci cn mc rt t ct)/*+ NoMergeJoin(rt ci) NoNestLoop(chn ci cn mc rt t ct) */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from role_type AS rt
inner join cast_info AS ci
on rt.id = ci.role_id AND ci.note like '%(producer)%'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,220.072,186.49697303771973,1228.7821769714355,162.144,186.46931648254395,1.3572626800868364,1.0001483169225773,False,6.589728541673859,"(((((k mk) t1) ml) t2) lt)/*+  */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join title AS t2
on ml.linked_movie_id = t2.id
inner join link_type AS lt
on lt.id = ml.link_type_id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,360.657,2302.330493927002,1614.4678592681885,2232.44,2302.311420440674,0.16155283008725876,1.0000082844945122,False,0.7012378277475474,"(((((((n ci) mc) cn) chn) an) rt) t) NoHashJoin(chn ci cn mc n an) NoHashJoin(ci mc n cn) NoHashJoin(ci n mc)/*+ NoHashJoin(ci n mc) NoHashJoin(ci mc n cn) NoHashJoin(chn ci cn mc n an) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%' AND ci.note = '(voice)'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join title AS t
on t.id = mc.movie_id AND ci.movie_id = t.id AND t.production_year BETWEEN 2007 AND 2010;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
