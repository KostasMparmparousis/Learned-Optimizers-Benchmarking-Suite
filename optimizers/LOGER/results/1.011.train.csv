filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
31c.sql,401.612,674.3593215942383,822.4647045135498,592.709,674.3576526641846,0.6775871464749145,1.0000024748440937,False,1.2196268571495241,"((((((((((cn mc) mk) k) ci) mi_idx) it2) t) mi) it1) n) NoMergeJoin(ci cn it2 k mc mi mi_idx mk t it1) NoMergeJoin(ci cn k mc mi_idx mk it2) NoMergeJoin(ci cn k mc mk mi_idx)/*+ NoMergeJoin(ci cn k mc mk mi_idx) NoMergeJoin(ci cn k mc mi_idx mk it2) NoMergeJoin(ci cn it2 k mc mi mi_idx mk t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id;","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'it1'), (4, 't'), (5, 'mk'), (6, 'k'), (7, 'ci'), (8, 'n')]"
7c.sql,3312.166,4087.2292518615723,3667.370557785034,4053.487,4087.2275829315186,0.8171152392989048,1.0000004083281442,False,0.8972758387862154,"(((((((it pi) an) n) ci) ml) lt) t) NoMergeJoin(an ci it lt ml n pi t)/*+ NoMergeJoin(an ci it lt ml n pi t) */ select min(n.name) AS cast_member_name,
min(pi.info) AS cast_member_info
from info_type AS it
inner join person_info AS pi
on it.id = pi.info_type_id AND it.info = 'mini biography' AND pi.note IS NOT NULL
inner join aka_name AS an
on pi.person_id = an.person_id AND an.name IS NOT NULL AND ( an.name like '%a%' OR an.name like 'A%')
inner join name AS n
on n.id = an.person_id AND n.id = pi.person_id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'A%'))
inner join cast_info AS ci
on ci.person_id = n.id AND an.person_id = ci.person_id AND pi.person_id = ci.person_id
inner join movie_link AS ml
on ci.movie_id = ml.linked_movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('references',
'referenced in',
'features',
'featured in')
inner join title AS t
on ml.linked_movie_id = t.id AND t.id = ci.movie_id AND t.production_year BETWEEN 1980 AND 2010;","[('it', 'pi'), (0, 'an'), (1, 'n'), (2, 'ci'), (3, 'ml'), (4, 'lt'), (5, 't')]"
10b.sql,170.856,305.32312393188477,453.9821147918701,274.653,305.32169342041016,0.6220794966739849,1.00000468525986,False,1.486897670801148,"((((((cn mc) t) ci) rt) chn) ct) NoHashJoin(chn ci cn mc rt t ct)/*+ NoHashJoin(chn ci cn mc rt t ct) */ select min(chn.name) AS character,
min(t.title) AS russian_mov_with_actor_producer
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND ci.note like '%(producer)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
15d.sql,607.116,1372.5192546844482,958.0459594726562,1327.554,1372.5178241729736,0.4573192502903836,1.000001042253477,False,0.6980207780179014,"((((((((it1 mi) mk) k) t) at) mc) ct) cn) NoMergeJoin(at ct it1 k mc mi mk t cn) NoMergeJoin(it1 k mi mk t at) NoNestLoop(at it1 k mc mi mk t ct)/*+ NoMergeJoin(it1 k mi mk t at) NoNestLoop(at it1 k mc mi mk t ct) NoMergeJoin(at ct it1 k mc mi mk t cn) */ select min(at.title) AS aka_title,
min(t.title) AS internet_movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join title AS t
on t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 1990
inner join aka_title AS at
on t.id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
29b.sql,95.226,4159.345865249634,767.2276496887207,36.001,4159.344434738159,2.645093191855782,1.0000003439271494,False,0.18445879193869155,"((((((((((((((((k mk) cc) cct1) cct2) ci) pi) n) it3) t) mc) cn) chn) an) rt) mi) it) NoHashJoin(k mk cc) NoMergeJoin(an cc cct1 cct2 chn ci cn it3 k mc mi mk n pi rt t it) NoMergeJoin(an cc cct1 cct2 chn ci cn it3 k mc mk n pi rt t mi) NoMergeJoin(cc cct1 cct2 ci cn it3 k mc mk n pi t chn) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t mc) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t) NoMergeJoin(cc cct1 cct2 ci k mk n pi it3)/*+ NoHashJoin(k mk cc) NoMergeJoin(cc cct1 cct2 ci k mk n pi it3) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t mc) NoMergeJoin(cc cct1 cct2 ci cn it3 k mc mk n pi t chn) NoMergeJoin(an cc cct1 cct2 chn ci cn it3 k mc mk n pi rt t mi) NoMergeJoin(an cc cct1 cct2 chn ci cn it3 k mc mi mk n pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join cast_info AS ci
on ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join name AS n
on n.id = ci.person_id AND n.id = pi.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'height'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info like 'USA:%200%'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
30b.sql,272.906,726.2678146362305,754.1429996490479,585.987,726.2659072875977,0.4657202292883631,1.0000026262400776,False,1.0383841401361706,"(((((((((((k mk) cc) cct2) t) ci) mi_idx) cct1) it2) mi) it1) n) NoHashJoin(k mk cc) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 ci k mi_idx mk t it2) NoMergeJoin(cc cct2 ci k mk t mi_idx)/*+ NoHashJoin(k mk cc) NoMergeJoin(cc cct2 ci k mk t mi_idx) NoMergeJoin(cc cct1 cct2 ci k mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_gore_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm';","[('k', 'mk'), (0, 't'), (1, 'cc'), (2, 'ci'), (3, 'mi'), (4, 'mi_idx'), (5, 'cct1'), (6, 'it1'), (7, 'it2'), (8, 'cct2'), (9, 'n')]"
19d.sql,5974.925,12675.868511199951,6376.987457275391,12621.243,12675.866842269897,0.4734022631526863,1.0000001316620057,False,0.5030809755755882,"(((((((((ci t) n) mc) cn) an) rt) chn) mi) it) NoMergeJoin(ci mc n t cn) NoMergeJoin(ci n t mc)/*+ NoMergeJoin(ci n t mc) NoMergeJoin(ci mc n t cn) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)') AND t.production_year > 2000
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates';","[('rt', 'ci'), (0, 'n'), (1, 't'), (2, 'mi'), ('it', 3), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
2b.sql,466.506,791.9330596923828,680.6697845458984,752.763,791.9316291809082,0.6197249333455549,1.000001806357294,False,0.859505744517254,"((((k mk) mc) cn) t)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[nl]'
inner join title AS t
on mc.movie_id = t.id AND t.id = mk.movie_id;","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
15c.sql,461.233,793.2233810424805,820.7111358642578,747.424,793.2217121124268,0.6170968553324485,1.0000021039893743,False,1.0346554101231344,"((((((((it1 mi) mk) k) t) at) mc) ct) cn) NoMergeJoin(at ct it1 k mc mi mk t cn) NoMergeJoin(it1 k mi mk t at) NoNestLoop(at it1 k mc mi mk t ct)/*+ NoMergeJoin(it1 k mi mk t at) NoNestLoop(at it1 k mc mi mk t ct) NoMergeJoin(at ct it1 k mc mi mk t cn) */ select min(mi.info) AS release_date,
min(t.title) AS modern_american_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join title AS t
on t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 1990
inner join aka_title AS at
on t.id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = at.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('it1', 'mi'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ct'), (4, 'mk'), (5, 'k'), (6, 'at')]"
23b.sql,404.65,145.34544944763184,848.9019870758057,77.149,145.34354209899902,5.245045301948178,1.0000131230366707,False,5.840658448364952,"((((((((((it1 mi) mk) cc) t) cct1) kt) k) mc) ct) cn) NoHashJoin(cc cct1 it1 kt mi mk t k) NoHashJoin(cc it1 mi mk t cct1) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct)/*+ NoHashJoin(cc it1 mi mk t cct1) NoHashJoin(cc cct1 it1 kt mi mk t k) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_nerdy_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('nerd',
'loner',
'alienation',
'dignity')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
23c.sql,430.549,826.4560699462891,873.544454574585,756.62,826.4541625976562,0.569042584124131,1.0000023078698361,False,1.0569787099007617,"((((((((((it1 mi) mk) cc) k) cct1) t) kt) mc) ct) cn) NoHashJoin(cc it1 k mi mk cct1) NoHashJoin(it1 mi mk cc) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct)/*+ NoHashJoin(it1 mi mk cc) NoHashJoin(cc it1 k mi mk cct1) NoNestLoop(cc cct1 it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join movie_keyword AS mk
on mk.movie_id = mi.movie_id
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.id = mi.movie_id AND t.production_year > 1990
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'tv movie',
'video movie',
'video game')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('cc', 'cct1'), ('t', 0), (1, 'kt'), (2, 'mi'), (3, 'it1'), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mk'), (8, 'k')]"
11b.sql,10.054,92.27466583251953,343.87707710266113,59.813,92.27228164672852,0.16809054887733435,1.0000258385914866,False,3.7267646466055844,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(cn lt mc mk ml t k) NoMergeJoin(lt mc ml t cn)/*+ NoMergeJoin(lt mc ml t cn) NoHashJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follows%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998 AND t.title like '%Money%'
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
22b.sql,218.195,450.83069801330566,668.9140796661377,372.788,450.82902908325195,0.585305857484683,1.0000037019134662,False,1.483742253746072,"((((((((((k mk) t) kt) mi_idx) it2) mc) cn) ct) mi) it1) NoMergeJoin(it2 k kt mc mi_idx mk t cn) NoMergeJoin(it2 k kt mi_idx mk t mc)/*+ NoMergeJoin(it2 k kt mi_idx mk t mc) NoMergeJoin(it2 k kt mc mi_idx mk t cn) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2009
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
1d.sql,188.045,209.80072021484375,420.72081565856934,186.695,209.79881286621094,1.0072310452877689,1.0000090913223327,False,2.0053536524387474,"((((it mi_idx) t) mc) ct)/*+  */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2000
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
19b.sql,143.539,279.7887325286865,577.9664516448975,222.656,279.7870635986328,0.6446671098016671,1.000005965000784,False,2.0657368650682737,"(((((((((t mc) cn) ci) chn) an) rt) mi) it) n)/*+  */ select min(n.name) AS voicing_actress,
min(t.title) AS kung_fu_panda
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2007 AND 2008 AND t.title like '%Kung%Fu%Panda%' AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join cast_info AS ci
on t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND ci.note = '(voice)'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join aka_name AS an
on ci.person_id = an.person_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%2007%' OR mi.info like 'USA:%2008%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join name AS n
on n.id = an.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Angel%';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'chn'), (3, 'cn'), (4, 'mi'), (5, 'it'), (6, 'n'), (7, 'rt')]"
1c.sql,143.219,224.34639930725098,297.2702980041504,202.212,224.34425354003906,0.7082616264118846,1.000009564618563,False,1.325063126482516,"((((it mi_idx) t) mc) ct) NoMergeJoin(it mc mi_idx t ct)/*+ NoMergeJoin(it mc mi_idx t ct) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year > 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note like '%(co-production)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
11d.sql,147.126,248.73733520507812,218.95289421081543,216.348,248.7356662750244,0.680043263630817,1.000006709653178,False,0.8802633634724564,"(((((((k mk) ml) lt) t) mc) cn) ct) NoMergeJoin(k lt mc mk ml t cn) NoMergeJoin(k lt mk ml t mc)/*+ NoMergeJoin(k lt mk ml t mc) NoMergeJoin(k lt mc mk ml t cn) */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 't'), (2, 'lt'), (3, 'mc'), (4, 'ct'), (5, 'cn')]"
18b.sql,457.239,383.7714195251465,723.9458560943604,353.871,383.76903533935547,1.292106445569148,1.0000062125538318,False,1.886410286995137,"((((((mi_idx it2) t) ci) n) mi) it1) NoMergeJoin(ci it2 mi mi_idx n t it1)/*+ NoMergeJoin(ci it2 mi mi_idx n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from movie_info_idx AS mi_idx
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2008 AND 2014
inner join cast_info AS ci
on ci.movie_id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender IS NOT NULL AND n.gender = 'f'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Thriller') AND mi.note IS NULL
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'ci'), (4, 'n')]"
20c.sql,1764.824,1012.6800537109375,2166.536331176758,969.875,1012.6783847808838,1.819640675344761,1.000001648035624,False,2.1394120421021308,"(((((((((k mk) cc) t) cct2) kt) cct1) ci) n) chn) NoHashJoin(cc k mk t cct2)/*+ NoHashJoin(cc k mk t cct2) */ select min(n.name) AS cast_member,
min(t.title) AS complete_dynamic_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join name AS n
on n.id = ci.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%');","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
17e.sql,10258.976,11825.724601745605,10546.343803405762,11787.336,11825.722694396973,0.8703388110765656,1.0000001612881244,False,0.8918138938267696,"((((((k mk) t) mc) cn) ci) n) NoHashJoin(ci cn k mc mk t n) NoMergeJoin(k mc mk t cn) NoMergeJoin(k mk t mc)/*+ NoMergeJoin(k mk t mc) NoMergeJoin(k mc mk t cn) NoHashJoin(ci cn k mc mk t n) */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
16d.sql,1141.611,1891.4306163787842,1460.667371749878,1860.566,1891.4291858673096,0.6135826409812928,1.0000007563124675,False,0.7722559124412014,"(((((((k mk) t) mc) cn) ci) an) n)/*+  */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 5 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
26c.sql,757.984,5043.776512145996,1241.2691116333008,4944.504,5043.771743774414,0.15329828836218962,1.0000009453979728,False,0.24609938250386007,"(((((((((((k mk) cc) t) kt) cct1) mi_idx) it2) cct2) ci) chn) n) NoHashJoin(cc k kt mk t cct1) NoHashJoin(k mk cc) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 k kt mi_idx mk t it2)/*+ NoHashJoin(k mk cc) NoHashJoin(cc k kt mk t cct1) NoMergeJoin(cc cct1 k kt mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), (2, 'it2'), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
15b.sql,43.989,90.39425849914551,322.0832347869873,45.102,90.3925895690918,0.9753226021019024,1.0000184631291311,False,3.563159727167703,"((((((((cn mc) at) t) ct) mi) mk) k) it1) NoMergeJoin(at cn ct k mc mi mk t it1) NoMergeJoin(at cn ct mc mi mk t k) NoMergeJoin(at cn ct mc t mi) NoMergeJoin(at cn mc t ct) NoMergeJoin(cn mc at) NoMergeJoin(cn mc)/*+ NoMergeJoin(cn mc) NoMergeJoin(cn mc at) NoMergeJoin(at cn mc t ct) NoMergeJoin(at cn ct mc t mi) NoMergeJoin(at cn ct mc mi mk t k) NoMergeJoin(at cn ct k mc mi mk t it1) */ select min(mi.info) AS release_date,
min(t.title) AS youtube_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'YouTube' AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join aka_title AS at
on mc.movie_id = at.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = at.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND t.id = mi.movie_id AND mi.movie_id = at.movie_id AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = at.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'release dates';","[('cn', 'mc'), (0, 'at'), (1, 'ct'), (2, 't'), (3, 'mi'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
22d.sql,678.721,1600.3408432006836,1070.2531337738037,1504.342,1600.339412689209,0.451174666398997,1.0000008938800502,False,0.6687663412446684,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) cn) ct) NoMergeJoin(it1 it2 k kt mc mi mi_idx mk t cn) NoMergeJoin(it1 it2 k kt mi mi_idx mk t mc) NoMergeJoin(it2 k kt mi_idx mk t mi) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) NoNestLoop(it2 k kt mi mi_idx mk t it1)/*+ NoMergeJoin(it2 k kt mi_idx mk t mi) NoNestLoop(it2 k kt mi mi_idx mk t it1) NoMergeJoin(it1 it2 k kt mi mi_idx mk t mc) NoMergeJoin(it1 it2 k kt mc mi mi_idx mk t cn) NoNestLoop(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1'), (6, 'mc'), (7, 'cn'), (8, 'ct')]"
3b.sql,141.079,158.69617462158203,314.5871162414551,138.689,158.69474411010742,1.0172328014478438,1.0000090142334745,False,1.982341116623148,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Bulgaria');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
5b.sql,213.428,305.5107593536377,425.34613609313965,278.213,305.509090423584,0.7671388468547479,1.0000054627836161,False,1.3922536167529527,"((((mc ct) t) mi) it) NoMergeJoin(ct mc t mi) NoNestLoop(ct mc mi t it)/*+ NoMergeJoin(ct mc t mi) NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_vhs_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note like '%(VHS)%' AND mc.note like '%(USA)%' AND mc.note like '%(1994)%' AND ct.kind = 'production companies'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('USA',
'America')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
7b.sql,167.509,420.7470417022705,478.029727935791,376.891,420.7456111907959,0.44444945620882426,1.0000033999439009,False,1.1361490535406167,"(((((((lt ml) t) ci) n) pi) an) it) NoMergeJoin(an ci lt ml n pi t it)/*+ NoMergeJoin(an ci lt ml n pi t it) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.production_year BETWEEN 1980 AND 1984
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = ml.linked_movie_id
inner join name AS n
on ci.person_id = n.id AND n.name_pcode_cf like 'D%' AND n.gender = 'm'
inner join person_info AS pi
on n.id = pi.person_id AND pi.person_id = ci.person_id AND pi.note = 'Volker Boehm'
inner join aka_name AS an
on n.id = an.person_id AND an.person_id = ci.person_id AND pi.person_id = an.person_id AND an.name like '%a%'
inner join info_type AS it
on it.id = pi.info_type_id AND it.info = 'mini biography';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
25c.sql,5574.552,7276.621341705322,5936.930179595947,7233.483,7276.619434356689,0.7706594458022504,1.0000002621201576,False,0.815891257355665,"((((((((ci t) mk) k) mi_idx) it2) mi) n) it1) NoHashJoin(ci mk t k) NoMergeJoin(ci it2 k mi mi_idx mk n t it1) NoMergeJoin(ci k mi_idx mk t it2) NoMergeJoin(ci k mk t mi_idx)/*+ NoHashJoin(ci mk t k) NoMergeJoin(ci k mk t mi_idx) NoMergeJoin(ci k mi_idx mk t it2) NoMergeJoin(ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_keyword AS mk
on t.id = mk.movie_id AND ci.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id AND ci.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), ('it1', 3), (4, 'ci'), (5, 'n'), (6, 't')]"
3c.sql,364.956,397.25255966186523,548.9485263824463,385.849,397.2506523132324,0.9458518746970966,1.0000048013731928,False,1.3818694146525907,"(((k mk) t) mi)/*+  */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29c.sql,421.515,5532.9694747924805,1156.4805507659912,546.548,5532.965183258057,0.7712314380438681,1.0000007756301155,False,0.2090164156943066,"((((((((((((((((k mk) cc) t) ci) n) cct2) pi) cct1) it3) rt) mc) cn) an) mi) it) chn) NoHashJoin(an cc cct1 cct2 ci cn it3 k mc mk n pi rt t mi) NoMergeJoin(an cc cct1 cct2 ci cn it3 k mc mi mk n pi rt t it) NoMergeJoin(cc cct1 cct2 ci it3 k mc mk n pi rt t cn) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi rt t mc) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t rt) NoMergeJoin(cc cct1 cct2 ci k mk n pi t it3) NoMergeJoin(cc cct2 ci k mk n pi t cct1) NoMergeJoin(cc ci k mk n t cct2)/*+ NoMergeJoin(cc ci k mk n t cct2) NoMergeJoin(cc cct2 ci k mk n pi t cct1) NoMergeJoin(cc cct1 cct2 ci k mk n pi t it3) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi t rt) NoMergeJoin(cc cct1 cct2 ci it3 k mk n pi rt t mc) NoMergeJoin(cc cct1 cct2 ci it3 k mc mk n pi rt t cn) NoHashJoin(an cc cct1 cct2 ci cn it3 k mc mk n pi rt t mi) NoMergeJoin(an cc cct1 cct2 ci cn it3 k mc mi mk n pi rt t it) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join person_info AS pi
on n.id = pi.person_id AND ci.person_id = pi.person_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'ci'), (5, 'pi'), ('it3', 6), (7, 'an'), (8, 'chn'), (9, 'n'), (10, 'rt'), (11, 'mc'), (12, 'cn'), (13, 'mi'), (14, 'it')]"
16c.sql,1409.214,2315.1159286499023,1744.9157238006592,2284.1,2315.1142597198486,0.6169668578433518,1.0000007208845294,False,0.7537060931117114,"(((((((k mk) t) mc) cn) ci) an) n)/*+  */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
21b.sql,40.487,156.4931869506836,397.7015018463135,110.166,156.49175643920898,0.36750903182470096,1.0000091411299046,False,2.5413575187316986,"((((((((lt ml) t) mi) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mi mk ml t ct) NoHashJoin(cn lt mc mi mk ml t k) NoMergeJoin(lt mc mi ml t cn) NoMergeJoin(lt mi ml t mc)/*+ NoMergeJoin(lt mi ml t mc) NoMergeJoin(lt mc mi ml t cn) NoHashJoin(cn lt mc mi mk ml t k) NoHashJoin(cn k lt mc mi mk ml t ct) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS german_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
5c.sql,244.796,443.58062744140625,451.1895179748535,404.193,443.57943534851074,0.6056413643977011,1.000002687439499,False,1.017156076273833,"((((mc ct) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS american_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note not like '%(TV)%' AND mc.note like '%(USA)%' AND ct.kind = 'production companies'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 1990
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
4b.sql,80.511,131.78539276123047,120.80264091491699,108.736,131.78372383117676,0.7404263537374925,1.0000126641591631,False,0.916673451037647,"((((k mk) t) mi_idx) it) NoMergeJoin(k mi_idx mk t it)/*+ NoMergeJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '9.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
22c.sql,1764.237,3028.0513763427734,2206.544876098633,2960.094,3028.0497074127197,0.5960070862614498,1.000000551156756,False,0.7287016691624881,"((((((((((k mk) t) kt) mi_idx) it2) mc) cn) mi) it1) ct) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) NoMergeJoin(cn it2 k kt mc mi mi_idx mk t it1)/*+ NoMergeJoin(cn it2 k kt mc mi mi_idx mk t it1) NoHashJoin(cn it1 it2 k kt mc mi mi_idx mk t ct) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
33b.sql,17.751,472.72396087646484,573.0745792388916,48.959,472.72229194641113,0.36256867991584796,1.0000035304661576,False,1.2122859213583619,"(((((((((((((lt ml) t2) kt2) mi_idx1) it1) t1) kt1) mi_idx2) it2) mc1) cn1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoHashJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(lt ml t2 kt2) NoHashJoin(lt ml t2) NoMergeJoin(it1 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 it2) NoMergeJoin(it1 kt1 kt2 lt mi_idx1 ml t1 t2 mi_idx2) NoMergeJoin(kt2 lt mi_idx1 ml t2 it1) NoMergeJoin(kt2 lt ml t2 mi_idx1)/*+ NoHashJoin(lt ml t2) NoHashJoin(lt ml t2 kt2) NoMergeJoin(kt2 lt ml t2 mi_idx1) NoMergeJoin(kt2 lt mi_idx1 ml t2 it1) NoMergeJoin(it1 kt1 kt2 lt mi_idx1 ml t1 t2 mi_idx2) NoMergeJoin(it1 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 it2) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 cn1) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t2
on t2.id = ml.linked_movie_id AND t2.production_year = 2007
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_info_idx AS mi_idx2
on t2.id = mi_idx2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[nl]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('lt', 'ml'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc1'), (7, 'cn1'), (8, 'mc2'), (9, 'cn2'), (10, 't2'), (11, 'kt2')]"
14b.sql,128.087,206.62665367126465,446.0301399230957,174.777,206.62474632263184,0.7328595867877352,1.000009230978703,False,2.1586482154787356,"(((((((k mk) t) kt) mi_idx) it2) mi) it1) NoMergeJoin(it2 k kt mi mi_idx mk t it1)/*+ NoMergeJoin(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS western_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010 AND ( t.title like '%murder%' OR t.title like '%Murder%' OR t.title like '%Mord%')
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mi_idx'), (4, 'it2'), (5, 'kt')]"
21c.sql,56.753,151.3824462890625,416.5041446685791,107.32,151.3807773590088,0.5288203503540813,1.000011024715838,False,2.751367458503757,"((((((((lt ml) mk) k) t) mc) cn) ct) mi) NoHashJoin(lt mk ml k)/*+ NoHashJoin(lt mk ml k) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join movie_keyword AS mk
on ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join title AS t
on t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 'mi')]"
9c.sql,729.487,2671.0402965545654,1044.3437099456787,2639.086,2671.03910446167,0.27641653208724537,1.0000004463030487,False,0.3909878025376791,"(((((((n an) ci) rt) chn) t) mc) cn) NoHashJoin(an ci n rt chn)/*+ NoHashJoin(an ci n rt chn) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('rt', 'ci'), (0, 'n'), (1, 'mc'), (2, 'cn'), (3, 'chn'), (4, 't'), (5, 'an')]"
11c.sql,187.646,732.5477600097656,506.4353942871094,678.114,732.5458526611328,0.27671748408084773,1.0000026037259317,False,0.6913361019619075,"(((((((k mk) ml) lt) mc) cn) t) ct)/*+  */ select min(cn.name) AS from_company,
min(mc.note) AS production_note,
min(t.title) AS movie_based_on_book
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword IN ('sequel',
'revenge',
'based-on-novel')
inner join movie_link AS ml
on ml.movie_id = mk.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join movie_companies AS mc
on mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NOT NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '20th Century Fox%' OR cn.name like 'Twentieth Century Fox%')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year > 1950
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind <> 'production companies' AND ct.kind IS NOT NULL;","[('k', 'mk'), (0, 'ml'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'lt'), (5, 't')]"
28c.sql,1050.762,2067.722797393799,1611.4132404327393,1716.01,2067.721128463745,0.612328599483686,1.000000807134981,False,0.7793184575281538,"(((((((((((((k mk) cc) t) cct2) kt) cct1) mc) cn) mi) mi_idx) it2) it1) ct) NoHashJoin(cc k mk t cct2) NoMergeJoin(cc cct1 cct2 cn it2 k kt mc mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 k kt mc mk t cn)/*+ NoHashJoin(cc k mk t cct2) NoMergeJoin(cc cct1 cct2 k kt mc mk t cn) NoMergeJoin(cc cct1 cct2 cn it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), (4, 'kt'), (5, 'mc'), (6, 'ct'), (7, 'mi'), (8, 'it1'), (9, 'mi_idx'), (10, 'it2'), (11, 'cn')]"
9d.sql,3922.378,4133.402109146118,4193.011999130249,4100.673,4133.400440216064,0.9565205516265258,1.0000004037668446,False,1.0144219172026478,"(((((((rt ci) an) t) mc) cn) n) chn)/*+  */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'actress' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join aka_name AS an
on an.person_id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.gender = 'f'
inner join char_name AS chn
on chn.id = ci.person_role_id;","[('mc', 'cn'), ('rt', 'ci'), (0, 1), (2, 'n'), (3, 'chn'), (4, 't'), (5, 'an')]"
33c.sql,215.28,374.6602535247803,772.0491886138916,47.789,374.65834617614746,4.504802360375819,1.0000050909012232,False,2.060675269865492,"(((((((((((((it2 mi_idx2) t2) kt2) ml) lt) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoNestLoop(it2 kt2 mi_idx2 ml t2 lt)/*+ NoNestLoop(it2 kt2 mi_idx2 ml t2 lt) NoMergeJoin(it2 kt2 lt mi_idx2 ml t2 mi_idx1) NoMergeJoin(it2 kt2 lt mi_idx1 mi_idx2 ml t2 it1) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating' AND mi_idx2.info < '3.5'
inner join title AS t2
on t2.id = mi_idx2.movie_id AND t2.production_year BETWEEN 2000 AND 2010
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series',
'episode')
inner join movie_link AS ml
on t2.id = ml.linked_movie_id AND ml.linked_movie_id = mi_idx2.movie_id
inner join link_type AS lt
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series',
'episode')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code <> '[us]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 't2'), (7, 'mc1'), (8, 'cn1'), (9, 'kt2'), (10, 'mc2'), (11, 'cn2')]"
13d.sql,3026.347,4021.8777656555176,3387.336254119873,3982.514,4021.876096725464,0.759908690842016,1.0000004149630703,False,0.8422278987852905,"((((((((it miidx) mc) ct) cn) t) kt) mi) it2) NoMergeJoin(ct it mc miidx cn) NoMergeJoin(it mc miidx ct)/*+ NoMergeJoin(it mc miidx ct) NoMergeJoin(ct it mc miidx cn) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on mc.movie_id = t.id AND miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
26b.sql,170.102,293.1385040283203,649.7883796691895,201.473,293.1368350982666,0.8442917909595826,1.000005693348136,False,2.2166725633486646,"(((((((((((it2 mi_idx) cc) t) mk) k) cct2) cct1) kt) ci) chn) n) NoHashJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoHashJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoHashJoin(cc cct2 it2 k mi_idx mk t cct1) NoHashJoin(cc it2 k mi_idx mk t cct2) NoHashJoin(cc it2 mi_idx mk t k) NoHashJoin(it2 mi_idx cc) NoHashJoin(it2 mi_idx)/*+ NoHashJoin(it2 mi_idx) NoHashJoin(it2 mi_idx cc) NoHashJoin(cc it2 mi_idx mk t k) NoHashJoin(cc it2 k mi_idx mk t cct2) NoHashJoin(cc cct2 it2 k mi_idx mk t cct1) NoHashJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoHashJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(t.title) AS complete_hero_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on it2.id = mi_idx.info_type_id AND it2.info = 'rating' AND mi_idx.info > '8.0'
inner join complete_cast AS cc
on cc.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2005
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'fight')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = mi_idx.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'ci'), (4, 'chn'), (5, 'n'), (6, 'cct1'), (7, 't'), (8, 'cct2'), (9, 'kt')]"
13c.sql,153.377,1343.724250793457,514.5316123962402,1309.807,1343.7223434448242,0.11709893136927807,1.000001419451453,False,0.38291512744899736,"((((((((t kt) miidx) it) mc) ct) cn) mi) it2) NoMergeJoin(cn ct it kt mc mi miidx t it2) NoMergeJoin(it kt mc miidx t ct) NoMergeJoin(kt miidx t it)/*+ NoMergeJoin(kt miidx t it) NoMergeJoin(it kt mc miidx t ct) NoMergeJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like 'Champion%' OR t.title like 'Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
19c.sql,618.153,10208.648920059204,1023.9841938018799,10157.513,10208.64725112915,0.06085672742924375,1.0000001634819984,False,0.10030557120960565,"(((((((((n an) ci) chn) rt) mi) mc) cn) it) t) NoHashJoin(an chn ci cn it mc mi n rt t) NoHashJoin(an ci n chn) NoMergeJoin(an chn ci cn mc mi n rt it) NoMergeJoin(an chn ci mc mi n rt cn) NoMergeJoin(an chn ci mi n rt mc) NoMergeJoin(an chn ci n rt mi)/*+ NoHashJoin(an ci n chn) NoMergeJoin(an chn ci n rt mi) NoMergeJoin(an chn ci mi n rt mc) NoMergeJoin(an chn ci mc mi n rt cn) NoMergeJoin(an chn ci cn mc mi n rt it) NoHashJoin(an chn ci cn it mc mi n rt t) */ select min(n.name) AS voicing_actress,
min(t.title) AS jap_engl_voiced_movie
from name AS n
inner join aka_name AS an
on n.id = an.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join cast_info AS ci
on n.id = ci.person_id AND ci.person_id = an.person_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join title AS t
on t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('it', 'mi'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'n'), (4, 'chn'), (5, 'mc'), (6, 'cn'), (7, 'an')]"
1b.sql,127.547,229.2799949645996,339.51783180236816,208.296,229.2783260345459,0.612335330491224,1.0000072790572165,False,1.4808108453793065,"((((it mi_idx) t) mc) ct)/*+  */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'bottom 10 rank'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 't'), (1, 'mc'), (2, 'ct')]"
18c.sql,6552.38,6674.764156341553,6834.147930145264,6644.501,6674.762725830078,0.9861357534598911,1.0000002143164535,False,1.0238787820424529,"((((((it1 mi) t) ci) n) mi_idx) it2) NoMergeJoin(ci it1 mi mi_idx n t it2) NoMergeJoin(it1 mi)/*+ NoMergeJoin(it1 mi) NoMergeJoin(ci it1 mi mi_idx n t it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'genres' AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join title AS t
on t.id = mi.movie_id
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 't'), (3, 'ci'), (4, 'n')]"
17f.sql,9466.424,9771.310091018677,9661.972522735596,9752.614,9771.30103111267,0.9706550469443374,1.0000009271954653,False,0.9888112639218705,"((((((k mk) t) ci) n) mc) cn)/*+  */ select min(n.name) AS member_in_charnamed_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'mc'), (4, 'cn')]"
20b.sql,380.597,2660.7625484466553,620.2805042266846,2616.249,2660.7518196105957,0.14547430309576803,1.0000040322573418,False,0.2331222700497724,"(((((((((n ci) cc) mk) cct1) k) chn) cct2) t) kt) NoHashJoin(cc cct1 cct2 chn ci k mk n t kt) NoHashJoin(cc cct1 cct2 chn ci k mk n t) NoHashJoin(cc cct1 chn ci k mk n cct2) NoHashJoin(cc cct1 ci k mk n chn) NoHashJoin(cc cct1 ci mk n k) NoHashJoin(cc ci mk n cct1) NoHashJoin(ci n cc)/*+ NoHashJoin(ci n cc) NoHashJoin(cc ci mk n cct1) NoHashJoin(cc cct1 ci mk n k) NoHashJoin(cc cct1 ci k mk n chn) NoHashJoin(cc cct1 chn ci k mk n cct2) NoHashJoin(cc cct1 cct2 chn ci k mk n t) NoHashJoin(cc cct1 cct2 chn ci k mk n t kt) */ select min(t.title) AS complete_downey_ironman_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join complete_cast AS cc
on ci.movie_id = cc.movie_id
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join title AS t
on t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'cc'), ('cct1', 3), ('cct2', 4), (5, 'ci'), (6, 'n'), (7, 'chn')]"
14c.sql,621.827,859.5242500305176,1324.8529434204102,829.482,859.513521194458,0.7496570148598765,1.0000124824517533,False,1.5413986060152658,"(((((((k mk) t) mi) mi_idx) it2) it1) kt) NoHashJoin(it1 it2 k mi mi_idx mk t kt) NoHashJoin(k mi mi_idx mk t it2) NoMergeJoin(it2 k mi mi_idx mk t it1) NoMergeJoin(k mi mk t mi_idx)/*+ NoMergeJoin(k mi mk t mi_idx) NoHashJoin(k mi mi_idx mk t it2) NoMergeJoin(it2 k mi mi_idx mk t it1) NoHashJoin(it1 it2 k mi mi_idx mk t kt) */ select min(mi_idx.info) AS rating,
min(t.title) AS north_european_dark_production
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IS NOT NULL AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode');","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
6e.sql,362.923,61.736345291137695,767.615556716919,38.339,61.72513961791992,9.466157176765174,1.000181541480297,False,12.436027872411103,"((((n ci) t) mk) k) NoHashJoin(ci n t) NoMergeJoin(ci mk n t k)/*+ NoHashJoin(ci n t) NoMergeJoin(ci mk n t k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
16b.sql,16075.981,20912.999153137207,16440.40060043335,20876.243,20912.993907928467,0.7700610210371666,1.0000002508109915,False,0.786133285019536,"(((((((k mk) t) mc) cn) ci) an) n)/*+  */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
12c.sql,1132.017,2045.5267429351807,1493.1495189666748,2012.594,2045.5231666564941,0.5624666475205631,1.0000017483442598,False,0.729959720479382,"(((((((it2 mi_idx) t) mc) ct) cn) mi) it1) NoMergeJoin(cn ct it2 mc mi mi_idx t it1) NoMergeJoin(it2 mc mi_idx t ct)/*+ NoMergeJoin(it2 mc mi_idx t ct) NoMergeJoin(cn ct it2 mc mi mi_idx t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS mainstream_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'rating' AND mi_idx.info > '7.0'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2000 AND 2010
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Drama',
'Horror',
'Western',
'Family')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 't'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
27c.sql,36.79,203.56011390686035,565.0787353515625,74.068,203.55486869812012,0.49670572986984934,1.000025768033817,False,2.7760511893704516,"(((((((((((lt ml) cc) cct1) mk) k) cct2) t) mc) cn) ct) mi) NoHashJoin(cc cct1 lt mk ml k) NoHashJoin(cc lt ml cct1)/*+ NoHashJoin(cc lt ml cct1) NoHashJoin(cc cct1 lt mk ml k) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join complete_cast AS cc
on ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_keyword AS mk
on mk.movie_id = cc.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like 'complete%'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2010
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = t.id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'English');","[('cc', 'cct1'), (0, 'cct2'), (1, 'mc'), (2, 'ct'), (3, 'cn'), (4, 'mk'), ('lt', 'ml'), (5, 6), (7, 'k'), (8, 'mi'), (9, 't')]"
8d.sql,3776.772,4402.723073959351,4178.340911865234,4376.881,4402.708053588867,0.8628911775303006,1.0000034116208254,False,0.9490388326928151,"((((((rt ci) an1) n1) t) mc) cn) NoHashJoin(an1 ci rt n1) NoMergeJoin(an1 ci mc n1 rt t cn)/*+ NoHashJoin(an1 ci rt n1) NoMergeJoin(an1 ci mc n1 rt t cn) */ select min(an1.name) AS costume_designer_pseudo,
min(t.title) AS movie_with_costumes
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'costume designer'
inner join aka_name AS an1
on an1.person_id = ci.person_id
inner join name AS n1
on an1.person_id = n1.id AND n1.id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('an1', 4)]"
6f.sql,6263.447,5814.098596572876,6495.67985534668,5792.294,5814.095735549927,1.0813413476594937,1.0000004920839076,False,1.117229600405313,"((((k mk) t) ci) n) NoHashJoin(ci k mk t n)/*+ NoHashJoin(ci k mk t n) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2000
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
2c.sql,42.796,990.6034469604492,273.2706069946289,964.729,990.5991554260254,0.04436064428456074,1.0000043322613392,False,0.2758639612175965,"((((cn mc) t) mk) k) NoHashJoin(cn mc mk t k)/*+ NoHashJoin(cn mc mk t k) */ select min(t.title) AS movie_title
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[sm]'
inner join title AS t
on mc.movie_id = t.id
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mc.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
17d.sql,3563.699,7356.939077377319,3879.424810409546,7322.837,7356.928825378418,0.4866555134301091,1.0000013935161185,False,0.5273158001783441,"((((((n ci) t) mk) k) mc) cn) NoHashJoin(ci k mc mk n t cn) NoHashJoin(ci k mk n t mc) NoHashJoin(ci mk n t k)/*+ NoHashJoin(ci mk n t k) NoHashJoin(ci k mk n t mc) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Bert%'
inner join title AS t
on ci.movie_id = t.id
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
8c.sql,6278.937,6437.631130218506,6699.79190826416,6411.656,6437.628269195557,0.9793003554775864,1.0000004444218942,False,1.0407236373561786,"((((((rt ci) a1) n1) t) mc) cn) NoHashJoin(a1 ci rt n1) NoMergeJoin(a1 ci mc n1 rt t cn)/*+ NoHashJoin(a1 ci rt n1) NoMergeJoin(a1 ci mc n1 rt t cn) */ select min(a1.name) AS writer_pseudo_name,
min(t.title) AS movie_title
from role_type AS rt
inner join cast_info AS ci
on ci.role_id = rt.id AND rt.role = 'writer'
inner join aka_name AS a1
on a1.person_id = ci.person_id
inner join name AS n1
on a1.person_id = n1.id AND n1.id = ci.person_id
inner join title AS t
on ci.movie_id = t.id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('mc', 'cn'), ('t', 0), ('rt', 'ci'), (1, 2), (3, 'n1'), ('a1', 4)]"
30c.sql,2357.961,3383.8043212890625,3094.8731899261475,3263.655,3383.789539337158,0.7224908882832284,1.0000043684607842,False,0.9146175180068659,"(((((((((((k mk) cc) t) cct2) ci) mi_idx) it2) cct1) n) mi) it1) NoHashJoin(cc k mk t cct2) NoHashJoin(k mk cc) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n t it1) NoMergeJoin(cc cct2 ci k mi_idx mk t it2) NoMergeJoin(cc cct2 ci k mk t mi_idx)/*+ NoHashJoin(k mk cc) NoHashJoin(cc k mk t cct2) NoMergeJoin(cc cct2 ci k mk t mi_idx) NoMergeJoin(cc cct2 ci k mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',
'Action',
'Sci-Fi',
'Thriller',
'Crime',
'War')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi_idx'), ('it2', 4), (5, 'ci'), (6, 'mi'), (7, 'it1'), (8, 'n'), (9, 't')]"
4c.sql,81.245,169.87085342407227,326.6291618347168,156.806,169.86393928527832,0.5181243064678648,1.0000407039823935,False,1.9228870071484614,"((((k mk) t) mi_idx) it)/*+  */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 1990
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '2.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
6b.sql,313.134,50.90785026550293,658.8423252105713,25.731,50.89402198791504,12.169523143290194,1.0002717073056473,False,12.945377462347457,"((((k mk) t) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
12b.sql,191.381,216.31979942321777,821.406364440918,187.253,216.31550788879395,1.0220450406669053,1.000019839236057,False,3.79726064237242,"(((((((it2 mi_idx) mc) cn) t) ct) mi) it1)/*+  */ select min(mi.info) AS budget,
min(t.title) AS unsuccsessful_movie
from info_type AS it2
inner join movie_info_idx AS mi_idx
on mi_idx.info_type_id = it2.id AND it2.info = 'bottom 10 rank'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like 'Birdemic%' OR t.title like '%Movie%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind IS NOT NULL AND ( ct.kind = 'production companies' OR ct.kind = 'distributors')
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'budget';","[('mi_idx', 'it2'), (0, 't'), (1, 'mi'), (2, 'it1'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
6d.sql,347.623,6127.153396606445,572.2701549530029,6087.617,6127.148866653442,0.0571032967415657,1.0000007393247825,False,0.09339909432714148,"((((n ci) t) mk) k) NoHashJoin(ci mk n t k) NoHashJoin(ci n t)/*+ NoHashJoin(ci n t) NoHashJoin(ci mk n t k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS hero_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like '%Downey%Robert%'
inner join title AS t
on t.id = ci.movie_id AND t.production_year > 2000
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence');","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
24b.sql,46.381,531.1658382415771,892.3988342285156,369.648,531.1541557312012,0.12547342336493095,1.0000219945758684,False,1.6801126840474687,"(((((((((((cn mc) mk) k) t) ci) n) rt) chn) mi) it) an) NoHashJoin(cn mc mk k) NoMergeJoin(chn ci cn it k mc mi mk n rt t an) NoMergeJoin(chn ci cn k mc mi mk n rt t it) NoMergeJoin(chn ci cn k mc mk n rt t mi) NoMergeJoin(ci cn k mc mk n t rt)/*+ NoHashJoin(cn mc mk k) NoMergeJoin(ci cn k mc mk n t rt) NoMergeJoin(chn ci cn k mc mk n rt t mi) NoMergeJoin(chn ci cn k mc mi mk n rt t it) NoMergeJoin(chn ci cn it k mc mi mk n rt t an) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS kung_fu_panda
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[us]' AND cn.name = 'DreamWorks Animation'
inner join movie_keyword AS mk
on mc.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat',
'computer-animated-movie')
inner join title AS t
on t.id = mc.movie_id AND t.id = mk.movie_id AND t.production_year > 2010 AND t.title like 'Kung Fu Panda%'
inner join cast_info AS ci
on mc.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id;","[('cn', 'mc'), (0, 't'), (1, 'mk'), (2, 'ci'), (3, 'an'), (4, 'chn'), (5, 'mi'), (6, 'it'), (7, 'k'), (8, 'n'), (9, 'rt')]"
6c.sql,24.442,34.462928771972656,324.37729835510254,15.677,34.45911407470703,1.5590993174714551,1.0001107021282485,False,9.41339634129466,"((((k mk) t) ci) n)/*+  */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2014
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
13b.sql,199.236,1418.3993339538574,594.7892665863037,1387.02,1418.391466140747,0.1436432062983951,1.0000055469969316,False,0.4193406973919869,"((((((((t kt) miidx) it) mc) ct) cn) mi) it2) NoMergeJoin(cn ct it kt mc mi miidx t it2) NoMergeJoin(it kt mc miidx t ct) NoMergeJoin(kt miidx t it)/*+ NoMergeJoin(kt miidx t it) NoMergeJoin(it kt mc miidx t ct) NoMergeJoin(cn ct it kt mc mi miidx t it2) */ select min(cn.name) AS producing_company,
min(miidx.info) AS rating,
min(t.title) AS movie_about_winning
from title AS t
inner join kind_type AS kt
on kt.id = t.kind_id AND t.title <> '' AND ( t.title like '%Champion%' OR t.title like '%Loser%') AND kt.kind = 'movie'
inner join movie_info_idx AS miidx
on miidx.movie_id = t.id
inner join info_type AS it
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join movie_companies AS mc
on mc.movie_id = t.id AND miidx.movie_id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'cn'), (4, 'ct'), (5, 'mi'), (6, 'it2')]"
17b.sql,4916.72,7628.956079483032,5464.0953540802,7592.011,7628.945827484131,0.6476176075087352,1.000001343829034,False,0.7162320296462436,"((((((n ci) mk) t) k) mc) cn) NoHashJoin(ci mk n t k)/*+ NoHashJoin(ci mk n t k) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'Z%'
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id
inner join title AS t
on t.id = mk.movie_id AND ci.movie_id = t.id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 't'), (3, 'mc'), (4, 'cn')]"
31b.sql,113.103,256.91843032836914,612.4382019042969,171.25,256.9127082824707,0.6604554744525547,1.0000222723349759,False,2.3838377089191423,"((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1) NoMergeJoin(ci cn it2 k mc mi mi_idx mk n t it1) NoMergeJoin(cn mc mi_idx it2)/*+ NoMergeJoin(cn mc mi_idx it2) NoMergeJoin(ci cn it2 k mc mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%' AND mc.note like '%(Blu-ray)%'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join title AS t
on t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 't'), (3, 'mk'), (4, 'ci'), (5, 'mi'), (6, 'it1'), (7, 'k'), (8, 'n')]"
28b.sql,314.666,2152.118921279907,1351.03440284729,1792.402,2152.116298675537,0.17555548364708362,1.0000012186164715,False,0.6277701645021453,"(((((((((((((k mk) cc) t) kt) cct1) mi_idx) mc) cn) it2) ct) cct2) mi) it1) NoHashJoin(cc cct1 cn k kt mc mi_idx mk t it2) NoHashJoin(k mk cc) NoMergeJoin(cc cct1 cct2 cn ct it2 k kt mc mi mi_idx mk t it1) NoMergeJoin(cc cct1 cn it2 k kt mc mi_idx mk t ct) NoMergeJoin(cc cct1 k kt mc mi_idx mk t cn) NoMergeJoin(cc cct1 k kt mi_idx mk t mc) NoMergeJoin(cc cct1 k kt mk t mi_idx)/*+ NoHashJoin(k mk cc) NoMergeJoin(cc cct1 k kt mk t mi_idx) NoMergeJoin(cc cct1 k kt mi_idx mk t mc) NoMergeJoin(cc cct1 k kt mc mi_idx mk t cn) NoHashJoin(cc cct1 cn k kt mc mi_idx mk t it2) NoMergeJoin(cc cct1 cn it2 k kt mc mi_idx mk t ct) NoMergeJoin(cc cct1 cct2 cn ct it2 k kt mc mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2005
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '6.5'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mi.movie_id = mc.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
25b.sql,261.654,470.19219398498535,873.2395172119141,429.494,470.17669677734375,0.6092145641149818,1.0000329603907379,False,1.8572581822902299,"((((((((k mk) t) ci) n) mi) mi_idx) it2) it1) NoMergeJoin(ci it2 k mi mi_idx mk n t it1) NoMergeJoin(ci k mk n t mi)/*+ NoMergeJoin(ci k mk n t mi) NoMergeJoin(ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010 AND t.title like 'Vampire%'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info = 'Horror'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'mi'), (3, 'it1'), (4, 'mi_idx'), (5, 'it2'), (6, 'n')]"
17c.sql,638.269,7953.125,990.2017116546631,7926.64,7953.121662139893,0.08052201184865214,1.0000004196918202,False,0.12450478613554067,"((((((n ci) t) mk) k) mc) cn) NoHashJoin(ci k mc mk n t cn) NoHashJoin(ci k mk n t mc) NoHashJoin(ci mk n t k)/*+ NoHashJoin(ci mk n t k) NoHashJoin(ci k mk n t mc) NoHashJoin(ci k mc mk n t cn) */ select min(n.name) AS member_in_charnamed_movie,
min(n.name) AS a1
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.name like 'X%'
inner join title AS t
on ci.movie_id = t.id
inner join movie_keyword AS mk
on ci.movie_id = mk.movie_id AND t.id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id;","[('k', 'mk'), (0, 'ci'), (1, 'n'), (2, 'mc'), (3, 'cn'), (4, 't')]"
2d.sql,931.037,966.7820930480957,1166.288137435913,945.158,966.7785167694092,0.9850596408219578,1.0000036991706214,False,1.2063653848382834,"((((k mk) t) mc) cn) NoMergeJoin(k mc mk t cn)/*+ NoMergeJoin(k mc mk t cn) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn')]"
8b.sql,160.749,248.4121322631836,501.30748748779297,221.97,248.40927124023438,0.7241924584403298,1.000011517375881,False,2.0180707627574135,"((((((t mc) cn) ci) an) n) rt) NoMergeJoin(an ci cn mc n t rt)/*+ NoMergeJoin(an ci cn mc n t rt) */ select min(an.name) AS acress_pseudonym,
min(t.title) AS japanese_anime_movie
from title AS t
inner join movie_companies AS mc
on t.id = mc.movie_id AND t.production_year BETWEEN 2006 AND 2007 AND ( t.title like 'One Piece%' OR t.title like 'Dragon Ball Z%') AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%' AND ( mc.note like '%(2006)%' OR mc.note like '%(2007)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]'
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mc.movie_id AND ci.note = '(voice: English version)'
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id AND n.name like '%Yo%' AND n.name not like '%Yu%'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress';","[('t', 'mc'), (0, 'ci'), (1, 'an'), (2, 'cn'), (3, 'n'), (4, 'rt')]"
27b.sql,31.035,169.29936408996582,848.6180305480957,17.057,169.2960262298584,1.8194876003986635,1.0000197161160942,False,5.012628172358287,"(((((((((((lt ml) t) mc) cn) mk) k) ct) mi) cc) cct2) cct1) NoHashJoin(cc cn ct k lt mc mi mk ml t cct2) NoHashJoin(cn ct k lt mc mi mk ml t cc) NoHashJoin(cn ct k lt mc mk ml t mi) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(cn lt mc mk ml t k) NoMergeJoin(cc cct2 cn ct k lt mc mi mk ml t cct1)/*+ NoHashJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(cn ct k lt mc mk ml t mi) NoHashJoin(cn ct k lt mc mi mk ml t cc) NoHashJoin(cc cn ct k lt mc mi mk ml t cct2) NoMergeJoin(cc cct2 cn ct k lt mc mi mk ml t cct1) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year = 1998
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND mk.movie_id = mi.movie_id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join complete_cast AS cc
on t.id = cc.movie_id AND mk.movie_id = cc.movie_id AND ml.movie_id = cc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew');","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
10c.sql,4843.111,5129.042387008667,5154.428720474243,5068.25,5129.035711288452,0.9555785527548957,1.0000013015546372,False,1.0049508349356788,"((((((ci t) mc) cn) ct) chn) rt)/*+  */ select min(chn.name) AS character,
min(t.title) AS movie_with_american_producer
from cast_info AS ci
inner join title AS t
on t.id = ci.movie_id AND ci.note like '%(producer)%' AND t.production_year > 1990
inner join movie_companies AS mc
on t.id = mc.movie_id AND ci.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id;","[('mc', 'cn'), ('t', 0), (1, 'ct'), ('ci', 2), (3, 'chn'), (4, 'rt')]"
32b.sql,326.606,186.4786148071289,802.4284839630127,162.144,186.46931648254395,2.0142959344779947,1.0000498651722458,False,4.303273584628229,"(((((k mk) t1) ml) lt) t2)/*+  */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
9b.sql,424.318,2302.3147583007812,934.1416358947754,2232.44,2302.311420440674,0.19006916199315546,1.0000014497865397,False,0.40574078189473434,"(((((((n an) ci) chn) t) mc) cn) rt) NoHashJoin(an chn ci cn mc n t rt) NoMergeJoin(an chn ci mc n t cn)/*+ NoMergeJoin(an chn ci mc n t cn) NoHashJoin(an chn ci cn mc n t rt) */ select min(an.name) AS alternative_name,
min(chn.name) AS voiced_character,
min(n.name) AS voicing_actress,
min(t.title) AS american_movie
from name AS n
inner join aka_name AS an
on an.person_id = n.id AND n.gender = 'f' AND n.name like '%Angel%'
inner join cast_info AS ci
on n.id = ci.person_id AND an.person_id = ci.person_id AND ci.note = '(voice)'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on ci.movie_id = t.id AND t.production_year BETWEEN 2007 AND 2010
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(200%)%' AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress';","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn')]"
