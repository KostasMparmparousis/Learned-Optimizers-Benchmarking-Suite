filename,raw_cost,cost,timer,raw_origin,origin,raw_relative,relative,use_generated,use_generated_rc,plan,baseline
2a.sql,897.96,728.785514831543,1112.5988960266113,718.593,728.7845611572266,1.2496086101590191,1.0000013085819421,False,1.5266499255416874,"((((k mk) t) mc) cn) NoHashJoin(k mk t) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join movie_companies AS mc
on mc.movie_id = t.id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]';","[('k', 'mk'), (0, 'mc'), (1, 'cn'), (2, 't')]"
1a.sql,18.86,235.276460647583,232.26571083068848,219.693,235.2757453918457,0.08584706840909814,1.0000030400742588,False,0.9872063541605443,"((((it mi_idx) t) mc) ct) NoHashJoin(it mi_idx t) NoHashJoin(it mi_idx) NoMergeJoin(it mi_idx t mc)/*+ NoHashJoin(it mi_idx) NoHashJoin(it mi_idx t) NoMergeJoin(it mi_idx t mc) */ select min(mc.note) AS production_note,
min(t.title) AS movie_title,
min(t.production_year) AS movie_year
from info_type AS it
inner join movie_info_idx AS mi_idx
on it.id = mi_idx.info_type_id AND it.info = 'top 250 rank'
inner join title AS t
on t.id = mi_idx.movie_id
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id AND mc.note not like '%(as Metro-Goldwyn-Mayer Pictures)%' AND ( mc.note like '%(co-production)%' OR mc.note like '%(presents)%')
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies';","[('mi_idx', 'it'), (0, 'mc'), (1, 'ct'), (2, 't')]"
5a.sql,283.367,295.0286865234375,495.2435493469238,275.201,295.0279712677002,1.0296728572933964,1.0000024243658465,False,1.67863252836306,"((((mc ct) t) mi) it) NoNestLoop(ct mc mi t it)/*+ NoNestLoop(ct mc mi t it) */ select min(t.title) AS typical_european_movie
from movie_companies AS mc
inner join company_type AS ct
on ct.id = mc.company_type_id AND mc.note like '%(theatrical)%' AND mc.note like '%(France)%' AND ct.kind = 'production companies'
inner join title AS t
on t.id = mc.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mc.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join info_type AS it
on it.id = mi.info_type_id;","[('mc', 'ct'), (0, 't'), (1, 'mi'), (2, 'it')]"
18a.sql,872.861,5029.187917709351,1158.9076519012451,5002.012,5029.186964035034,0.17450198040308582,1.0000001896279305,False,0.23043638269741845,"((((((n ci) t) mi) it1) mi_idx) it2) NoHashJoin(ci it1 mi n t mi_idx) NoHashJoin(ci n t)/*+ NoHashJoin(ci n t) NoHashJoin(ci it1 mi n t mi_idx) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(t.title) AS movie_title
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'm' AND n.name like '%Tim%' AND ci.note IN ('(producer)',
'(executive producer)')
inner join title AS t
on t.id = ci.movie_id
inner join movie_info AS mi
on ci.movie_id = mi.movie_id AND t.id = mi.movie_id
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'budget'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('mi_idx', 'it2'), (0, 'mi'), (1, 'it1'), (2, 'ci'), (3, 'n'), (4, 't')]"
19a.sql,622.174,503.6730766296387,1015.0539875030518,471.569,503.67236137390137,1.3193700179613164,1.0000014200813707,False,2.0153061103734577,"(((((((((n ci) mc) cn) t) mi) chn) rt) it) an) NoMergeJoin(chn ci cn mc mi n rt t it) NoMergeJoin(chn ci cn mc mi n t rt) NoMergeJoin(ci cn mc mi n t chn)/*+ NoMergeJoin(ci cn mc mi n t chn) NoMergeJoin(chn ci cn mc mi n t rt) NoMergeJoin(chn ci cn mc mi n rt t it) */ select min(n.name) AS voicing_actress,
min(t.title) AS voiced_movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join movie_companies AS mc
on mc.movie_id = ci.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year BETWEEN 2005 AND 2009
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'chn'), (4, 'mc'), (5, 'cn'), (6, 'mi'), (7, 'it')]"
17a.sql,8398.663,10497.047424316406,8682.422399520874,10479.73,10497.046709060669,0.8014197884869172,1.000000068138759,False,0.8271300147713473,"((((((k mk) t) ci) n) mc) cn) NoHashJoin(k mk)/*+ NoHashJoin(k mk) */ select min(n.name) AS member_in_charnamed_american_movie,
min(n.name) AS a1
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id
inner join cast_info AS ci
on ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like 'B%'
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n')]"
7a.sql,869.394,686.9819164276123,1211.4007472991943,670.652,686.9781017303467,1.2963414706882257,1.0000055528658862,False,1.7633760730479506,"(((((((lt ml) t) ci) n) an) pi) it) NoHashJoin(an ci lt ml n t pi) NoHashJoin(lt ml t) NoMergeJoin(an ci lt ml n pi t it)/*+ NoHashJoin(lt ml t) NoHashJoin(an ci lt ml n t pi) NoMergeJoin(an ci lt ml n pi t it) */ select min(n.name) AS of_person,
min(t.title) AS biography_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link = 'features'
inner join title AS t
on ml.linked_movie_id = t.id AND t.production_year BETWEEN 1980 AND 1995
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = ml.linked_movie_id
inner join name AS n
on ci.person_id = n.id AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND ( n.gender = 'm' OR ( n.gender = 'f' AND n.name like 'B%'))
inner join aka_name AS an
on n.id = an.person_id AND an.person_id = ci.person_id AND an.name like '%a%'
inner join person_info AS pi
on n.id = pi.person_id AND pi.person_id = an.person_id AND pi.person_id = ci.person_id AND pi.note = 'Volker Boehm'
inner join info_type AS it
on it.id = pi.info_type_id AND it.info = 'mini biography';","[('lt', 'ml'), (0, 't'), (1, 'ci'), (2, 'n'), (3, 'pi'), (4, 'an'), (5, 'it')]"
31a.sql,457.252,456.2723636627197,883.9621543884277,376.879,456.2711715698242,1.2132594280923055,1.0000026126851087,False,1.9373613970549814,"((((((((((cn mc) mi) ci) n) it1) mi_idx) t) mk) k) it2) NoHashJoin(ci cn it1 k mc mi mi_idx mk n t it2) NoHashJoin(ci cn it1 mc mi mi_idx mk n t k) NoHashJoin(ci cn it1 mc mi mi_idx n t mk) NoHashJoin(ci cn it1 mc mi mi_idx n t) NoHashJoin(ci cn it1 mc mi n mi_idx) NoHashJoin(ci cn mc mi n it1) NoHashJoin(cn mc mi)/*+ NoHashJoin(cn mc mi) NoHashJoin(ci cn mc mi n it1) NoHashJoin(ci cn it1 mc mi n mi_idx) NoHashJoin(ci cn it1 mc mi mi_idx n t) NoHashJoin(ci cn it1 mc mi mi_idx n t mk) NoHashJoin(ci cn it1 mc mi mi_idx mk n t k) NoHashJoin(ci cn it1 k mc mi mi_idx mk n t it2) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS violent_liongate_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.name like 'Lionsgate%'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join movie_info_idx AS mi_idx
on mi_idx.movie_id = mc.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id
inner join title AS t
on t.id = mc.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND t.id = mk.movie_id AND mi.movie_id = mk.movie_id
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes';","[('cn', 'mc'), (0, 'mi_idx'), (1, 'it2'), (2, 'mi'), (3, 'ci'), (4, 'n'), (5, 't'), (6, 'mk'), (7, 'k'), (8, 'it1')]"
27a.sql,64.624,144.1657543182373,537.5146865844727,29.648,144.1650390625,2.179708580679978,1.0000049613674853,False,3.72846766511431,"(((((((((((lt ml) t) mi) mc) cn) ct) cc) cct1) cct2) mk) k) NoHashJoin(lt ml t) NoMergeJoin(cc cct1 cct2 cn ct lt mc mi ml t mk)/*+ NoHashJoin(lt ml t) NoMergeJoin(cc cct1 cct2 cn ct lt mc mi ml t mk) */ select min(cn.name) AS producing_company,
min(lt.link) AS link_type,
min(t.title) AS complete_western_sequel
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_info AS mi
on mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Germany',
'Swedish',
'German')
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join complete_cast AS cc
on mc.movie_id = cc.movie_id AND t.id = cc.movie_id AND mi.movie_id = cc.movie_id AND ml.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete'
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id AND mk.movie_id = mc.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel';","[('lt', 'ml'), ('cc', 0), (1, 'cct2'), (2, 'cct1'), (3, 'mc'), (4, 'ct'), (5, 'cn'), (6, 't'), (7, 'mi'), (8, 'mk'), (9, 'k')]"
13a.sql,3233.995,1938.1778240203857,3586.7624282836914,1925.491,1938.1771087646484,1.6795690034386035,1.0000003690352828,False,1.8505854867772198,"((((((((it miidx) t) kt) mc) cn) ct) mi) it2) NoHashJoin(it miidx t) NoHashJoin(it miidx)/*+ NoHashJoin(it miidx) NoHashJoin(it miidx t) */ select min(mi.info) AS release_date,
min(miidx.info) AS rating,
min(t.title) AS german_movie
from info_type AS it
inner join movie_info_idx AS miidx
on it.id = miidx.info_type_id AND it.info = 'rating'
inner join title AS t
on miidx.movie_id = t.id
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join movie_companies AS mc
on miidx.movie_id = mc.movie_id AND mc.movie_id = t.id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[de]'
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mi.movie_id = mc.movie_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = t.id
inner join info_type AS it2
on it2.id = mi.info_type_id AND it2.info = 'release dates';","[('miidx', 'it'), (0, 't'), (1, 'kt'), (2, 'mc'), (3, 'ct'), (4, 'cn'), (5, 'mi'), (6, 'it2')]"
15a.sql,482.676,453.16624641418457,737.5235557556152,437.473,453.16481590270996,1.103327519641212,1.0000031567134615,False,1.627495184696674,"((((((((it1 mi) t) mk) k) mc) cn) ct) at) NoHashJoin(cn ct it1 k mc mi mk t at) NoHashJoin(it1 mi mk t k) NoHashJoin(it1 mi t mk) NoMergeJoin(cn it1 k mc mi mk t ct) NoMergeJoin(it1 k mc mi mk t cn) NoMergeJoin(it1 k mi mk t mc)/*+ NoHashJoin(it1 mi t mk) NoHashJoin(it1 mi mk t k) NoMergeJoin(it1 k mi mk t mc) NoMergeJoin(it1 k mc mi mk t cn) NoMergeJoin(cn it1 k mc mi mk t ct) NoHashJoin(cn ct it1 k mc mi mk t at) */ select min(mi.info) AS release_date,
min(t.title) AS internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info like 'USA:% 200%'
inner join title AS t
on t.id = mi.movie_id AND t.production_year > 2000
inner join movie_keyword AS mk
on t.id = mk.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mc.movie_id AND mc.note like '%(200%)%' AND mc.note like '%(worldwide)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join aka_title AS at
on mc.movie_id = at.movie_id AND t.id = at.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = at.movie_id;","[('mc', 'cn'), (0, 'at'), (1, 't'), (2, 'mi'), (3, 'ct'), (4, 'it1'), (5, 'mk'), (6, 'k')]"
12a.sql,235.897,261.1231803894043,555.1466941833496,251.718,261.1217498779297,0.9371479194972151,1.0000054783313732,False,2.1260070999174596,"(((((((mi_idx it2) t) mc) ct) cn) mi) it1) NoHashJoin(cn ct it2 mc mi mi_idx t it1) NoHashJoin(cn ct it2 mc mi_idx t mi) NoMergeJoin(it2 mi_idx t mc)/*+ NoMergeJoin(it2 mi_idx t mc) NoHashJoin(cn ct it2 mc mi_idx t mi) NoHashJoin(cn ct it2 mc mi mi_idx t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS drama_horror_movie
from movie_info_idx AS mi_idx
inner join info_type AS it2
on mi_idx.info_type_id = it2.id AND mi_idx.info > '8.0' AND it2.info = 'rating'
inner join title AS t
on t.id = mi_idx.movie_id AND t.production_year BETWEEN 2005 AND 2008
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND t.id = mc.movie_id
inner join company_type AS ct
on ct.id = mc.company_type_id AND ct.kind = 'production companies'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND t.id = mi.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.info IN ('Drama',
'Horror')
inner join info_type AS it1
on mi.info_type_id = it1.id AND it1.info = 'genres';","[('mi_idx', 'it2'), (0, 'mc'), (1, 'ct'), (2, 't'), (3, 'cn'), (4, 'mi'), (5, 'it1')]"
10a.sql,455.673,315.8600330352783,738.1417751312256,300.272,315.8586025238037,1.5175341024138116,1.000004528961577,False,2.336937380312755,"((((((cn mc) ci) rt) chn) t) ct) NoNestLoop(chn ci cn mc rt t ct)/*+ NoNestLoop(chn ci cn mc rt t ct) */ select min(chn.name) AS uncredited_voiced_character,
min(t.title) AS russian_movie
from company_name AS cn
inner join movie_companies AS mc
on cn.id = mc.company_id AND cn.country_code = '[ru]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.note like '%(voice)%' AND ci.note like '%(uncredited)%'
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actor'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join title AS t
on t.id = mc.movie_id AND t.id = ci.movie_id AND t.production_year > 2005
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('cn', 'mc'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'chn'), (4, 'ct')]"
25a.sql,4848.744,2202.3375034332275,5214.37406539917,2185.28,2202.335834503174,2.218820471518524,1.000000757799981,False,2.3676561874476714,"((((((((k mk) ci) mi) n) mi_idx) t) it2) it1) NoHashJoin(ci it2 k mi mi_idx mk n t it1) NoHashJoin(ci k mi mi_idx mk n t it2) NoHashJoin(ci k mi mi_idx mk n t) NoHashJoin(ci k mi mk n mi_idx) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(ci k mi mk n mi_idx) NoHashJoin(ci k mi mi_idx mk n t) NoHashJoin(ci k mi mi_idx mk n t it2) NoHashJoin(ci it2 k mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS male_writer,
min(t.title) AS violent_movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'blood',
'gore',
'death',
'female-nudity')
inner join cast_info AS ci
on ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join movie_info AS mi
on mi.movie_id = mk.movie_id AND ci.movie_id = mi.movie_id AND mi.info = 'Horror'
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = mk.movie_id
inner join title AS t
on t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres';","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'mi'), (3, 'ci'), (4, 'it1'), (5, 'n'), (6, 't')]"
3a.sql,145.723,112.47849464416504,320.68848609924316,107.535,112.47754096984863,1.355121588320082,1.0000084787977064,False,2.8511335092683856,"(((k mk) t) mi) NoHashJoin(k mk t) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) */ select min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German');","[('k', 'mk'), (0, 't'), (1, 'mi')]"
29a.sql,47.988,3017.1144008636475,720.7562923431396,179.787,3017.11368560791,0.26691585042300053,1.0000002370662202,False,0.2388893384366842,"((((((((((((((((k mk) cc) t) cct1) mi) ci) rt) pi) n) cct2) it3) it) mc) cn) an) chn) NoHashJoin(k mk) NoMergeJoin(an cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt t chn) NoMergeJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt t mc) NoMergeJoin(cc cct1 cct2 ci it3 k mi mk n pi rt t it) NoMergeJoin(cc cct1 cct2 ci k mi mk n pi rt t it3) NoMergeJoin(cc cct1 ci k mi mk n pi rt t cct2) NoMergeJoin(cc cct1 ci k mi mk rt t pi)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct1 ci k mi mk rt t pi) NoMergeJoin(cc cct1 ci k mi mk n pi rt t cct2) NoMergeJoin(cc cct1 cct2 ci k mi mk n pi rt t it3) NoMergeJoin(cc cct1 cct2 ci it3 k mi mk n pi rt t it) NoMergeJoin(cc cct1 cct2 ci it it3 k mi mk n pi rt t mc) NoMergeJoin(an cc cct1 cct2 ci cn it it3 k mc mi mk n pi rt t chn) */ select min(chn.name) AS voiced_char,
min(n.name) AS voicing_actress,
min(t.title) AS voiced_animation
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword = 'computer-animation'
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2010
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%200%' OR mi.info like 'USA:%200%')
inner join cast_info AS ci
on mi.movie_id = ci.movie_id AND t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join person_info AS pi
on ci.person_id = pi.person_id
inner join name AS n
on n.id = pi.person_id AND n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join info_type AS it3
on it3.id = pi.info_type_id AND it3.info = 'trivia'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name = 'Queen';","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 'mi'), (4, 'ci'), (5, 'rt'), (6, 'pi'), ('it3', 7), (8, 'an'), (9, 'it'), (10, 'n'), (11, 't'), (12, 'chn'), (13, 'mc'), (14, 'cn')]"
11a.sql,55.24,66.67280197143555,370.9113597869873,58.542,66.67184829711914,0.9435960506986437,1.0000143040029752,False,5.563237997153504,"(((((((lt ml) t) mc) cn) mk) k) ct) NoHashJoin(cn k lt mc mk ml t ct) NoHashJoin(cn lt mc mk ml t k) NoNestLoop(lt ml)/*+ NoNestLoop(lt ml) NoHashJoin(cn lt mc mk ml t k) NoHashJoin(cn k lt mc mk ml t ct) */ select min(cn.name) AS from_company,
min(lt.link) AS movie_link_type,
min(t.title) AS non_polish_sequel_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel'
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 't'), (3, 'mc'), (4, 'cn'), (5, 'ct')]"
28a.sql,286.008,4252.470254898071,836.9293212890625,4058.65,4252.469539642334,0.07046875192490112,1.0000001681977333,False,0.19681018605472594,"(((((((((((((k mk) cc) t) cct1) mi) mi_idx) cct2) it2) it1) mc) cn) kt) ct) NoHashJoin(cc k mk t) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk t it2)/*+ NoHashJoin(k mk) NoHashJoin(cc k mk t) NoMergeJoin(cc cct1 cct2 k mi mi_idx mk t it2) NoMergeJoin(cc cct1 cct2 it2 k mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS complete_euro_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'crew'
inner join movie_info AS mi
on t.id = mi.movie_id AND mi.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Danish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on mi.movie_id = mi_idx.movie_id AND t.id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind <> 'complete+verified'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 'mc'), (4, 'ct'), (5, 't'), (6, 'mi'), (7, 'it1'), (8, 'kt'), (9, 'cn'), (10, 'cct1'), (11, 'cct2')]"
32a.sql,25.72,19.920825958251953,270.36023139953613,11.844,19.92011070251465,2.1715636609253632,1.0000359062129718,False,13.57222534739261,"(((((k mk) t1) ml) lt) t2) NoNestLoop(k mk ml t1 lt)/*+ NoNestLoop(k mk ml t1 lt) */ select min(lt.link) AS link_type,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = '10,000-mile-club'
inner join title AS t1
on t1.id = mk.movie_id AND mk.movie_id = t1.id
inner join movie_link AS ml
on ml.movie_id = t1.id
inner join link_type AS lt
on lt.id = ml.link_type_id
inner join title AS t2
on ml.linked_movie_id = t2.id;","[('k', 'mk'), (0, 'ml'), (1, 'lt'), (2, 't1'), (3, 't2')]"
30a.sql,3055.909,1785.2706909179688,3520.808696746826,1723.827,1785.2699756622314,1.7727469171790442,1.0000004006428984,False,1.9721435663761784,"(((((((((((k mk) cc) cct1) mi) ci) n) mi_idx) cct2) it2) it1) t) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n it1) NoMergeJoin(cc cct1 cct2 ci k mi mi_idx mk n it2)/*+ NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 ci k mi mi_idx mk n it2) NoMergeJoin(cc cct1 cct2 ci it2 k mi mi_idx mk n it1) NoHashJoin(cc cct1 cct2 ci it1 it2 k mi mi_idx mk n t) */ select min(mi.info) AS movie_budget,
min(mi_idx.info) AS movie_votes,
min(n.name) AS writer,
min(t.title) AS complete_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'violence',
'blood',
'gore',
'death',
'female-nudity',
'hospital')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind IN ('cast',
'crew')
inner join movie_info AS mi
on mi.movie_id = cc.movie_id AND mi.movie_id = mk.movie_id AND mi.info IN ('Horror',
'Thriller')
inner join cast_info AS ci
on ci.movie_id = mi.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(writer)',
'(head writer)',
'(written by)',
'(story)',
'(story editor)')
inner join name AS n
on n.id = ci.person_id AND n.gender = 'm'
inner join movie_info_idx AS mi_idx
on ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind = 'complete+verified'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'votes'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'genres'
inner join title AS t
on t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.production_year > 2000;","[('k', 'mk'), (0, 'mi_idx'), ('it2', 1), (2, 'cc'), (3, 't'), (4, 'ci'), (5, 'mi'), (6, 'cct1'), (7, 'it1'), (8, 'n'), (9, 'cct2')]"
4a.sql,92.789,92.62847900390625,307.5740337371826,78.473,92.62704849243164,1.182432174123584,1.0000154437769302,False,3.320563903774974,"((((k mk) t) mi_idx) it) NoHashJoin(k mi_idx mk t it) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(k mi_idx mk t it) */ select min(mi_idx.info) AS rating,
min(t.title) AS movie_title
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword like '%sequel%'
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2005
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '5.0'
inner join info_type AS it
on it.id = mi_idx.info_type_id AND it.info = 'rating';","[('k', 'mk'), (0, 'mi_idx'), ('it', 1), (2, 't')]"
26a.sql,503.734,1246.182918548584,976.743221282959,1202.641,1246.1814880371094,0.41885649998628016,1.000001147915844,False,0.783788902867953,"(((((((((((k mk) cc) t) mi_idx) kt) cct2) cct1) it2) ci) chn) n) NoHashJoin(cc k mk t mi_idx) NoHashJoin(cc k mk t) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn)/*+ NoHashJoin(k mk) NoHashJoin(cc k mk t) NoHashJoin(cc k mk t mi_idx) NoMergeJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t chn) NoMergeJoin(cc cct1 cct2 chn ci it2 k kt mi_idx mk t n) */ select min(chn.name) AS character_name,
min(mi_idx.info) AS rating,
min(n.name) AS playing_actor,
min(t.title) AS complete_hero_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence',
'magnet',
'web',
'claw',
'laser')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 2000
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info > '7.0'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')
inner join name AS n
on n.id = ci.person_id;","[('cc', 'cct1'), (0, 'cct2'), (1, 'mi_idx'), ('it2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'mk'), (8, 'k'), (9, 'n')]"
33a.sql,30.147,348.1481075286865,581.4535617828369,41.933,348.1450080871582,0.718932582929912,1.000008902731495,False,1.670147634681207,"(((((((((((((lt ml) mi_idx2) it2) t2) kt2) mi_idx1) it1) t1) kt1) mc1) cn1) mc2) cn2) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it2 lt mi_idx2 ml t2) NoHashJoin(lt mi_idx2 ml it2) NoMergeJoin(lt ml mi_idx2)/*+ NoMergeJoin(lt ml mi_idx2) NoHashJoin(lt mi_idx2 ml it2) NoHashJoin(it2 lt mi_idx2 ml t2) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t2 t1) NoHashJoin(it1 it2 kt2 lt mi_idx1 mi_idx2 ml t1 t2 kt1) NoHashJoin(it1 it2 kt1 kt2 lt mi_idx1 mi_idx2 ml t1 t2 mc1) NoHashJoin(cn1 it1 it2 kt1 kt2 lt mc1 mi_idx1 mi_idx2 ml t1 t2 mc2) */ select min(cn1.name) AS first_company,
min(cn2.name) AS second_company,
min(mi_idx1.info) AS first_rating,
min(mi_idx2.info) AS second_rating,
min(t1.title) AS first_movie,
min(t2.title) AS second_movie
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link IN ('sequel',
'follows',
'followed by')
inner join movie_info_idx AS mi_idx2
on ml.linked_movie_id = mi_idx2.movie_id AND mi_idx2.info < '3.0'
inner join info_type AS it2
on it2.id = mi_idx2.info_type_id AND it2.info = 'rating'
inner join title AS t2
on t2.id = mi_idx2.movie_id AND t2.id = ml.linked_movie_id AND t2.production_year BETWEEN 2005 AND 2008
inner join kind_type AS kt2
on kt2.id = t2.kind_id AND kt2.kind IN ('tv series')
inner join movie_info_idx AS mi_idx1
on ml.movie_id = mi_idx1.movie_id
inner join info_type AS it1
on it1.id = mi_idx1.info_type_id AND it1.info = 'rating'
inner join title AS t1
on t1.id = mi_idx1.movie_id AND t1.id = ml.movie_id
inner join kind_type AS kt1
on kt1.id = t1.kind_id AND kt1.kind IN ('tv series')
inner join movie_companies AS mc1
on ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND t1.id = mc1.movie_id
inner join company_name AS cn1
on cn1.id = mc1.company_id AND cn1.country_code = '[us]'
inner join movie_companies AS mc2
on t2.id = mc2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id
inner join company_name AS cn2
on cn2.id = mc2.company_id;","[('ml', 'lt'), ('mi_idx1', 0), (1, 'it1'), (2, 't1'), (3, 'kt1'), (4, 'mi_idx2'), (5, 'it2'), (6, 'mc2'), (7, 't2'), (8, 'mc1'), (9, 'cn1'), (10, 'cn2'), (11, 'kt2')]"
21a.sql,83.216,128.45706939697266,434.50069427490234,103.602,128.45635414123535,0.8032277369162757,1.000005568083744,False,3.3824772404576966,"((((((((lt ml) t) mc) cn) ct) mi) mk) k) NoHashJoin(cn ct lt mc ml t mi) NoHashJoin(lt ml t) NoMergeJoin(cn ct lt mc mi ml t mk) NoMergeJoin(cn lt mc ml t ct) NoMergeJoin(lt mc ml t cn) NoMergeJoin(lt ml t mc)/*+ NoHashJoin(lt ml t) NoMergeJoin(lt ml t mc) NoMergeJoin(lt mc ml t cn) NoMergeJoin(cn lt mc ml t ct) NoHashJoin(cn ct lt mc ml t mi) NoMergeJoin(cn ct lt mc mi ml t mk) */ select min(cn.name) AS company_name,
min(lt.link) AS link_type,
min(t.title) AS western_follow_up
from link_type AS lt
inner join movie_link AS ml
on lt.id = ml.link_type_id AND lt.link like '%follow%'
inner join title AS t
on ml.movie_id = t.id AND t.production_year BETWEEN 1950 AND 2000
inner join movie_companies AS mc
on t.id = mc.movie_id AND ml.movie_id = mc.movie_id AND mc.note IS NULL
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code <> '[pl]' AND ( cn.name like '%Film%' OR cn.name like '%Warner%')
inner join company_type AS ct
on mc.company_type_id = ct.id AND ct.kind = 'production companies'
inner join movie_info AS mi
on mc.movie_id = mi.movie_id AND mi.movie_id = t.id AND ml.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German')
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND ml.movie_id = mk.movie_id
inner join keyword AS k
on mk.keyword_id = k.id AND k.keyword = 'sequel';","[('k', 'mk'), (0, 'ml'), ('lt', 1), (2, 'mi'), (3, 'mc'), (4, 'cn'), (5, 'ct'), (6, 't')]"
8a.sql,500.84,1283.9229106903076,782.6793193817139,1262.888,1283.9221954345703,0.3965830699159387,1.0000005570865118,False,0.6096002718582177,"((((((ci n1) t) rt) an1) mc) cn) NoHashJoin(ci n1 t) NoMergeJoin(an1 ci mc n1 rt t cn) NoMergeJoin(an1 ci n1 rt t mc) NoMergeJoin(ci n1 t rt)/*+ NoHashJoin(ci n1 t) NoMergeJoin(ci n1 t rt) NoMergeJoin(an1 ci n1 rt t mc) NoMergeJoin(an1 ci mc n1 rt t cn) */ select min(an1.name) AS actress_pseudonym,
min(t.title) AS japanese_movie_dubbed
from cast_info AS ci
inner join name AS n1
on n1.id = ci.person_id AND ci.note = '(voice: English version)' AND n1.name like '%Yo%' AND n1.name not like '%Yu%'
inner join title AS t
on ci.movie_id = t.id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an1
on an1.person_id = n1.id AND an1.person_id = ci.person_id
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Japan)%' AND mc.note not like '%(USA)%'
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[jp]';","[('mc', 'cn'), (0, 't'), (1, 'ci'), (2, 'rt'), (3, 'an1'), (4, 'n1')]"
16a.sql,381.98,248.56901168823242,697.2949504852295,226.202,248.5663890838623,1.6886676510375682,1.0000105509211434,False,2.805266444329983,"(((((((k mk) t) mc) cn) ci) an) n) NoHashJoin(an ci cn k mc mk t n) NoHashJoin(k mk t) NoHashJoin(k mk) NoNestLoop(ci cn k mc mk t an)/*+ NoHashJoin(k mk) NoHashJoin(k mk t) NoNestLoop(ci cn k mc mk t an) NoHashJoin(an ci cn k mc mk t n) */ select min(an.name) AS cool_actor_pseudonym,
min(t.title) AS series_named_after_char
from keyword AS k
inner join movie_keyword AS mk
on mk.keyword_id = k.id AND k.keyword = 'character-name-in-title'
inner join title AS t
on t.id = mk.movie_id AND t.episode_nr >= 50 AND t.episode_nr < 100
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mk.movie_id
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join cast_info AS ci
on ci.movie_id = mc.movie_id AND ci.movie_id = t.id AND ci.movie_id = mk.movie_id
inner join aka_name AS an
on an.person_id = ci.person_id
inner join name AS n
on an.person_id = n.id AND n.id = ci.person_id;","[('k', 'mk'), (0, 't'), (1, 'mc'), (2, 'cn'), (3, 'ci'), (4, 'n'), (5, 'an')]"
9a.sql,425.275,639.9798393249512,743.0975437164307,625.903,639.979362487793,0.6794583186212559,1.0000007450820856,False,1.1611273539005793,"(((((((n ci) t) mc) cn) chn) rt) an) NoHashJoin(chn ci cn mc n rt t an) NoHashJoin(ci cn mc n t chn) NoMergeJoin(chn ci cn mc n t rt) NoMergeJoin(ci mc n t cn) NoMergeJoin(ci n t mc)/*+ NoMergeJoin(ci n t mc) NoMergeJoin(ci mc n t cn) NoHashJoin(ci cn mc n t chn) NoMergeJoin(chn ci cn mc n t rt) NoHashJoin(chn ci cn mc n rt t an) */ select min(an.name) AS alternative_name,
min(chn.name) AS character_name,
min(t.title) AS movie
from name AS n
inner join cast_info AS ci
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%Ang%' AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join title AS t
on ci.movie_id = t.id AND t.production_year BETWEEN 2005 AND 2015
inner join movie_companies AS mc
on ci.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note IS NOT NULL AND ( mc.note like '%(USA)%' OR mc.note like '%(worldwide)%')
inner join company_name AS cn
on mc.company_id = cn.id AND cn.country_code = '[us]'
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join role_type AS rt
on ci.role_id = rt.id AND rt.role = 'actress'
inner join aka_name AS an
on an.person_id = n.id AND an.person_id = ci.person_id;","[('n', 'an'), (0, 'ci'), (1, 'rt'), (2, 't'), (3, 'mc'), (4, 'chn'), (5, 'cn')]"
23a.sql,421.579,509.9811553955078,844.017505645752,456.271,509.9806785583496,0.9239662393621334,1.000000935010243,False,1.6549989855138862,"((((((((((it1 mi) cc) t) kt) cct1) mc) cn) mk) k) ct) NoMergeJoin(cc cct1 it1 kt mi t mc) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct)/*+ NoMergeJoin(cc cct1 it1 kt mi t mc) NoNestLoop(cc cct1 cn it1 k kt mc mi mk t ct) */ select min(kt.kind) AS movie_kind,
min(t.title) AS complete_us_internet_movie
from info_type AS it1
inner join movie_info AS mi
on it1.id = mi.info_type_id AND it1.info = 'release dates' AND mi.note like '%internet%' AND mi.info IS NOT NULL AND ( mi.info like 'USA:% 199%' OR mi.info like 'USA:% 200%')
inner join complete_cast AS cc
on mi.movie_id = cc.movie_id
inner join title AS t
on t.id = cc.movie_id AND t.id = mi.movie_id AND t.production_year > 2000
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie')
inner join comp_cast_type AS cct1
on cct1.id = cc.status_id AND cct1.kind = 'complete+verified'
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = mc.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]'
inner join movie_keyword AS mk
on mk.movie_id = mc.movie_id AND t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi.movie_id
inner join keyword AS k
on k.id = mk.keyword_id
inner join company_type AS ct
on ct.id = mc.company_type_id;","[('kt', 't'), ('cc', 'cct1'), (0, 1), (2, 'mi'), (3, 'it1'), (4, 'mk'), (5, 'mc'), (6, 'cn'), (7, 'ct'), (8, 'k')]"
14a.sql,289.242,389.0650272369385,606.1511039733887,366.558,389.0643119812012,0.7890756715171952,1.0000018383997589,False,1.557971485194141,"(((((((k mk) t) mi) mi_idx) it2) kt) it1) NoHashJoin(it2 k kt mi mi_idx mk t it1) NoHashJoin(it2 k mi mi_idx mk t kt) NoHashJoin(k mi mi_idx mk t it2) NoHashJoin(k mk t mi) NoHashJoin(k mk)/*+ NoHashJoin(k mk) NoHashJoin(k mk t mi) NoHashJoin(k mi mi_idx mk t it2) NoHashJoin(it2 k mi mi_idx mk t kt) NoHashJoin(it2 k kt mi mi_idx mk t it1) */ select min(mi_idx.info) AS rating,
min(t.title) AS northern_dark_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join movie_info AS mi
on t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Sweden',
'Norway',
'Germany',
'Denmark',
'Swedish',
'Denish',
'Norwegian',
'German',
'USA',
'American')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND mi_idx.info < '8.5'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries';","[('k', 'mk'), (0, 't'), ('kt', 1), (2, 'mi_idx'), ('it2', 3), (4, 'mi'), (5, 'it1')]"
20a.sql,2180.211,1900.0763893127441,2567.6350593566895,1884.45,1900.0756740570068,1.1569481811669187,1.0000003764353953,False,1.35133305184331,"(((((((((k mk) cc) cct1) cct2) t) kt) ci) chn) n) NoHashJoin(cc k mk cct1) NoHashJoin(k mk) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) NoMergeJoin(cc cct1 k mk cct2)/*+ NoHashJoin(k mk) NoHashJoin(cc k mk cct1) NoMergeJoin(cc cct1 k mk cct2) NoMergeJoin(cc cct1 cct2 chn ci k kt mk t n) */ select min(t.title) AS complete_downey_ironman_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('superhero',
'sequel',
'second-part',
'marvel-comics',
'based-on-comic',
'tv-special',
'fight',
'violence')
inner join complete_cast AS cc
on mk.movie_id = cc.movie_id
inner join comp_cast_type AS cct1
on cct1.id = cc.subject_id AND cct1.kind = 'cast'
inner join comp_cast_type AS cct2
on cct2.id = cc.status_id AND cct2.kind like '%complete%'
inner join title AS t
on t.id = cc.movie_id AND t.id = mk.movie_id AND t.production_year > 1950
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind = 'movie'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = ci.movie_id
inner join char_name AS chn
on chn.id = ci.person_role_id AND chn.name not like '%Sherlock%' AND ( chn.name like '%Tony%Stark%' OR chn.name like '%Iron%Man%')
inner join name AS n
on n.id = ci.person_id;","[('k', 'mk'), (0, 'cc'), ('cct1', 1), ('cct2', 2), (3, 't'), ('kt', 4), (5, 'ci'), (6, 'chn'), (7, 'n')]"
6a.sql,999.223,21.312236785888672,1209.6760272979736,14.753,21.311283111572266,67.73015657832305,1.0000447497370952,False,56.76223345937843,"((((mk t) k) ci) n) NoHashJoin(mk t k)/*+ NoHashJoin(mk t k) */ select min(k.keyword) AS movie_keyword,
min(n.name) AS actor_name,
min(t.title) AS marvel_movie
from movie_keyword AS mk
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join keyword AS k
on k.id = mk.keyword_id AND k.keyword = 'marvel-cinematic-universe'
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id
inner join name AS n
on n.id = ci.person_id AND n.name like '%Downey%Robert%';","[('k', 'mk'), (0, 't'), (1, 'ci'), (2, 'n')]"
22a.sql,355.556,379.7719478607178,778.083324432373,351.877,379.77123260498047,1.0104553579802031,1.0000018833857751,False,2.048821126063799,"((((((((((k mk) t) kt) mi_idx) it2) mi) it1) mc) ct) cn) NoHashJoin(k mk) NoMergeJoin(it2 k kt mi mi_idx mk t it1)/*+ NoHashJoin(k mk) NoMergeJoin(it2 k kt mi mi_idx mk t it1) */ select min(cn.name) AS movie_company,
min(mi_idx.info) AS rating,
min(t.title) AS western_violent_movie
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('murder',
'murder-in-title',
'blood',
'violence')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2008
inner join kind_type AS kt
on kt.id = t.kind_id AND kt.kind IN ('movie',
'episode')
inner join movie_info_idx AS mi_idx
on t.id = mi_idx.movie_id AND mk.movie_id = mi_idx.movie_id AND mi_idx.info < '7.0'
inner join info_type AS it2
on it2.id = mi_idx.info_type_id AND it2.info = 'rating'
inner join movie_info AS mi
on mi.movie_id = mi_idx.movie_id AND t.id = mi.movie_id AND mk.movie_id = mi.movie_id AND mi.info IN ('Germany',
'German',
'USA',
'American')
inner join info_type AS it1
on it1.id = mi.info_type_id AND it1.info = 'countries'
inner join movie_companies AS mc
on mc.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mc.movie_id AND mk.movie_id = mc.movie_id AND mc.note not like '%(USA)%' AND mc.note like '%(200%)%'
inner join company_type AS ct
on ct.id = mc.company_type_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code <> '[us]';","[('k', 'mk'), (0, 't'), (1, 'kt'), (2, 'mi_idx'), ('it2', 3), (4, 'mc'), (5, 'cn'), (6, 'ct'), (7, 'mi'), (8, 'it1')]"
24a.sql,168.095,419.44217681884766,636.589527130127,353.74,419.44074630737305,0.47519364505003675,1.0000034105210025,False,1.5177102671461102,"(((((((((((k mk) t) ci) rt) mi) chn) n) it) an) mc) cn) NoHashJoin(an chn ci it k mi mk n rt t mc) NoHashJoin(chn ci it k mi mk n rt t an) NoHashJoin(ci k mi mk rt t chn) NoHashJoin(ci k mk rt t mi) NoHashJoin(k mk) NoMergeJoin(chn ci k mi mk n rt t it)/*+ NoHashJoin(k mk) NoHashJoin(ci k mk rt t mi) NoHashJoin(ci k mi mk rt t chn) NoMergeJoin(chn ci k mi mk n rt t it) NoHashJoin(chn ci it k mi mk n rt t an) NoHashJoin(an chn ci it k mi mk n rt t mc) */ select min(chn.name) AS voiced_char_name,
min(n.name) AS voicing_actress_name,
min(t.title) AS voiced_action_movie_jap_eng
from keyword AS k
inner join movie_keyword AS mk
on k.id = mk.keyword_id AND k.keyword IN ('hero',
'martial-arts',
'hand-to-hand-combat')
inner join title AS t
on t.id = mk.movie_id AND t.production_year > 2010
inner join cast_info AS ci
on t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND ci.note IN ('(voice)',
'(voice: Japanese version)',
'(voice) (uncredited)',
'(voice: English version)')
inner join role_type AS rt
on rt.id = ci.role_id AND rt.role = 'actress'
inner join movie_info AS mi
on mi.movie_id = ci.movie_id AND t.id = mi.movie_id AND mi.movie_id = mk.movie_id AND mi.info IS NOT NULL AND ( mi.info like 'Japan:%201%' OR mi.info like 'USA:%201%')
inner join char_name AS chn
on chn.id = ci.person_role_id
inner join name AS n
on n.id = ci.person_id AND n.gender = 'f' AND n.name like '%An%'
inner join info_type AS it
on it.id = mi.info_type_id AND it.info = 'release dates'
inner join aka_name AS an
on n.id = an.person_id AND ci.person_id = an.person_id
inner join movie_companies AS mc
on t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = ci.movie_id
inner join company_name AS cn
on cn.id = mc.company_id AND cn.country_code = '[us]';","[('k', 'mk'), (0, 't'), (1, 'mi'), ('it', 2), (3, 'ci'), (4, 'mc'), (5, 'cn'), (6, 'an'), (7, 'chn'), (8, 'n'), (9, 'rt')]"
