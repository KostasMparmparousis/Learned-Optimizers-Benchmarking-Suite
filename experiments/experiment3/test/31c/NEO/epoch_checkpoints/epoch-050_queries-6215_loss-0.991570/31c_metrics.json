{
    "query_name": "31c",
    "sql": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie FROM cast_info AS ci, company_name AS cn, info_type AS it1, info_type AS it2, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND cn.name  like 'Lionsgate%' AND it1.info  = 'genres' AND it2.info  = 'votes' AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi_idx.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id AND cn.id = mc.company_id;",
    "hint_str": "/*+ HashJoin(mk cn mi t mc ci mi_idx k n it2 it1)\n HashJoin(mk cn mi t mc ci mi_idx k n it2)\n MergeJoin(mk cn mi t mc ci mi_idx k n)\n MergeJoin(mk cn mi t mc ci mi_idx k)\n MergeJoin(mk cn mi t mc ci mi_idx)\n HashJoin(cn mi t mc ci mi_idx)\n HashJoin(cn mi t mc ci)\n HashJoin(mi t mc ci)\n HashJoin(mi t mc)\n MergeJoin(mi t)\n TidScan(mk)\n BitmapScan(cn)\n SeqScan(mi)\n TidScan(t)\n TidScan(mc)\n IndexScan(ci)\n BitmapScan(mi_idx)\n TidScan(k)\n TidScan(n)\n BitmapScan(it2)\n BitmapScan(it1)\n Leading((((((mk ((cn (((mi t) mc) ci)) mi_idx)) k) n) it2) it1)) */",
    "predicted_latency_ms": 13797.19921875,
    "planning_time_ms": 32.784,
    "actual_latency_ms": 12559.477
}