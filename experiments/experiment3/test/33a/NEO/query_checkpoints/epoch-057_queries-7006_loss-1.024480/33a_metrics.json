{
    "query_name": "33a",
    "sql": "SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 WHERE cn1.country_code  = '[us]' AND it1.info  = 'rating' AND it2.info  = 'rating' AND kt1.kind  in ('tv series') AND kt2.kind  in ('tv series') AND lt.link  in ('sequel', 'follows', 'followed by') AND mi_idx2.info  < '3.0' AND t2.production_year  between 2005 and 2008 AND lt.id = ml.link_type_id AND t1.id = ml.movie_id AND t2.id = ml.linked_movie_id AND it1.id = mi_idx1.info_type_id AND t1.id = mi_idx1.movie_id AND kt1.id = t1.kind_id AND cn1.id = mc1.company_id AND t1.id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id AND ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND it2.id = mi_idx2.info_type_id AND t2.id = mi_idx2.movie_id AND kt2.id = t2.kind_id AND cn2.id = mc2.company_id AND t2.id = mc2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id;",
    "hint_str": "/*+ HashJoin(lt ml kt2 it2 mc2 t2 mi_idx2 cn2 mi_idx1 it1 cn1 mc1 t1 kt1)\n HashJoin(lt ml kt2 it2 mc2 t2 mi_idx2 cn2 mi_idx1 it1 cn1 mc1 t1)\n HashJoin(lt ml kt2 it2 mc2 t2 mi_idx2 cn2 mi_idx1 it1 cn1 mc1)\n MergeJoin(cn1 mc1)\n HashJoin(lt ml kt2 it2 mc2 t2 mi_idx2 cn2 mi_idx1 it1)\n HashJoin(lt ml kt2 it2 mc2 t2 mi_idx2 cn2 mi_idx1)\n MergeJoin(lt ml kt2 it2 mc2 t2 mi_idx2 cn2)\n HashJoin(kt2 it2 mc2 t2 mi_idx2 cn2)\n MergeJoin(it2 mc2 t2 mi_idx2 cn2)\n HashJoin(it2 mc2 t2 mi_idx2)\n MergeJoin(mc2 t2 mi_idx2)\n HashJoin(t2 mi_idx2)\n NestLoop(lt ml)\n IndexScan(lt)\n IndexScan(ml)\n SeqScan(kt2)\n IndexScan(it2)\n TidScan(mc2)\n IndexScan(t2)\n BitmapScan(mi_idx2)\n TidScan(cn2)\n BitmapScan(mi_idx1)\n BitmapScan(it1)\n TidScan(cn1)\n TidScan(mc1)\n BitmapScan(t1)\n BitmapScan(kt1)\n Leading((((((((lt ml) (kt2 ((it2 (mc2 (t2 mi_idx2))) cn2))) mi_idx1) it1) (cn1 mc1)) t1) kt1)) */",
    "predicted_latency_ms": 11060.4267578125,
    "planning_time_ms": 124.62,
    "actual_latency_ms": 6108.242
}