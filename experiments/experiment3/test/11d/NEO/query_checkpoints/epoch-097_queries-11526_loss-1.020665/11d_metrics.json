{
    "query_name": "11d",
    "sql": "SELECT MIN(cn.name) AS from_company, MIN(mc.note) AS production_note, MIN(t.title) AS movie_based_on_book FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t WHERE cn.country_code  != '[pl]' AND ct.kind  != 'production companies' and ct.kind is not NULL AND k.keyword  in ('sequel', 'revenge', 'based-on-novel') AND mc.note  is not NULL AND t.production_year  > 1950 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id;",
    "hint_str": "/*+ HashJoin(lt t ct mk mc cn k ml)\n HashJoin(t ct mk mc cn k ml)\n MergeJoin(ct mk mc cn k ml)\n HashJoin(mk mc cn k ml)\n NestLoop(mk mc cn k)\n HashJoin(mk mc cn)\n HashJoin(mc cn)\n BitmapScan(lt)\n BitmapScan(t)\n IndexScan(ct)\n BitmapScan(mk)\n TidScan(mc)\n SeqScan(cn)\n IndexScan(k)\n IndexScan(ml)\n Leading((lt (t (ct (((mk (mc cn)) k) ml))))) */",
    "predicted_latency_ms": 10907.1962890625,
    "planning_time_ms": 6.489,
    "actual_latency_ms": 15616.803
}