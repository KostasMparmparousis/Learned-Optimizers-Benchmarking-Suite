{
    "query_name": "26b",
    "sql": "SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind  = 'cast' AND cct2.kind  like '%complete%' AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%') AND it2.info  = 'rating' AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'fight') AND kt.kind  = 'movie' AND mi_idx.info  > '8.0' AND t.production_year  > 2005 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND it2.id = mi_idx.info_type_id;",
    "hint_str": "/*+ HashJoin(t mi_idx kt cct1 ci k mk cc cct2 it2 chn n)\n HashJoin(t mi_idx kt cct1 ci k mk cc cct2 it2 chn)\n HashJoin(t mi_idx kt cct1 ci k mk cc cct2 it2)\n HashJoin(t mi_idx kt cct1 ci k mk cc cct2)\n HashJoin(cct1 ci k mk cc cct2)\n MergeJoin(ci k mk cc cct2)\n HashJoin(k mk cc cct2)\n HashJoin(mk cc cct2)\n MergeJoin(cc cct2)\n NestLoop(t mi_idx kt)\n MergeJoin(t mi_idx)\n IndexScan(t)\n BitmapScan(mi_idx)\n IndexScan(kt)\n BitmapScan(cct1)\n IndexScan(ci)\n TidScan(k)\n BitmapScan(mk)\n SeqScan(cc)\n BitmapScan(cct2)\n BitmapScan(it2)\n IndexScan(chn)\n BitmapScan(n)\n Leading(((((((t mi_idx) kt) (cct1 (ci (k (mk (cc cct2)))))) it2) chn) n)) */",
    "predicted_latency_ms": 8394.2587890625,
    "planning_time_ms": 47.332,
    "actual_latency_ms": 15572.709
}