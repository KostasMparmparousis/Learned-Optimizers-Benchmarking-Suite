{
    "query_name": "28c",
    "sql": "SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE cct1.kind  = 'cast' AND cct2.kind  = 'complete' AND cn.country_code  != '[us]' AND it1.info  = 'countries' AND it2.info  = 'rating' AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind  in ('movie', 'episode') AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info  < '8.5' AND t.production_year  > 2005 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.movie_id = cc.movie_id AND mi_idx.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id;",
    "hint_str": "/*+ HashJoin(k mi cc mc cn ct it1 mk cct2 mi_idx it2 cct1 t kt)\n HashJoin(k mi cc mc cn ct it1 mk cct2 mi_idx it2 cct1 t)\n HashJoin(k mi cc mc cn ct it1 mk cct2 mi_idx it2 cct1)\n NestLoop(mi cc mc cn ct it1 mk cct2 mi_idx it2 cct1)\n MergeJoin(mi cc mc cn ct it1 mk cct2 mi_idx it2)\n HashJoin(mi cc mc cn ct it1 mk cct2 mi_idx)\n NestLoop(mi cc mc cn ct it1 mk cct2)\n HashJoin(mi cc mc cn ct it1 mk)\n HashJoin(mi cc mc cn ct it1)\n MergeJoin(mi cc mc cn ct)\n HashJoin(mi cc mc cn)\n MergeJoin(mc cn)\n HashJoin(mi cc)\n TidScan(k)\n BitmapScan(mi)\n BitmapScan(cc)\n BitmapScan(mc)\n SeqScan(cn)\n BitmapScan(ct)\n BitmapScan(it1)\n SeqScan(mk)\n IndexScan(cct2)\n IndexScan(mi_idx)\n SeqScan(it2)\n IndexScan(cct1)\n BitmapScan(t)\n BitmapScan(kt)\n Leading((((k (((((((((mi cc) (mc cn)) ct) it1) mk) cct2) mi_idx) it2) cct1)) t) kt)) */",
    "predicted_latency_ms": 11022.146484375,
    "planning_time_ms": 133.762,
    "actual_latency_ms": 21867.176
}