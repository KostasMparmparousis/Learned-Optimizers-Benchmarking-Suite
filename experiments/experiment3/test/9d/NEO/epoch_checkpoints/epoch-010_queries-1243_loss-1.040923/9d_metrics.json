{
    "query_name": "9d",
    "sql": "SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress, MIN(t.title) AS american_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND n.gender ='f' AND rt.role ='actress' AND ci.movie_id = t.id AND t.id = mc.movie_id AND ci.movie_id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND n.id = ci.person_id AND chn.id = ci.person_role_id AND an.person_id = n.id AND an.person_id = ci.person_id;",
    "hint_str": "/*+ HashJoin(mc cn ci an n rt t chn)\n HashJoin(mc cn ci an n rt t)\n HashJoin(mc cn ci an n rt)\n HashJoin(mc cn ci an n)\n MergeJoin(mc cn ci an)\n HashJoin(mc cn ci)\n MergeJoin(mc cn)\n IndexScan(mc)\n TidScan(cn)\n TidScan(ci)\n SeqScan(an)\n SeqScan(n)\n IndexScan(rt)\n IndexScan(t)\n BitmapScan(chn)\n Leading((((((((mc cn) ci) an) n) rt) t) chn)) */",
    "predicted_latency_ms": 11119.9345703125,
    "planning_time_ms": 6.089,
    "actual_latency_ms": 14313.408
}