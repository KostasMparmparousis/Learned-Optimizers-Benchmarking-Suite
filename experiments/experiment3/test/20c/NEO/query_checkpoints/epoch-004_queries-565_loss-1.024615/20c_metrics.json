{
    "query_name": "20c",
    "sql": "SELECT MIN(n.name) AS cast_member, MIN(t.title) AS complete_dynamic_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, keyword AS k, kind_type AS kt, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind  = 'cast' AND cct2.kind  like '%complete%' AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%') AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND kt.kind  = 'movie' AND t.production_year  > 2000 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND ci.movie_id = cc.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id;",
    "hint_str": "/*+ MergeJoin(cct2 cc mk cct1 t kt ci k chn n)\n MergeJoin(cct2 cc mk cct1 t kt ci k chn)\n HashJoin(cct2 cc mk cct1 t kt ci k)\n HashJoin(cct2 cc mk cct1 t kt ci)\n MergeJoin(cct2 cc mk cct1 t kt)\n HashJoin(cct2 cc mk cct1 t)\n HashJoin(cct2 cc mk cct1)\n HashJoin(cct2 cc mk)\n HashJoin(cct2 cc)\n TidScan(cct2)\n TidScan(cc)\n BitmapScan(mk)\n BitmapScan(cct1)\n BitmapScan(t)\n BitmapScan(kt)\n BitmapScan(ci)\n BitmapScan(k)\n TidScan(chn)\n SeqScan(n)\n Leading((((((((((cct2 cc) mk) cct1) t) kt) ci) k) chn) n)) */",
    "predicted_latency_ms": 11042.0654296875,
    "planning_time_ms": 16.062,
    "actual_latency_ms": 5644.093
}