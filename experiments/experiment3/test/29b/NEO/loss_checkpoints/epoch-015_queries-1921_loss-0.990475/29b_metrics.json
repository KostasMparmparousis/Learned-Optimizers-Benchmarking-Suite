{
    "query_name": "29b",
    "sql": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation FROM aka_name AS an, complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, info_type AS it3, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, person_info AS pi, role_type AS rt, title AS t WHERE cct1.kind  ='cast' AND cct2.kind  ='complete+verified' AND chn.name  = 'Queen' AND ci.note  in ('(voice)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info  = 'release dates' AND it3.info  = 'height' AND k.keyword  = 'computer-animation' AND mi.info  like 'USA:%200%' AND n.gender ='f' and n.name like '%An%' AND rt.role ='actress' AND t.title  = 'Shrek 2' AND t.production_year  between 2000 and 2005 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = cc.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND n.id = pi.person_id AND ci.person_id = pi.person_id AND it3.id = pi.info_type_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id;",
    "hint_str": "/*+ HashJoin(it3 rt cct1 cct2 mk cc t mc cn k mi ci n chn an pi it)\n HashJoin(it3 rt cct1 cct2 mk cc t mc cn k mi ci n chn an pi)\n HashJoin(rt cct1 cct2 mk cc t mc cn k mi ci n chn an pi)\n MergeJoin(cct1 cct2 mk cc t mc cn k mi ci n chn an pi)\n HashJoin(cct1 cct2 mk cc t mc cn k mi ci n chn an)\n MergeJoin(cct1 cct2 mk cc t mc cn k mi ci n chn)\n HashJoin(cct1 cct2 mk cc t mc cn k mi ci n)\n HashJoin(cct1 cct2 mk cc t mc cn k mi ci)\n HashJoin(cct1 cct2 mk cc t mc cn k mi)\n HashJoin(cct1 cct2 mk cc t mc cn k)\n HashJoin(cct1 cct2 mk cc t mc cn)\n HashJoin(cct2 mk cc t mc cn)\n HashJoin(mk cc t mc cn)\n MergeJoin(mk cc t mc)\n MergeJoin(mk cc t)\n HashJoin(cc t)\n IndexScan(it3)\n SeqScan(rt)\n TidScan(cct1)\n IndexScan(cct2)\n IndexScan(mk)\n SeqScan(cc)\n TidScan(t)\n BitmapScan(mc)\n BitmapScan(cn)\n BitmapScan(k)\n IndexScan(mi)\n SeqScan(ci)\n BitmapScan(n)\n IndexScan(chn)\n SeqScan(an)\n SeqScan(pi)\n IndexScan(it)\n Leading(((it3 (rt ((((((((cct1 (cct2 (((mk (cc t)) mc) cn))) k) mi) ci) n) chn) an) pi))) it)) */",
    "predicted_latency_ms": 12185.6142578125,
    "planning_time_ms": 1976.744,
    "actual_latency_ms": 8774.976
}