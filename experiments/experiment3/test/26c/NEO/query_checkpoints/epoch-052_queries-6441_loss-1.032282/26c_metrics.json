{
    "query_name": "26c",
    "sql": "SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind  = 'cast' AND cct2.kind  like '%complete%' AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%') AND it2.info  = 'rating' AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND kt.kind  = 'movie' AND t.production_year  > 2000 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND it2.id = mi_idx.info_type_id;",
    "hint_str": "/*+ HashJoin(cct1 kt t mi_idx cc cct2 it2 mk k ci n chn)\n HashJoin(cct1 kt t mi_idx cc cct2 it2 mk k ci n)\n HashJoin(cct1 kt t mi_idx cc cct2 it2 mk k ci)\n HashJoin(cct1 kt t mi_idx cc cct2 it2 mk k)\n HashJoin(cct1 kt t mi_idx cc cct2 it2 mk)\n MergeJoin(cct1 kt t mi_idx cc cct2 it2)\n HashJoin(cct1 kt t mi_idx cc cct2)\n HashJoin(cct1 kt t mi_idx cc)\n HashJoin(kt t mi_idx cc)\n MergeJoin(kt t mi_idx)\n HashJoin(kt t)\n BitmapScan(cct1)\n SeqScan(kt)\n IndexScan(t)\n BitmapScan(mi_idx)\n IndexScan(cc)\n BitmapScan(cct2)\n IndexScan(it2)\n IndexScan(mk)\n IndexScan(k)\n BitmapScan(ci)\n BitmapScan(n)\n BitmapScan(chn)\n Leading(((((((((cct1 (((kt t) mi_idx) cc)) cct2) it2) mk) k) ci) n) chn)) */",
    "predicted_latency_ms": 10562.900390625,
    "planning_time_ms": 50.098,
    "actual_latency_ms": 4662.99
}