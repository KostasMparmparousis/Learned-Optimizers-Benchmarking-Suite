{
    "query_name": "18b",
    "sql": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info  = 'genres' AND it2.info  = 'rating' AND mi.info  in ('Horror', 'Thriller') and mi.note is NULL AND mi_idx.info  > '8.0' AND n.gender  is not null and n.gender = 'f' AND t.production_year  between 2008 and 2014 AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id;",
    "hint_str": "/*+ MergeJoin(it2 ci mi t it1 mi_idx n)\n HashJoin(ci mi t it1 mi_idx n)\n NestLoop(ci mi t it1 mi_idx)\n MergeJoin(ci mi t it1)\n HashJoin(ci mi t)\n HashJoin(ci mi)\n SeqScan(it2)\n IndexScan(ci)\n IndexScan(mi)\n SeqScan(t)\n IndexScan(it1)\n IndexScan(mi_idx)\n IndexScan(n)\n Leading((it2 (((((ci mi) t) it1) mi_idx) n))) */",
    "predicted_latency_ms": 11512.203125,
    "planning_time_ms": 5.538,
    "actual_latency_ms": 3762.503
}