{
    "query_name": "28c",
    "sql": "SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE cct1.kind  = 'cast' AND cct2.kind  = 'complete' AND cn.country_code  != '[us]' AND it1.info  = 'countries' AND it2.info  = 'rating' AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind  in ('movie', 'episode') AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info  < '8.5' AND t.production_year  > 2005 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.movie_id = cc.movie_id AND mi_idx.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id;",
    "hint_str": "/*+ HashJoin(mc ct cn mi mk k it1 it2 cct1 kt t mi_idx cc cct2)\n MergeJoin(mi mk k it1 it2 cct1 kt t mi_idx cc cct2)\n HashJoin(it2 cct1 kt t mi_idx cc cct2)\n MergeJoin(cct1 kt t mi_idx cc cct2)\n NestLoop(kt t mi_idx cc cct2)\n HashJoin(kt t mi_idx cc)\n MergeJoin(kt t mi_idx)\n MergeJoin(kt t)\n HashJoin(mi mk k it1)\n NestLoop(mi mk k)\n HashJoin(mi mk)\n NestLoop(mc ct cn)\n HashJoin(mc ct)\n BitmapScan(mc)\n TidScan(ct)\n IndexScan(cn)\n IndexScan(mi)\n TidScan(mk)\n IndexScan(k)\n BitmapScan(it1)\n BitmapScan(it2)\n IndexScan(cct1)\n SeqScan(kt)\n SeqScan(t)\n BitmapScan(mi_idx)\n BitmapScan(cc)\n IndexScan(cct2)\n Leading((((mc ct) cn) ((((mi mk) k) it1) (it2 (cct1 ((((kt t) mi_idx) cc) cct2)))))) */",
    "predicted_latency_ms": 10315.3720703125,
    "planning_time_ms": 121.797,
    "actual_latency_ms": 15331.21
}