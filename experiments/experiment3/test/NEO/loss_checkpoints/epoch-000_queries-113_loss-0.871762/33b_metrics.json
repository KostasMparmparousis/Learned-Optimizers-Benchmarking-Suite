{
    "query_name": "33b",
    "sql": "SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 WHERE cn1.country_code  = '[nl]' AND it1.info  = 'rating' AND it2.info  = 'rating' AND kt1.kind  in ('tv series') AND kt2.kind  in ('tv series') AND lt.link  LIKE '%follow%' AND mi_idx2.info  < '3.0' AND t2.production_year  = 2007 AND lt.id = ml.link_type_id AND t1.id = ml.movie_id AND t2.id = ml.linked_movie_id AND it1.id = mi_idx1.info_type_id AND t1.id = mi_idx1.movie_id AND kt1.id = t1.kind_id AND cn1.id = mc1.company_id AND t1.id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id AND ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND it2.id = mi_idx2.info_type_id AND t2.id = mi_idx2.movie_id AND kt2.id = t2.kind_id AND cn2.id = mc2.company_id AND t2.id = mc2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id;",
    "hint_str": "/*+ HashJoin(it1 kt1 t1 lt t2 it2 mi_idx2 kt2 mc2 cn2 ml mc1 cn1 mi_idx1)\n MergeJoin(kt1 t1 lt t2 it2 mi_idx2 kt2 mc2 cn2 ml mc1 cn1 mi_idx1)\n MergeJoin(kt1 t1 lt t2 it2 mi_idx2 kt2 mc2 cn2 ml mc1 cn1)\n HashJoin(t1 lt t2 it2 mi_idx2 kt2 mc2 cn2 ml mc1 cn1)\n HashJoin(lt t2 it2 mi_idx2 kt2 mc2 cn2 ml mc1 cn1)\n MergeJoin(t2 it2 mi_idx2 kt2 mc2 cn2 ml mc1 cn1)\n NestLoop(t2 it2 mi_idx2 kt2 mc2 cn2 ml mc1)\n MergeJoin(t2 it2 mi_idx2 kt2 mc2 cn2 ml)\n NestLoop(t2 it2 mi_idx2 kt2 mc2 cn2)\n HashJoin(t2 it2 mi_idx2 kt2 mc2)\n MergeJoin(t2 it2 mi_idx2 kt2)\n MergeJoin(t2 it2 mi_idx2)\n HashJoin(it2 mi_idx2)\n SeqScan(it1)\n IndexScan(kt1)\n BitmapScan(t1)\n SeqScan(lt)\n TidScan(t2)\n BitmapScan(it2)\n BitmapScan(mi_idx2)\n BitmapScan(kt2)\n BitmapScan(mc2)\n IndexScan(cn2)\n TidScan(ml)\n IndexScan(mc1)\n TidScan(cn1)\n IndexScan(mi_idx1)\n Leading((it1 ((kt1 (t1 (lt (((((((t2 (it2 mi_idx2)) kt2) mc2) cn2) ml) mc1) cn1)))) mi_idx1))) */",
    "predicted_latency_ms": 9911.4384765625,
    "planning_time_ms": 110.736,
    "actual_latency_ms": 3156.819
}