{
    "query_name": "31c",
    "sql": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie FROM cast_info AS ci, company_name AS cn, info_type AS it1, info_type AS it2, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND cn.name  like 'Lionsgate%' AND it1.info  = 'genres' AND it2.info  = 'votes' AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi_idx.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id AND cn.id = mc.company_id;",
    "hint_str": "/*+ HashJoin(n t it1 mi mk cn mc k ci mi_idx it2)\n HashJoin(mi_idx it2)\n HashJoin(n t it1 mi mk cn mc k ci)\n HashJoin(t it1 mi mk cn mc k ci)\n HashJoin(t it1 mi mk cn mc k)\n MergeJoin(it1 mi mk cn mc k)\n HashJoin(mi mk cn mc k)\n HashJoin(mk cn mc k)\n HashJoin(mk cn mc)\n HashJoin(cn mc)\n BitmapScan(n)\n SeqScan(t)\n IndexScan(it1)\n BitmapScan(mi)\n BitmapScan(mk)\n BitmapScan(cn)\n BitmapScan(mc)\n TidScan(k)\n SeqScan(ci)\n BitmapScan(mi_idx)\n IndexScan(it2)\n Leading(((n ((t (it1 (mi ((mk (cn mc)) k)))) ci)) (mi_idx it2))) */",
    "predicted_latency_ms": 11103.677734375,
    "planning_time_ms": 33.369,
    "actual_latency_ms": 11895.849
}