{
    "query_name": "15b",
    "sql": "SELECT MIN(mi.info) AS release_date, MIN(t.title) AS youtube_movie FROM aka_title AS at, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t WHERE cn.country_code  = '[us]' and cn.name = 'YouTube' AND it1.info  = 'release dates' AND mc.note  like '%(200%)%' and mc.note like '%(worldwide)%' AND mi.note  like '%internet%' AND mi.info  like 'USA:% 200%' AND t.production_year  between 2005 and 2010 AND t.id = at.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = at.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = at.movie_id AND mc.movie_id = at.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id;",
    "hint_str": "/*+ HashJoin(k cn t mc at mk ct mi it1)\n HashJoin(cn t mc at mk ct mi it1)\n MergeJoin(cn t mc at mk ct mi)\n HashJoin(cn t mc at mk ct)\n HashJoin(cn t mc at mk)\n HashJoin(cn t mc at)\n HashJoin(cn t mc)\n HashJoin(t mc)\n SeqScan(k)\n BitmapScan(cn)\n SeqScan(t)\n TidScan(mc)\n IndexScan(at)\n BitmapScan(mk)\n IndexScan(ct)\n BitmapScan(mi)\n IndexScan(it1)\n Leading((k ((((((cn (t mc)) at) mk) ct) mi) it1))) */",
    "predicted_latency_ms": 12655.6865234375,
    "planning_time_ms": 8.785,
    "actual_latency_ms": 1071.151
}