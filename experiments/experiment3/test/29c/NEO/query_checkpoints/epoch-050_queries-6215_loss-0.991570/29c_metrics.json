{
    "query_name": "29c",
    "sql": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation FROM aka_name AS an, complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, info_type AS it3, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, person_info AS pi, role_type AS rt, title AS t WHERE cct1.kind  ='cast' AND cct2.kind  ='complete+verified' AND ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info  = 'release dates' AND it3.info  = 'trivia' AND k.keyword  = 'computer-animation' AND mi.info  is not null and (mi.info like 'Japan:%200%' or mi.info like 'USA:%200%') AND n.gender ='f' and n.name like '%An%' AND rt.role ='actress' AND t.production_year  between 2000 and 2010 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = cc.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND n.id = pi.person_id AND ci.person_id = pi.person_id AND it3.id = pi.info_type_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id;",
    "hint_str": "/*+ MergeJoin(chn n an it k t mk mi cct2 cct1 cc it3 rt mc ci pi cn)\n MergeJoin(n an it k t mk mi cct2 cct1 cc it3 rt mc ci pi cn)\n HashJoin(it k t mk mi cct2 cct1 cc it3 rt mc ci pi cn)\n MergeJoin(cct2 cct1 cc it3 rt mc ci pi cn)\n HashJoin(cct1 cc it3 rt mc ci pi cn)\n HashJoin(it3 rt mc ci pi cn)\n MergeJoin(rt mc ci pi cn)\n HashJoin(mc ci pi cn)\n HashJoin(mc ci pi)\n MergeJoin(ci pi)\n HashJoin(cct1 cc)\n HashJoin(it k t mk mi)\n HashJoin(k t mk mi)\n HashJoin(k t mk)\n MergeJoin(t mk)\n HashJoin(n an)\n TidScan(chn)\n TidScan(n)\n SeqScan(an)\n IndexScan(it)\n IndexScan(k)\n IndexScan(t)\n IndexScan(mk)\n BitmapScan(mi)\n BitmapScan(cct2)\n IndexScan(cct1)\n TidScan(cc)\n BitmapScan(it3)\n TidScan(rt)\n BitmapScan(mc)\n IndexScan(ci)\n TidScan(pi)\n TidScan(cn)\n Leading((chn ((n an) ((it ((k (t mk)) mi)) (cct2 ((cct1 cc) (it3 (rt ((mc (ci pi)) cn))))))))) */",
    "predicted_latency_ms": 13642.1943359375,
    "planning_time_ms": 2103.886,
    "actual_latency_ms": 80459.331
}