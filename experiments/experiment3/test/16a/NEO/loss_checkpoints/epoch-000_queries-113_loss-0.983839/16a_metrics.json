{
    "query_name": "16a",
    "sql": "SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND t.episode_nr >= 50 AND t.episode_nr < 100 AND an.person_id = n.id AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND an.person_id = ci.person_id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id;",
    "hint_str": "/*+ MergeJoin(t k n an cn mk ci mc)\n MergeJoin(k n an cn mk ci mc)\n HashJoin(n an cn mk ci mc)\n MergeJoin(cn mk ci mc)\n MergeJoin(mk ci mc)\n HashJoin(ci mc)\n MergeJoin(n an)\n SeqScan(t)\n SeqScan(k)\n IndexScan(n)\n IndexScan(an)\n SeqScan(cn)\n IndexScan(mk)\n SeqScan(ci)\n SeqScan(mc)\n Leading((t (k ((n an) (cn (mk (ci mc))))))) */",
    "predicted_latency_ms": 12386.4638671875,
    "planning_time_ms": -1.0,
    "actual_latency_ms": -1
}