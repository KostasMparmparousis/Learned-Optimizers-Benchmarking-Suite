{
    "query_name": "28a",
    "sql": "SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE cct1.kind  = 'crew' AND cct2.kind  != 'complete+verified' AND cn.country_code  != '[us]' AND it1.info  = 'countries' AND it2.info  = 'rating' AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind  in ('movie', 'episode') AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info  < '8.5' AND t.production_year  > 2000 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.movie_id = cc.movie_id AND mi_idx.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id;",
    "hint_str": "/*+ HashJoin(cn it2 mi_idx mc mk t cc mi cct1 cct2 kt it1 ct k)\n HashJoin(cn it2 mi_idx mc mk t cc mi cct1 cct2 kt it1 ct)\n HashJoin(cn it2 mi_idx mc mk t cc mi cct1 cct2 kt it1)\n HashJoin(cn it2 mi_idx mc mk t cc mi cct1 cct2 kt)\n HashJoin(it2 mi_idx mc mk t cc mi cct1 cct2 kt)\n MergeJoin(it2 mi_idx mc mk t cc mi cct1 cct2)\n HashJoin(it2 mi_idx mc mk t cc mi cct1)\n NestLoop(cc mi cct1)\n NestLoop(cc mi)\n NestLoop(it2 mi_idx mc mk t)\n HashJoin(it2 mi_idx mc mk)\n HashJoin(mc mk)\n HashJoin(it2 mi_idx)\n TidScan(cn)\n BitmapScan(it2)\n SeqScan(mi_idx)\n SeqScan(mc)\n BitmapScan(mk)\n IndexScan(t)\n SeqScan(cc)\n IndexScan(mi)\n SeqScan(cct1)\n TidScan(cct2)\n SeqScan(kt)\n BitmapScan(it1)\n BitmapScan(ct)\n IndexScan(k)\n Leading(((((cn ((((((it2 mi_idx) (mc mk)) t) ((cc mi) cct1)) cct2) kt)) it1) ct) k)) */",
    "inference_time": 3.7210891246795654,
    "planning_time": 103.047,
    "predicted_latency": 10912.525390625,
    "actual_latency": 22590.169
}