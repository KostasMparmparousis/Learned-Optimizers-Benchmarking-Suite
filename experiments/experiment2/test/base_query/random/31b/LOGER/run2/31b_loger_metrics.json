{
  "query": "/*+ NoHashJoin(it2 mi_idx) NoHashJoin(it2 mi_idx t) NoHashJoin(it2 mi_idx t mk) NoMergeJoin(it2 mi_idx mk t mc) NoHashJoin(cn it2 mc mi_idx mk t k) NoHashJoin(ci cn it2 k mc mi mi_idx mk n t it1) */ select min(mi.info) AS movie_budget,\nmin(mi_idx.info) AS movie_votes,\nmin(n.name) AS writer,\nmin(t.title) AS violent_liongate_movie\nfrom info_type AS it2\ninner join movie_info_idx AS mi_idx\non it2.id = mi_idx.info_type_id AND it2.info = 'votes'\ninner join title AS t\non t.id = mi_idx.movie_id AND t.production_year > 2000 AND ( t.title like '%Freddy%' OR t.title like '%Jason%' OR t.title like 'Saw%')\ninner join movie_keyword AS mk\non mi_idx.movie_id = mk.movie_id AND t.id = mk.movie_id\ninner join movie_companies AS mc\non mi_idx.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND t.id = mc.movie_id AND mc.note like '%(Blu-ray)%'\ninner join company_name AS cn\non cn.id = mc.company_id AND cn.name like 'Lionsgate%'\ninner join keyword AS k\non k.id = mk.keyword_id AND k.keyword IN ('murder',\n'violence',\n'blood',\n'gore',\n'death',\n'female-nudity',\n'hospital')\ninner join cast_info AS ci\non ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.note IN ('(writer)',\n'(head writer)',\n'(written by)',\n'(story)',\n'(story editor)')\ninner join name AS n\non n.id = ci.person_id AND n.gender = 'm'\ninner join movie_info AS mi\non mi.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND t.id = mi.movie_id AND ci.movie_id = mi.movie_id AND mi.info IN ('Horror',\n'Thriller')\ninner join info_type AS it1\non it1.id = mi.info_type_id AND it1.info = 'genres';",
  "predicted_latency": 460.93153953552246,
  "actual_latency": 1063.715,
  "q_error": 2.3077505198969424,
  "inference_time": 0.1196448802947998
}