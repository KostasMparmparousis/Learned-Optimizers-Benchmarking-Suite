{
  "query": "/*+ NoHashJoin(it2 mi_idx) NoMergeJoin(cc cct1 it2 mi_idx cct2) NoMergeJoin(cc cct1 cct2 it2 mi_idx mk) NoMergeJoin(cc cct1 cct2 it2 mi_idx mk k) */ select min(chn.name) AS character_name,\nmin(mi_idx.info) AS rating,\nmin(n.name) AS playing_actor,\nmin(t.title) AS complete_hero_movie\nfrom info_type AS it2\ninner join movie_info_idx AS mi_idx\non it2.id = mi_idx.info_type_id AND it2.info = 'rating' AND mi_idx.info > '7.0'\ninner join complete_cast AS cc\non cc.movie_id = mi_idx.movie_id\ninner join comp_cast_type AS cct1\non cct1.id = cc.subject_id AND cct1.kind = 'cast'\ninner join comp_cast_type AS cct2\non cct2.id = cc.status_id AND cct2.kind like '%complete%'\ninner join movie_keyword AS mk\non mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id\ninner join keyword AS k\non k.id = mk.keyword_id AND k.keyword IN ('superhero',\n'marvel-comics',\n'based-on-comic',\n'tv-special',\n'fight',\n'violence',\n'magnet',\n'web',\n'claw',\n'laser')\ninner join title AS t\non t.id = cc.movie_id AND t.id = mi_idx.movie_id AND t.id = mk.movie_id AND t.production_year > 2000\ninner join cast_info AS ci\non t.id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND mk.movie_id = ci.movie_id\ninner join char_name AS chn\non chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%')\ninner join kind_type AS kt\non kt.id = t.kind_id AND kt.kind = 'movie'\ninner join name AS n\non n.id = ci.person_id;",
  "predicted_latency": 369.1112995147705,
  "actual_latency": 1240.917,
  "q_error": 3.3619046656964855,
  "inference_time": 0.0861198902130127
}