{
    "query_name": "13c",
    "sql": "SELECT MIN(cn.name) AS producing_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS movie_about_winning FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, title AS t WHERE cn.country_code ='[us]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND t.title  != '' AND (t.title LIKE 'Champion%' OR t.title LIKE 'Loser%') AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND mi_idx.movie_id = t.id AND it.id = mi_idx.info_type_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mi_idx.movie_id = mc.movie_id;",
    "hint_str": "/*+ HashJoin(ct t kt mi it2 mi_idx it mc cn)\n HashJoin(t kt mi it2 mi_idx it mc cn)\n HashJoin(mi_idx it mc cn)\n HashJoin(mc cn)\n HashJoin(mi_idx it)\n NestLoop(t kt mi it2)\n MergeJoin(t kt mi)\n HashJoin(t kt)\n BitmapScan(ct)\n BitmapScan(t)\n BitmapScan(kt)\n TidScan(mi)\n IndexScan(it2)\n BitmapScan(mi_idx)\n IndexScan(it)\n BitmapScan(mc)\n IndexScan(cn)\n Leading((ct ((((t kt) mi) it2) ((mi_idx it) (mc cn))))) */",
    "inference_time": 0.6474041938781738,
    "planning_time": 11.126,
    "predicted_latency": -9089.935546875,
    "actual_latency": 7352.896
}