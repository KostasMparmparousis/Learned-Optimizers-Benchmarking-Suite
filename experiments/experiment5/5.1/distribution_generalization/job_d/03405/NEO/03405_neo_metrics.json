{
    "query_name": "03405",
    "sql": "SELECT Count(*)\nFROM aka_name AS an,\n     complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     info_type AS it3,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     person_info AS pi,\n     role_type AS rt,\n     title AS t\nWHERE cct1.kind ='cast'\n  AND cct2.kind ='complete+verified'\n  AND chn.name = 'Queen'\n  AND ci.note IN ('(voice)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND it3.info = 'height'\n  AND k.keyword = 'computer-animation'\n  AND mi.info LIKE 'USA:%200%'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.title = 'Shrek 2'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND t.id = cc.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND ci.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND n.id = pi.person_id\n  AND ci.person_id = pi.person_id\n  AND it3.id = pi.info_type_id\n  AND k.id = mk.keyword_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND n.gender = 'f'\nAND t.production_year BETWEEN 1996  AND 2013;",
    "hint_str": "/*+ HashJoin(it3 an cct2 n k mi t cct1 mk cc ci it pi rt mc cn chn)\n HashJoin(an cct2 n k mi t cct1 mk cc ci it pi rt mc cn chn)\n MergeJoin(an cct2 n k mi t cct1 mk cc ci it pi rt mc cn)\n HashJoin(mc cn)\n MergeJoin(an cct2 n k mi t cct1 mk cc ci it pi rt)\n HashJoin(an cct2 n k mi t cct1 mk cc ci it pi)\n MergeJoin(an cct2 n k mi t cct1 mk cc ci it)\n HashJoin(cct2 n k mi t cct1 mk cc ci it)\n HashJoin(n k mi t cct1 mk cc ci it)\n MergeJoin(n k mi t cct1 mk cc ci)\n HashJoin(k mi t cct1 mk cc ci)\n MergeJoin(k mi t cct1 mk cc)\n HashJoin(mi t cct1 mk cc)\n HashJoin(t cct1 mk cc)\n MergeJoin(cct1 mk cc)\n MergeJoin(mk cc)\n TidScan(it3)\n TidScan(an)\n BitmapScan(cct2)\n TidScan(n)\n IndexScan(k)\n TidScan(mi)\n BitmapScan(t)\n TidScan(cct1)\n IndexScan(mk)\n BitmapScan(cc)\n BitmapScan(ci)\n BitmapScan(it)\n SeqScan(pi)\n TidScan(rt)\n SeqScan(mc)\n IndexScan(cn)\n IndexScan(chn)\n Leading((it3 (((((an (cct2 ((n ((k (mi (t (cct1 (mk cc))))) ci)) it))) pi) rt) (mc cn)) chn))) */",
    "inference_time": 35.20475149154663,
    "planning_time": 2370.299,
    "predicted_latency": -11148.478515625,
    "actual_latency": 8796.42
}