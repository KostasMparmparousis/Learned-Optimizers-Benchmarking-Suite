{
    "query_name": "03990",
    "sql": "SELECT MIN(cn.name) AS producing_company,\n       MIN(lt.link) AS link_type,\n       MIN(t.title) AS complete_western_sequel\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     company_name AS cn,\n     company_type AS ct,\n     keyword AS k,\n     link_type AS lt,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     movie_link AS ml,\n     title AS t\nWHERE cct2.kind = 'complete'\n  AND cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')\n  AND ct.kind ='production companies'\n  AND k.keyword ='sequel'\n  AND lt.link LIKE '%follow%'\n  AND mc.note IS NULL\n  AND lt.id = ml.link_type_id\n  AND ml.movie_id = t.id\n  AND t.id = mk.movie_id\n  AND mk.keyword_id = k.id\n  AND t.id = mc.movie_id\n  AND mc.company_type_id = ct.id\n  AND mc.company_id = cn.id\n  AND mi.movie_id = t.id\n  AND t.id = cc.movie_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND ml.movie_id = mk.movie_id\n  AND ml.movie_id = mc.movie_id\n  AND mk.movie_id = mc.movie_id\n  AND ml.movie_id = mi.movie_id\n  AND mk.movie_id = mi.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND ml.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND t.production_year = 1997\nAND cct1.kind IN ('complete+verified',\n'cast')\nAND mi.info IN ('American',\n'English',\n'German',\n'Danish');",
    "hint_str": "/*+ HashJoin(ml cct2 cct1 cc mi ct mc mk t k cn lt)\n HashJoin(ml cct2 cct1 cc mi ct mc mk t k cn)\n HashJoin(ct mc mk t k cn)\n HashJoin(ct mc mk t k)\n HashJoin(mc mk t k)\n MergeJoin(mk t k)\n HashJoin(mk t)\n HashJoin(ml cct2 cct1 cc mi)\n HashJoin(cct2 cct1 cc mi)\n HashJoin(cct2 cct1 cc)\n HashJoin(cct1 cc)\n SeqScan(ml)\n BitmapScan(cct2)\n BitmapScan(cct1)\n BitmapScan(cc)\n SeqScan(mi)\n SeqScan(ct)\n BitmapScan(mc)\n BitmapScan(mk)\n BitmapScan(t)\n IndexScan(k)\n BitmapScan(cn)\n BitmapScan(lt)\n Leading((((ml ((cct2 (cct1 cc)) mi)) ((ct (mc ((mk t) k))) cn)) lt)) */",
    "inference_time": 10.963613748550415,
    "planning_time": 69.287,
    "predicted_latency": -11329.296875,
    "actual_latency": 6645.419
}