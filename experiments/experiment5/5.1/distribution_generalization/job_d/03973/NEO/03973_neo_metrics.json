{
    "query_name": "03973",
    "sql": "SELECT MIN(cn.name) AS producing_company,\n       MIN(lt.link) AS link_type,\n       MIN(t.title) AS complete_western_sequel\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     company_name AS cn,\n     company_type AS ct,\n     keyword AS k,\n     link_type AS lt,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     movie_link AS ml,\n     title AS t\nWHERE cct2.kind = 'complete'\n  AND cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')\n  AND ct.kind ='production companies'\n  AND k.keyword ='sequel'\n  AND lt.link LIKE '%follow%'\n  AND mc.note IS NULL\n  AND lt.id = ml.link_type_id\n  AND ml.movie_id = t.id\n  AND t.id = mk.movie_id\n  AND mk.keyword_id = k.id\n  AND t.id = mc.movie_id\n  AND mc.company_type_id = ct.id\n  AND mc.company_id = cn.id\n  AND mi.movie_id = t.id\n  AND t.id = cc.movie_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND ml.movie_id = mk.movie_id\n  AND ml.movie_id = mc.movie_id\n  AND mk.movie_id = mc.movie_id\n  AND ml.movie_id = mi.movie_id\n  AND mk.movie_id = mi.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND ml.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND t.production_year = 1998\nAND cct1.kind IN ('complete+verified',\n'crew')\nAND mi.info IN ('Norwegian',\n'USA',\n'America',\n'Color');",
    "hint_str": "/*+ HashJoin(cct1 ct mi cct2 t lt cc mc cn ml mk k)\n MergeJoin(cct1 ct mi cct2 t lt cc mc cn ml mk)\n MergeJoin(ct mi cct2 t lt cc mc cn ml mk)\n HashJoin(mi cct2 t lt cc mc cn ml mk)\n HashJoin(mi cct2 t lt cc mc cn ml)\n HashJoin(cct2 t lt cc mc cn ml)\n MergeJoin(t lt cc mc cn ml)\n HashJoin(lt cc mc cn ml)\n HashJoin(cc mc cn ml)\n HashJoin(cc mc cn)\n MergeJoin(mc cn)\n SeqScan(cct1)\n TidScan(ct)\n SeqScan(mi)\n IndexScan(cct2)\n BitmapScan(t)\n SeqScan(lt)\n BitmapScan(cc)\n TidScan(mc)\n TidScan(cn)\n TidScan(ml)\n BitmapScan(mk)\n BitmapScan(k)\n Leading(((cct1 (ct ((mi (cct2 (t (lt ((cc (mc cn)) ml))))) mk))) k)) */",
    "inference_time": 4.24999213218689,
    "planning_time": 51.371,
    "predicted_latency": -11072.5224609375,
    "actual_latency": 2895.842
}