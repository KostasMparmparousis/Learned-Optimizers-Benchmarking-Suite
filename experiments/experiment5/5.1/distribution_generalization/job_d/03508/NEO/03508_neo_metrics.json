{
    "query_name": "03508",
    "sql": "SELECT Count(*)\nFROM aka_name AS an,\n     complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     info_type AS it3,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     person_info AS pi,\n     role_type AS rt,\n     title AS t\nWHERE cct1.kind ='cast'\n  AND cct2.kind ='complete+verified'\n  AND chn.name = 'Queen'\n  AND ci.note IN ('(voice)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND it3.info = 'height'\n  AND k.keyword = 'computer-animation'\n  AND mi.info LIKE 'USA:%200%'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.title = 'Shrek 2'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND t.id = cc.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND ci.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND n.id = pi.person_id\n  AND ci.person_id = pi.person_id\n  AND it3.id = pi.info_type_id\n  AND k.id = mk.keyword_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND n.gender = 'm'\nAND t.production_year BETWEEN 2000  AND 2008;",
    "hint_str": "/*+ HashJoin(cn mc mi t rt pi mk n ci cc chn k it3 cct2 an it cct1)\n MergeJoin(cn mc mi t rt pi mk n ci cc chn k it3 cct2 an it)\n HashJoin(cn mc mi t rt pi mk n ci cc chn k it3 cct2 an)\n HashJoin(rt pi mk n ci cc chn k it3 cct2 an)\n MergeJoin(pi mk n ci cc chn k it3 cct2 an)\n MergeJoin(pi mk n ci cc chn k it3 cct2)\n NestLoop(pi mk n ci cc chn k it3)\n HashJoin(pi mk n ci cc chn k)\n MergeJoin(mk n ci cc chn k)\n HashJoin(mk n ci cc chn)\n HashJoin(mk n ci cc)\n HashJoin(mk n ci)\n HashJoin(n ci)\n MergeJoin(cn mc mi t)\n MergeJoin(cn mc mi)\n HashJoin(cn mc)\n TidScan(cn)\n SeqScan(mc)\n SeqScan(mi)\n BitmapScan(t)\n SeqScan(rt)\n IndexScan(pi)\n BitmapScan(mk)\n BitmapScan(n)\n SeqScan(ci)\n TidScan(cc)\n IndexScan(chn)\n IndexScan(k)\n IndexScan(it3)\n SeqScan(cct2)\n TidScan(an)\n BitmapScan(it)\n BitmapScan(cct1)\n Leading(((((((cn mc) mi) t) (rt ((((pi ((((mk (n ci)) cc) chn) k)) it3) cct2) an))) it) cct1)) */",
    "inference_time": 10.68425178527832,
    "planning_time": 1901.769,
    "predicted_latency": -11113.1181640625,
    "actual_latency": 6226.778
}