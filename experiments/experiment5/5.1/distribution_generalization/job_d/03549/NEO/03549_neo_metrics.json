{
    "query_name": "03549",
    "sql": "SELECT Count(*)\nFROM aka_name AS an,\n     complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     info_type AS it3,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     person_info AS pi,\n     role_type AS rt,\n     title AS t\nWHERE cct1.kind ='cast'\n  AND cct2.kind ='complete+verified'\n  AND chn.name = 'Queen'\n  AND ci.note IN ('(voice)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND it3.info = 'height'\n  AND k.keyword = 'computer-animation'\n  AND mi.info LIKE 'USA:%200%'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.title = 'Shrek 2'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND t.id = cc.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND ci.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND n.id = pi.person_id\n  AND ci.person_id = pi.person_id\n  AND it3.id = pi.info_type_id\n  AND k.id = mk.keyword_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND n.gender = 'f'\nAND t.production_year BETWEEN 1995  AND 1998;",
    "hint_str": "/*+ NestLoop(cc cct1 cct2 pi cn k mc t chn it mi mk ci n an rt it3)\n MergeJoin(cc cct1 cct2 pi cn k mc t chn it mi mk ci n an rt)\n HashJoin(pi cn k mc t chn it mi mk ci n an rt)\n MergeJoin(pi cn k mc t chn it mi mk ci n an)\n HashJoin(cn k mc t chn it mi mk ci n an)\n MergeJoin(k mc t chn it mi mk ci n an)\n HashJoin(mc t chn it mi mk ci n an)\n HashJoin(t chn it mi mk ci n an)\n NestLoop(chn it mi mk ci n an)\n HashJoin(chn it mi mk ci n)\n HashJoin(it mi mk ci n)\n HashJoin(it mi mk ci)\n HashJoin(it mi mk)\n HashJoin(mi mk)\n HashJoin(cc cct1 cct2)\n HashJoin(cc cct1)\n IndexScan(cc)\n SeqScan(cct1)\n BitmapScan(cct2)\n IndexScan(pi)\n TidScan(cn)\n BitmapScan(k)\n BitmapScan(mc)\n IndexScan(t)\n TidScan(chn)\n BitmapScan(it)\n BitmapScan(mi)\n IndexScan(mk)\n IndexScan(ci)\n TidScan(n)\n IndexScan(an)\n IndexScan(rt)\n IndexScan(it3)\n Leading(((((cc cct1) cct2) ((pi (cn (k (mc (t ((chn (((it (mi mk)) ci) n)) an)))))) rt)) it3)) */",
    "inference_time": 11.406130313873291,
    "planning_time": 2409.6,
    "predicted_latency": -11131.978515625,
    "actual_latency": 49685.765
}