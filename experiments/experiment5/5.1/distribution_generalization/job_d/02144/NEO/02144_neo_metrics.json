{
    "query_name": "02144",
    "sql": "SELECT MIN(cn.name) AS movie_company,\n       MIN(mi_idx.info) AS rating,\n       MIN(t.title) AS complete_euro_dark_movie\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     company_name AS cn,\n     company_type AS ct,\n     info_type AS it1,\n     info_type AS it2,\n     keyword AS k,\n     kind_type AS kt,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_info_idx AS mi_idx,\n     movie_keyword AS mk,\n     title AS t\nWHERE cct1.kind = 'crew'\n  AND cct2.kind != 'complete+verified'\n  AND cn.country_code != '[us]'\n  AND it1.info = 'countries'\n  AND it2.info = 'rating'\n  AND k.keyword IN ('murder',\n                    'murder-in-title',\n                    'blood',\n                    'violence')\n  AND kt.kind IN ('movie',\n                  'episode')\n  AND mc.note NOT LIKE '%(USA)%'\n  AND mc.note LIKE '%(200%)%'\n  AND mi_idx.info < '8.5'\n  AND kt.id = t.kind_id\n  AND t.id = mi.movie_id\n  AND t.id = mk.movie_id\n  AND t.id = mi_idx.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = cc.movie_id\n  AND mk.movie_id = mi.movie_id\n  AND mk.movie_id = mi_idx.movie_id\n  AND mk.movie_id = mc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mi.movie_id = mi_idx.movie_id\n  AND mi.movie_id = mc.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND mc.movie_id = mi_idx.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi_idx.movie_id = cc.movie_id\n  AND k.id = mk.keyword_id\n  AND it1.id = mi.info_type_id\n  AND it2.id = mi_idx.info_type_id\n  AND ct.id = mc.company_type_id\n  AND cn.id = mc.company_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND t.production_year > 2000\nAND mi.info IN ('America',\n'American',\n'Swedish',\n'English',\n'USA',\n'Germany',\n'Denish',\n'Norway',\n'Norwegian',\n'Danish');",
    "hint_str": "/*+ HashJoin(it2 mi_idx mk t cct2 cct1 mc mi cc it1 ct k cn kt)\n NestLoop(it2 mi_idx mk t cct2 cct1 mc mi cc it1 ct k cn)\n MergeJoin(it2 mi_idx mk t cct2 cct1 mc mi cc it1 ct k)\n HashJoin(it2 mi_idx mk t cct2 cct1 mc mi cc it1 ct)\n MergeJoin(cct2 cct1 mc mi cc it1 ct)\n NestLoop(cct1 mc mi cc it1 ct)\n MergeJoin(cct1 mc mi cc it1)\n MergeJoin(cct1 mc mi cc)\n MergeJoin(mc mi cc)\n MergeJoin(mc mi)\n HashJoin(it2 mi_idx mk t)\n MergeJoin(it2 mi_idx mk)\n HashJoin(mi_idx mk)\n BitmapScan(it2)\n IndexScan(mi_idx)\n IndexScan(mk)\n IndexScan(t)\n BitmapScan(cct2)\n BitmapScan(cct1)\n BitmapScan(mc)\n SeqScan(mi)\n SeqScan(cc)\n IndexScan(it1)\n IndexScan(ct)\n SeqScan(k)\n IndexScan(cn)\n BitmapScan(kt)\n Leading(((((((it2 (mi_idx mk)) t) (cct2 (((cct1 ((mc mi) cc)) it1) ct))) k) cn) kt)) */",
    "inference_time": 13.72847604751587,
    "planning_time": 170.58,
    "predicted_latency": -11345.86328125,
    "actual_latency": 29045.89
}