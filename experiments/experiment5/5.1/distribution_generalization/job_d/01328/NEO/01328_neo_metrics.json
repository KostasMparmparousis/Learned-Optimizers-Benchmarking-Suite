{
    "query_name": "01328",
    "sql": "SELECT MIN(chn.name) AS character_name,\n       MIN(mi_idx.info) AS rating,\n       MIN(n.name) AS playing_actor,\n       MIN(t.title) AS complete_hero_movie\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     char_name AS chn,\n     cast_info AS ci,\n     info_type AS it2,\n     keyword AS k,\n     kind_type AS kt,\n     movie_info_idx AS mi_idx,\n     movie_keyword AS mk,\n     name AS n,\n     title AS t\nWHERE cct1.kind = 'cast'\n  AND cct2.kind LIKE '%complete%'\n  AND chn.name IS NOT NULL\n  AND (chn.name LIKE '%man%'\n       OR chn.name LIKE '%Man%')\n  AND it2.info = 'rating'\n  AND kt.kind = 'movie'\n  AND mi_idx.info > '7.0'\n  AND kt.id = t.kind_id\n  AND t.id = mk.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = cc.movie_id\n  AND t.id = mi_idx.movie_id\n  AND mk.movie_id = ci.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mk.movie_id = mi_idx.movie_id\n  AND ci.movie_id = cc.movie_id\n  AND ci.movie_id = mi_idx.movie_id\n  AND cc.movie_id = mi_idx.movie_id\n  AND chn.id = ci.person_role_id\n  AND n.id = ci.person_id\n  AND k.id = mk.keyword_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND it2.id = mi_idx.info_type_id\n  AND k.keyword IN ('marvel-comics',\n'fight',\n'superhero',\n'laser',\n'death',\n'superhero',\n'murder',\n'web',\n'murder-in-title',\n'based-on-comic')\nAND t.production_year > 1994;",
    "hint_str": "/*+ HashJoin(it2 mi_idx cct2 cct1 kt t ci chn n cc k mk)\n HashJoin(k mk)\n HashJoin(it2 mi_idx cct2 cct1 kt t ci chn n cc)\n MergeJoin(cct2 cct1 kt t ci chn n cc)\n HashJoin(cct1 kt t ci chn n cc)\n MergeJoin(kt t ci chn n cc)\n NestLoop(kt t ci chn n)\n NestLoop(kt t ci chn)\n HashJoin(kt t ci)\n HashJoin(t ci)\n HashJoin(it2 mi_idx)\n BitmapScan(it2)\n BitmapScan(mi_idx)\n IndexScan(cct2)\n TidScan(cct1)\n BitmapScan(kt)\n TidScan(t)\n BitmapScan(ci)\n IndexScan(chn)\n IndexScan(n)\n SeqScan(cc)\n BitmapScan(k)\n SeqScan(mk)\n Leading((((it2 mi_idx) (cct2 (cct1 ((((kt (t ci)) chn) n) cc)))) (k mk))) */",
    "inference_time": 8.00275444984436,
    "planning_time": 43.342,
    "predicted_latency": -11472.15234375,
    "actual_latency": 48395.452
}