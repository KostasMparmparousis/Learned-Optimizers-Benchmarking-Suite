{
    "query_name": "04366",
    "sql": "SELECT MIN(chn.name) AS voiced_char_name,\n       MIN(n.name) AS voicing_actress_name,\n       MIN(t.title) AS kung_fu_panda\nFROM aka_name AS an,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     role_type AS rt,\n     title AS t\nWHERE ci.note IN ('(voice)',\n                  '(voice: Japanese version)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND mi.info IS NOT NULL\n  AND (mi.info LIKE 'Japan:%201%'\n       OR mi.info LIKE 'USA:%201%')\n  AND n.gender ='f'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND k.id = mk.keyword_id\n  AND t.title LIKE 'Kung Fu Panda%'\n  AND cn.name = 'DreamWorks Animation'\nAND k.keyword IN ('magnet',\n'based-on-comic',\n'10,000-mile-club',\n'action-heroine')\nAND t.production_year > 2008;",
    "hint_str": "/*+ HashJoin(it chn n an cn rt ci mc mi k mk t)\n HashJoin(chn n an cn rt ci mc mi k mk t)\n HashJoin(n an cn rt ci mc mi k mk t)\n HashJoin(cn rt ci mc mi k mk t)\n MergeJoin(rt ci mc mi k mk t)\n MergeJoin(ci mc mi k mk t)\n MergeJoin(ci mc mi k mk)\n HashJoin(mc mi k mk)\n MergeJoin(mi k mk)\n MergeJoin(k mk)\n HashJoin(n an)\n BitmapScan(it)\n TidScan(chn)\n TidScan(n)\n IndexScan(an)\n BitmapScan(cn)\n BitmapScan(rt)\n SeqScan(ci)\n TidScan(mc)\n BitmapScan(mi)\n BitmapScan(k)\n BitmapScan(mk)\n BitmapScan(t)\n Leading((it (chn ((n an) (cn (rt ((ci (mc (mi (k mk)))) t))))))) */",
    "inference_time": 2.724616050720215,
    "planning_time": 50.436,
    "predicted_latency": -11471.6708984375,
    "actual_latency": 12314.416
}