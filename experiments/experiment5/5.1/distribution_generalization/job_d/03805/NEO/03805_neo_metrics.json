{
    "query_name": "03805",
    "sql": "SELECT MIN(cn.name) AS producing_company,\n       MIN(lt.link) AS link_type,\n       MIN(t.title) AS complete_western_sequel\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     company_name AS cn,\n     company_type AS ct,\n     keyword AS k,\n     link_type AS lt,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     movie_link AS ml,\n     title AS t\nWHERE cct2.kind = 'complete'\n  AND cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')\n  AND ct.kind ='production companies'\n  AND k.keyword ='sequel'\n  AND lt.link LIKE '%follow%'\n  AND mc.note IS NULL\n  AND lt.id = ml.link_type_id\n  AND ml.movie_id = t.id\n  AND t.id = mk.movie_id\n  AND mk.keyword_id = k.id\n  AND t.id = mc.movie_id\n  AND mc.company_type_id = ct.id\n  AND mc.company_id = cn.id\n  AND mi.movie_id = t.id\n  AND t.id = cc.movie_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND ml.movie_id = mk.movie_id\n  AND ml.movie_id = mc.movie_id\n  AND mk.movie_id = mc.movie_id\n  AND ml.movie_id = mi.movie_id\n  AND mk.movie_id = mi.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND ml.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND t.production_year = 1998\nAND cct1.kind IN ('crew',\n'cast')\nAND mi.info IN ('Norway',\n'Norwegian',\n'Denmark',\n'Crime');",
    "hint_str": "/*+ HashJoin(lt cn t mc mi cc ml mk ct k cct2 cct1)\n MergeJoin(lt cn t mc mi cc ml mk ct k cct2)\n HashJoin(cn t mc mi cc ml mk ct k cct2)\n HashJoin(cn t mc mi cc ml mk ct k)\n MergeJoin(cn t mc mi cc ml mk ct)\n MergeJoin(t mc mi cc ml mk ct)\n MergeJoin(t mc mi cc ml mk)\n MergeJoin(mc mi cc ml mk)\n HashJoin(mc mi cc ml)\n MergeJoin(mi cc ml)\n HashJoin(cc ml)\n SeqScan(lt)\n TidScan(cn)\n IndexScan(t)\n BitmapScan(mc)\n SeqScan(mi)\n BitmapScan(cc)\n BitmapScan(ml)\n SeqScan(mk)\n BitmapScan(ct)\n IndexScan(k)\n IndexScan(cct2)\n BitmapScan(cct1)\n Leading(((lt (((cn ((t ((mc (mi (cc ml))) mk)) ct)) k) cct2)) cct1)) */",
    "inference_time": 5.9887166023254395,
    "planning_time": 64.022,
    "predicted_latency": -11045.7626953125,
    "actual_latency": 2944.205
}