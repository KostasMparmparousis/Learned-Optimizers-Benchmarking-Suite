{
    "query_name": "00112",
    "sql": "SELECT MIN(chn.name) AS voiced_char_name,\n       MIN(n.name) AS voicing_actress_name,\n       MIN(t.title) AS kung_fu_panda\nFROM aka_name AS an,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     role_type AS rt,\n     title AS t\nWHERE ci.note IN ('(voice)',\n                  '(voice: Japanese version)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND mi.info IS NOT NULL\n  AND (mi.info LIKE 'Japan:%201%'\n       OR mi.info LIKE 'USA:%201%')\n  AND n.gender ='f'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND k.id = mk.keyword_id\n  AND t.title LIKE 'Kung Fu Panda%'\n  AND cn.name = 'DreamWorks Animation'\nAND k.keyword IN ('claw',\n'death',\n'revenge',\n'ancient-china')\nAND t.production_year > 2008;",
    "hint_str": "/*+ HashJoin(k chn an t rt ci mc it mi mk cn n)\n HashJoin(chn an t rt ci mc it mi mk cn n)\n HashJoin(an t rt ci mc it mi mk cn n)\n HashJoin(t rt ci mc it mi mk cn n)\n MergeJoin(rt ci mc it mi mk cn n)\n HashJoin(rt ci mc it mi mk cn)\n MergeJoin(ci mc it mi mk cn)\n HashJoin(mc it mi mk cn)\n MergeJoin(mc it mi mk)\n MergeJoin(it mi mk)\n MergeJoin(it mi)\n BitmapScan(k)\n TidScan(chn)\n TidScan(an)\n BitmapScan(t)\n BitmapScan(rt)\n TidScan(ci)\n TidScan(mc)\n SeqScan(it)\n SeqScan(mi)\n TidScan(mk)\n BitmapScan(cn)\n IndexScan(n)\n Leading((k (chn (an (t ((rt (ci ((mc ((it mi) mk)) cn))) n)))))) */",
    "inference_time": 10.639023542404175,
    "planning_time": 40.758,
    "predicted_latency": -11465.64453125,
    "actual_latency": 88017.726
}