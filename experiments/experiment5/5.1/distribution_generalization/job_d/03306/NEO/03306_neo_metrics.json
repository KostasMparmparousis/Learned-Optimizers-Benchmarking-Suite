{
    "query_name": "03306",
    "sql": "SELECT MIN(chn.name) AS voiced_char_name,\n       MIN(n.name) AS voicing_actress_name,\n       MIN(t.title) AS kung_fu_panda\nFROM aka_name AS an,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     role_type AS rt,\n     title AS t\nWHERE ci.note IN ('(voice)',\n                  '(voice: Japanese version)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND mi.info IS NOT NULL\n  AND (mi.info LIKE 'Japan:%201%'\n       OR mi.info LIKE 'USA:%201%')\n  AND n.gender ='f'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND k.id = mk.keyword_id\n  AND t.title LIKE 'Kung Fu Panda%'\n  AND cn.name = 'NBC Universal Television'\nAND k.keyword IN ('sequel',\n'violence',\n'sequel',\n'dojo')\nAND t.production_year > 2008;",
    "hint_str": "/*+ HashJoin(mk k rt it cn t ci mi mc chn an n)\n MergeJoin(rt it cn t ci mi mc chn an n)\n HashJoin(it cn t ci mi mc chn an n)\n MergeJoin(it cn t ci mi mc chn an)\n MergeJoin(it cn t ci mi mc chn)\n MergeJoin(it cn t ci mi mc)\n HashJoin(cn t ci mi mc)\n MergeJoin(t ci mi mc)\n MergeJoin(ci mi mc)\n HashJoin(mi mc)\n HashJoin(mk k)\n BitmapScan(mk)\n BitmapScan(k)\n IndexScan(rt)\n IndexScan(it)\n SeqScan(cn)\n TidScan(t)\n BitmapScan(ci)\n SeqScan(mi)\n BitmapScan(mc)\n SeqScan(chn)\n IndexScan(an)\n IndexScan(n)\n Leading(((mk k) (rt ((((it (cn (t (ci (mi mc))))) chn) an) n)))) */",
    "inference_time": 8.24810528755188,
    "planning_time": 51.94,
    "predicted_latency": -11471.98828125,
    "actual_latency": 13818.505
}