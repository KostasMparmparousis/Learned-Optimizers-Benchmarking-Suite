{
    "query_name": "02187",
    "sql": "SELECT MIN(chn.name) AS character_name,\n       MIN(mi_idx.info) AS rating,\n       MIN(n.name) AS playing_actor,\n       MIN(t.title) AS complete_hero_movie\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     char_name AS chn,\n     cast_info AS ci,\n     info_type AS it2,\n     keyword AS k,\n     kind_type AS kt,\n     movie_info_idx AS mi_idx,\n     movie_keyword AS mk,\n     name AS n,\n     title AS t\nWHERE cct1.kind = 'cast'\n  AND cct2.kind LIKE '%complete%'\n  AND chn.name IS NOT NULL\n  AND (chn.name LIKE '%man%'\n       OR chn.name LIKE '%Man%')\n  AND it2.info = 'rating'\n  AND kt.kind = 'movie'\n  AND mi_idx.info > '7.0'\n  AND kt.id = t.kind_id\n  AND t.id = mk.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = cc.movie_id\n  AND t.id = mi_idx.movie_id\n  AND mk.movie_id = ci.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mk.movie_id = mi_idx.movie_id\n  AND ci.movie_id = cc.movie_id\n  AND ci.movie_id = mi_idx.movie_id\n  AND cc.movie_id = mi_idx.movie_id\n  AND chn.id = ci.person_role_id\n  AND n.id = ci.person_id\n  AND k.id = mk.keyword_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND it2.id = mi_idx.info_type_id\n  AND k.keyword IN ('tv-special',\n'martial-arts',\n'blood',\n'fight',\n'based-on-comic',\n'violence',\n'murder-in-title',\n'marvel-comics',\n'gore',\n'hospital')\nAND t.production_year > 2000;",
    "hint_str": "/*+ HashJoin(cct2 chn cct1 ci cc k mi_idx t kt mk it2 n)\n NestLoop(chn cct1 ci cc k mi_idx t kt mk it2 n)\n MergeJoin(chn cct1 ci cc k mi_idx t kt mk it2)\n MergeJoin(cct1 ci cc k mi_idx t kt mk it2)\n MergeJoin(ci cc k mi_idx t kt mk it2)\n MergeJoin(cc k mi_idx t kt mk it2)\n MergeJoin(k mi_idx t kt mk it2)\n MergeJoin(mi_idx t kt mk it2)\n HashJoin(mi_idx t kt mk)\n NestLoop(t kt mk)\n MergeJoin(t kt)\n BitmapScan(cct2)\n TidScan(chn)\n IndexScan(cct1)\n BitmapScan(ci)\n IndexScan(cc)\n SeqScan(k)\n TidScan(mi_idx)\n SeqScan(t)\n TidScan(kt)\n IndexScan(mk)\n SeqScan(it2)\n IndexScan(n)\n Leading((cct2 ((chn (cct1 (ci (cc (k ((mi_idx ((t kt) mk)) it2)))))) n))) */",
    "inference_time": 9.175386428833008,
    "planning_time": 41.668,
    "predicted_latency": -11465.64453125,
    "actual_latency": 3849.853
}