{
    "query_name": "02062",
    "sql": "SELECT MIN(cn.name) AS movie_company,\n       MIN(mi_idx.info) AS rating,\n       MIN(t.title) AS complete_euro_dark_movie\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     company_name AS cn,\n     company_type AS ct,\n     info_type AS it1,\n     info_type AS it2,\n     keyword AS k,\n     kind_type AS kt,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_info_idx AS mi_idx,\n     movie_keyword AS mk,\n     title AS t\nWHERE cct1.kind = 'crew'\n  AND cct2.kind != 'complete+verified'\n  AND cn.country_code != '[us]'\n  AND it1.info = 'countries'\n  AND it2.info = 'rating'\n  AND k.keyword IN ('murder',\n                    'murder-in-title',\n                    'blood',\n                    'violence')\n  AND kt.kind IN ('movie',\n                  'episode')\n  AND mc.note NOT LIKE '%(USA)%'\n  AND mc.note LIKE '%(200%)%'\n  AND mi_idx.info < '8.5'\n  AND kt.id = t.kind_id\n  AND t.id = mi.movie_id\n  AND t.id = mk.movie_id\n  AND t.id = mi_idx.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = cc.movie_id\n  AND mk.movie_id = mi.movie_id\n  AND mk.movie_id = mi_idx.movie_id\n  AND mk.movie_id = mc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mi.movie_id = mi_idx.movie_id\n  AND mi.movie_id = mc.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND mc.movie_id = mi_idx.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi_idx.movie_id = cc.movie_id\n  AND k.id = mk.keyword_id\n  AND it1.id = mi.info_type_id\n  AND it2.id = mi_idx.info_type_id\n  AND ct.id = mc.company_type_id\n  AND cn.id = mc.company_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND t.production_year > 1997\nAND mi.info IN ('English',\n'Denish',\n'Swedish',\n'America',\n'Danish',\n'American',\n'Germany',\n'Denmark',\n'German',\n'Norway');",
    "hint_str": "/*+ HashJoin(cct1 t ct cc mc mk k it2 it1 mi_idx mi cn kt cct2)\n MergeJoin(cct1 t ct cc mc mk k it2 it1 mi_idx mi cn kt)\n NestLoop(cct1 t ct cc mc mk k it2 it1 mi_idx mi cn)\n MergeJoin(cct1 t ct cc mc mk k it2 it1 mi_idx mi)\n MergeJoin(t ct cc mc mk k it2 it1 mi_idx mi)\n MergeJoin(ct cc mc mk k it2 it1 mi_idx mi)\n HashJoin(it2 it1 mi_idx mi)\n HashJoin(it1 mi_idx mi)\n HashJoin(mi_idx mi)\n HashJoin(ct cc mc mk k)\n MergeJoin(cc mc mk k)\n MergeJoin(mc mk k)\n HashJoin(mk k)\n BitmapScan(cct1)\n IndexScan(t)\n BitmapScan(ct)\n SeqScan(cc)\n SeqScan(mc)\n BitmapScan(mk)\n IndexScan(k)\n IndexScan(it2)\n IndexScan(it1)\n IndexScan(mi_idx)\n SeqScan(mi)\n IndexScan(cn)\n TidScan(kt)\n BitmapScan(cct2)\n Leading(((((cct1 (t ((ct (cc (mc (mk k)))) (it2 (it1 (mi_idx mi)))))) cn) kt) cct2)) */",
    "inference_time": 9.486371278762817,
    "planning_time": 101.717,
    "predicted_latency": -11398.978515625,
    "actual_latency": 4096.933
}