{
    "query_name": "03946",
    "sql": "SELECT MIN(cn.name) AS producing_company,\n       MIN(lt.link) AS link_type,\n       MIN(t.title) AS complete_western_sequel\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     company_name AS cn,\n     company_type AS ct,\n     keyword AS k,\n     link_type AS lt,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     movie_link AS ml,\n     title AS t\nWHERE cct2.kind = 'complete'\n  AND cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')\n  AND ct.kind ='production companies'\n  AND k.keyword ='sequel'\n  AND lt.link LIKE '%follow%'\n  AND mc.note IS NULL\n  AND lt.id = ml.link_type_id\n  AND ml.movie_id = t.id\n  AND t.id = mk.movie_id\n  AND mk.keyword_id = k.id\n  AND t.id = mc.movie_id\n  AND mc.company_type_id = ct.id\n  AND mc.company_id = cn.id\n  AND mi.movie_id = t.id\n  AND t.id = cc.movie_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND ml.movie_id = mk.movie_id\n  AND ml.movie_id = mc.movie_id\n  AND mk.movie_id = mc.movie_id\n  AND ml.movie_id = mi.movie_id\n  AND mk.movie_id = mi.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND ml.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND t.production_year = 1998\nAND cct1.kind IN ('complete',\n'crew')\nAND mi.info IN ('Norway',\n'American',\n'Germany',\n'Sweden:27 March 1998');",
    "hint_str": "/*+ HashJoin(t k mk mi ml lt mc cc cct2 cn cct1 ct)\n HashJoin(t k mk mi ml lt mc cc cct2 cn cct1)\n HashJoin(t k mk mi ml lt mc cc cct2 cn)\n MergeJoin(t k mk mi ml lt mc cc cct2)\n MergeJoin(t k mk mi ml lt mc cc)\n HashJoin(t k mk mi ml lt mc)\n MergeJoin(t k mk mi ml lt)\n HashJoin(t k mk mi ml)\n MergeJoin(k mk mi ml)\n HashJoin(mi ml)\n NestLoop(k mk)\n BitmapScan(t)\n SeqScan(k)\n IndexScan(mk)\n SeqScan(mi)\n BitmapScan(ml)\n TidScan(lt)\n SeqScan(mc)\n SeqScan(cc)\n BitmapScan(cct2)\n BitmapScan(cn)\n BitmapScan(cct1)\n BitmapScan(ct)\n Leading(((((((((t ((k mk) (mi ml))) lt) mc) cc) cct2) cn) cct1) ct)) */",
    "inference_time": 6.980811357498169,
    "planning_time": 53.219,
    "predicted_latency": -11284.2314453125,
    "actual_latency": 2950.71
}