{
    "query_name": "01691",
    "sql": "SELECT MIN(chn.name) AS voiced_char_name,\n       MIN(n.name) AS voicing_actress_name,\n       MIN(t.title) AS kung_fu_panda\nFROM aka_name AS an,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     role_type AS rt,\n     title AS t\nWHERE ci.note IN ('(voice)',\n                  '(voice: Japanese version)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND mi.info IS NOT NULL\n  AND (mi.info LIKE 'Japan:%201%'\n       OR mi.info LIKE 'USA:%201%')\n  AND n.gender ='f'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND k.id = mk.keyword_id\n  AND t.title LIKE 'Kung Fu Panda%'\n  AND cn.name = 'DreamWorks Home Entertainment'\nAND k.keyword IN ('blood',\n'superhero',\n'violence',\n'fleet')\nAND t.production_year > 2009;",
    "hint_str": "/*+ HashJoin(t cn an rt chn mk it mi mc ci n k)\n HashJoin(cn an rt chn mk it mi mc ci n k)\n MergeJoin(an rt chn mk it mi mc ci n k)\n MergeJoin(rt chn mk it mi mc ci n k)\n HashJoin(chn mk it mi mc ci n k)\n MergeJoin(chn mk it mi mc ci n)\n MergeJoin(chn mk it mi mc ci)\n MergeJoin(mk it mi mc ci)\n HashJoin(mk it mi mc)\n MergeJoin(mk it mi)\n MergeJoin(it mi)\n BitmapScan(t)\n SeqScan(cn)\n IndexScan(an)\n SeqScan(rt)\n TidScan(chn)\n BitmapScan(mk)\n IndexScan(it)\n BitmapScan(mi)\n TidScan(mc)\n SeqScan(ci)\n TidScan(n)\n IndexScan(k)\n Leading((t (cn (an (rt (((chn (((mk (it mi)) mc) ci)) n) k)))))) */",
    "inference_time": 15.23335313796997,
    "planning_time": 48.673,
    "predicted_latency": -11465.8076171875,
    "actual_latency": 37253.899
}