{
    "query_name": "03406",
    "sql": "SELECT Count(*)\nFROM aka_name AS an,\n     complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     info_type AS it3,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     person_info AS pi,\n     role_type AS rt,\n     title AS t\nWHERE cct1.kind ='cast'\n  AND cct2.kind ='complete+verified'\n  AND chn.name = 'Queen'\n  AND ci.note IN ('(voice)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND it3.info = 'height'\n  AND k.keyword = 'computer-animation'\n  AND mi.info LIKE 'USA:%200%'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.title = 'Shrek 2'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND t.id = cc.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND ci.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND n.id = pi.person_id\n  AND ci.person_id = pi.person_id\n  AND it3.id = pi.info_type_id\n  AND k.id = mk.keyword_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND n.gender = 'f'\nAND t.production_year BETWEEN 1996  AND 2005;",
    "hint_str": "/*+ NestLoop(it3 cct1 cct2 an pi rt chn mk mi mc ci n t it k cc cn)\n MergeJoin(it3 cct1 cct2 an pi rt chn mk mi mc ci n t it k cc)\n MergeJoin(cct1 cct2 an pi rt chn mk mi mc ci n t it k cc)\n HashJoin(cct2 an pi rt chn mk mi mc ci n t it k cc)\n MergeJoin(an pi rt chn mk mi mc ci n t it k cc)\n HashJoin(an pi rt chn mk mi mc ci n t it k)\n HashJoin(pi rt chn mk mi mc ci n t it k)\n MergeJoin(rt chn mk mi mc ci n t it k)\n MergeJoin(rt chn mk mi mc ci n t it)\n MergeJoin(chn mk mi mc ci n t it)\n HashJoin(mk mi mc ci n t it)\n MergeJoin(mk mi mc ci n t)\n MergeJoin(mk mi mc ci n)\n MergeJoin(mk mi mc ci)\n HashJoin(mk mi mc)\n HashJoin(mi mc)\n IndexScan(it3)\n SeqScan(cct1)\n SeqScan(cct2)\n SeqScan(an)\n BitmapScan(pi)\n TidScan(rt)\n BitmapScan(chn)\n BitmapScan(mk)\n SeqScan(mi)\n SeqScan(mc)\n BitmapScan(ci)\n TidScan(n)\n BitmapScan(t)\n SeqScan(it)\n BitmapScan(k)\n BitmapScan(cc)\n IndexScan(cn)\n Leading(((it3 (cct1 (cct2 ((an (pi ((rt (chn (((((mk (mi mc)) ci) n) t) it))) k))) cc)))) cn)) */",
    "inference_time": 12.318441390991211,
    "planning_time": 2381.149,
    "predicted_latency": -11097.7060546875,
    "actual_latency": 71962.829
}