{
    "query_name": "02455",
    "sql": "SELECT MIN(mi.info) AS movie_budget,\n       MIN(mi_idx.info) AS movie_votes,\n       MIN(n.name) AS male_writer,\n       MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n     info_type AS it1,\n     info_type AS it2,\n     keyword AS k,\n     movie_info AS mi,\n     movie_info_idx AS mi_idx,\n     movie_keyword AS mk,\n     name AS n,\n     title AS t\nWHERE ci.note IN ('(writer)',\n                  '(head writer)',\n                  '(written by)',\n                  '(story)',\n                  '(story editor)')\n  AND it1.info = 'genres'\n  AND it2.info = 'votes'\n  AND t.id = mi.movie_id\n  AND t.id = mi_idx.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND ci.movie_id = mi.movie_id\n  AND ci.movie_id = mi_idx.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND mi.movie_id = mi_idx.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND mi_idx.movie_id = mk.movie_id\n  AND n.id = ci.person_id\n  AND it1.id = mi.info_type_id\n  AND it2.id = mi_idx.info_type_id\n  AND k.id = mk.keyword_id\n  AND t.title like 'Deep%'\nAND k.keyword IN ('second-part',\n'violence',\n'web',\n'violence',\n'love')\nAND mi.info = 'Short'\nAND n.gender = 'm'\nAND t.production_year > 2007;",
    "hint_str": "/*+ HashJoin(mi mk it2 mi_idx k t it1 ci n)\n HashJoin(mi mk it2 mi_idx k t it1 ci)\n HashJoin(mi mk it2 mi_idx k t it1)\n MergeJoin(mi mk it2 mi_idx k t)\n HashJoin(mk it2 mi_idx k t)\n HashJoin(mk it2 mi_idx k)\n MergeJoin(mk it2 mi_idx)\n HashJoin(it2 mi_idx)\n TidScan(mi)\n BitmapScan(mk)\n IndexScan(it2)\n IndexScan(mi_idx)\n SeqScan(k)\n IndexScan(t)\n SeqScan(it1)\n BitmapScan(ci)\n BitmapScan(n)\n Leading(((((mi (((mk (it2 mi_idx)) k) t)) it1) ci) n)) */",
    "inference_time": 3.841048240661621,
    "planning_time": 13.718,
    "predicted_latency": -10943.46875,
    "actual_latency": 3805.94
}