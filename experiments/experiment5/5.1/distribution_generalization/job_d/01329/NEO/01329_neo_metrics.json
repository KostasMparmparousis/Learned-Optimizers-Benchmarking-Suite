{
    "query_name": "01329",
    "sql": "SELECT MIN(chn.name) AS character_name,\n       MIN(mi_idx.info) AS rating,\n       MIN(n.name) AS playing_actor,\n       MIN(t.title) AS complete_hero_movie\nFROM complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     char_name AS chn,\n     cast_info AS ci,\n     info_type AS it2,\n     keyword AS k,\n     kind_type AS kt,\n     movie_info_idx AS mi_idx,\n     movie_keyword AS mk,\n     name AS n,\n     title AS t\nWHERE cct1.kind = 'cast'\n  AND cct2.kind LIKE '%complete%'\n  AND chn.name IS NOT NULL\n  AND (chn.name LIKE '%man%'\n       OR chn.name LIKE '%Man%')\n  AND it2.info = 'rating'\n  AND kt.kind = 'movie'\n  AND mi_idx.info > '7.0'\n  AND kt.id = t.kind_id\n  AND t.id = mk.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = cc.movie_id\n  AND t.id = mi_idx.movie_id\n  AND mk.movie_id = ci.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND mk.movie_id = mi_idx.movie_id\n  AND ci.movie_id = cc.movie_id\n  AND ci.movie_id = mi_idx.movie_id\n  AND cc.movie_id = mi_idx.movie_id\n  AND chn.id = ci.person_role_id\n  AND n.id = ci.person_id\n  AND k.id = mk.keyword_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND it2.id = mi_idx.info_type_id\n  AND k.keyword IN ('second-part',\n'fight',\n'superhero',\n'murder-in-title',\n'10,000-mile-club',\n'sequel',\n'murder',\n'tv-special',\n'fight',\n'tv-special')\nAND t.production_year > 2005;",
    "hint_str": "/*+ HashJoin(k t n cct1 mk cc ci mi_idx cct2 chn it2 kt)\n MergeJoin(t n cct1 mk cc ci mi_idx cct2 chn it2 kt)\n HashJoin(t n cct1 mk cc ci mi_idx cct2 chn it2)\n MergeJoin(n cct1 mk cc ci mi_idx cct2 chn it2)\n HashJoin(n cct1 mk cc ci mi_idx cct2 chn)\n HashJoin(n cct1 mk cc ci mi_idx cct2)\n HashJoin(cct1 mk cc ci mi_idx cct2)\n HashJoin(mk cc ci mi_idx cct2)\n HashJoin(mk cc ci mi_idx)\n HashJoin(mk cc ci)\n MergeJoin(cc ci)\n BitmapScan(k)\n BitmapScan(t)\n SeqScan(n)\n BitmapScan(cct1)\n BitmapScan(mk)\n TidScan(cc)\n TidScan(ci)\n TidScan(mi_idx)\n BitmapScan(cct2)\n BitmapScan(chn)\n SeqScan(it2)\n IndexScan(kt)\n Leading((k ((t (((n (cct1 (((mk (cc ci)) mi_idx) cct2))) chn) it2)) kt))) */",
    "inference_time": 10.015713691711426,
    "planning_time": 36.885,
    "predicted_latency": -11465.9716796875,
    "actual_latency": 190841.676
}