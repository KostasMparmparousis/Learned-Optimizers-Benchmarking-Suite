{
  "query": "/*+ NoHashJoin(mi_idx it2) NoMergeJoin(it2 mi_idx t cc) NoMergeJoin(cc it2 mi_idx t cct1) NoHashJoin(cc cct1 it2 mi_idx t cct2) NoMergeJoin(cc cct1 cct2 it2 mi_idx t mk) NoHashJoin(cc cct1 cct2 it2 mi_idx mk t k) NoMergeJoin(cc cct1 cct2 it2 k mi_idx mk t kt) NoMergeJoin(cc cct1 cct2 it2 k kt mi_idx mk t ci) NoHashJoin(cc cct1 cct2 ci it2 k kt mi_idx mk t n) NoHashJoin(cc cct1 cct2 ci it2 k kt mi_idx mk n t chn) */ select min(chn.name) AS character_name,\nmin(mi_idx.info) AS rating,\nmin(n.name) AS playing_actor,\nmin(t.title) AS complete_hero_movie\nfrom movie_info_idx AS mi_idx\ninner join info_type AS it2\non it2.id = mi_idx.info_type_id AND mi_idx.info > '7.0' AND it2.info = 'rating'\ninner join title AS t\non t.id = mi_idx.movie_id AND t.production_year > 2010\ninner join complete_cast AS cc\non t.id = cc.movie_id AND cc.movie_id = mi_idx.movie_id\ninner join comp_cast_type AS cct1\non cct1.id = cc.subject_id AND cct1.kind = 'cast'\ninner join comp_cast_type AS cct2\non cct2.id = cc.status_id AND cct2.kind like '%complete%'\ninner join movie_keyword AS mk\non t.id = mk.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id\ninner join keyword AS k\non k.id = mk.keyword_id AND k.keyword IN ('second-part',\n'hand-to-hand-combat',\n'second-part',\n'murder-in-title',\n'marvel-comics',\n'marvel-comics',\n'violence',\n'second-part',\n'marvel-comics',\n'violence')\ninner join kind_type AS kt\non kt.id = t.kind_id AND kt.kind = 'movie'\ninner join cast_info AS ci\non t.id = ci.movie_id AND mk.movie_id = ci.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id\ninner join name AS n\non n.id = ci.person_id\ninner join char_name AS chn\non chn.id = ci.person_role_id AND chn.name IS NOT NULL AND ( chn.name like '%man%' OR chn.name like '%Man%');",
  "predicted_latency": 690.4193758964539,
  "actual_latency": 381.59,
  "q_error": 1.809322508180125,
  "inference_time": 0.0568995475769043
}