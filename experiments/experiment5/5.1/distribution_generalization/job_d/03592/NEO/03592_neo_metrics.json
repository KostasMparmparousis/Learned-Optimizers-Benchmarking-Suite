{
    "query_name": "03592",
    "sql": "SELECT Count(*)\nFROM aka_name AS an,\n     complete_cast AS cc,\n     comp_cast_type AS cct1,\n     comp_cast_type AS cct2,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     info_type AS it3,\n     keyword AS k,\n     movie_companies AS mc,\n     movie_info AS mi,\n     movie_keyword AS mk,\n     name AS n,\n     person_info AS pi,\n     role_type AS rt,\n     title AS t\nWHERE cct1.kind ='cast'\n  AND cct2.kind ='complete+verified'\n  AND chn.name = 'Queen'\n  AND ci.note IN ('(voice)',\n                  '(voice) (uncredited)',\n                  '(voice: English version)')\n  AND cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND it3.info = 'height'\n  AND k.keyword = 'computer-animation'\n  AND mi.info LIKE 'USA:%200%'\n  AND n.name LIKE '%An%'\n  AND rt.role ='actress'\n  AND t.title = 'Shrek 2'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND t.id = mk.movie_id\n  AND t.id = cc.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mc.movie_id = mk.movie_id\n  AND mc.movie_id = cc.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND mi.movie_id = mk.movie_id\n  AND mi.movie_id = cc.movie_id\n  AND ci.movie_id = mk.movie_id\n  AND ci.movie_id = cc.movie_id\n  AND mk.movie_id = cc.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND chn.id = ci.person_role_id\n  AND n.id = pi.person_id\n  AND ci.person_id = pi.person_id\n  AND it3.id = pi.info_type_id\n  AND k.id = mk.keyword_id\n  AND cct1.id = cc.subject_id\n  AND cct2.id = cc.status_id\n  AND n.gender = 'f'\nAND t.production_year BETWEEN 1996  AND 2012;",
    "hint_str": "/*+ HashJoin(chn an mc t rt mi ci mk n k it cn cc cct1 cct2 it3 pi)\n HashJoin(it3 pi)\n HashJoin(chn an mc t rt mi ci mk n k it cn cc cct1 cct2)\n HashJoin(cc cct1 cct2)\n MergeJoin(cc cct1)\n NestLoop(chn an mc t rt mi ci mk n k it cn)\n MergeJoin(chn an mc t rt mi ci mk n k it)\n MergeJoin(an mc t rt mi ci mk n k it)\n HashJoin(mc t rt mi ci mk n k it)\n HashJoin(t rt mi ci mk n k it)\n NestLoop(rt mi ci mk n k it)\n MergeJoin(rt mi ci mk n k)\n HashJoin(rt mi ci mk n)\n NestLoop(rt mi ci mk)\n HashJoin(rt mi ci)\n HashJoin(mi ci)\n TidScan(chn)\n SeqScan(an)\n SeqScan(mc)\n BitmapScan(t)\n BitmapScan(rt)\n BitmapScan(mi)\n SeqScan(ci)\n IndexScan(mk)\n TidScan(n)\n BitmapScan(k)\n IndexScan(it)\n IndexScan(cn)\n TidScan(cc)\n BitmapScan(cct1)\n BitmapScan(cct2)\n IndexScan(it3)\n IndexScan(pi)\n Leading(((((chn (an (mc (t (((((rt (mi ci)) mk) n) k) it))))) cn) ((cc cct1) cct2)) (it3 pi))) */",
    "inference_time": 16.219820261001587,
    "planning_time": 1876.65,
    "predicted_latency": -11469.1650390625,
    "actual_latency": 12079.167
}