{
    "query_name": "02651",
    "sql": "SELECT MIN(n.name) AS voicing_actress,\n       MIN(t.title) AS voiced_movie\nFROM aka_name AS an,\n     char_name AS chn,\n     cast_info AS ci,\n     company_name AS cn,\n     info_type AS it,\n     movie_companies AS mc,\n     movie_info AS mi,\n     name AS n,\n     role_type AS rt,\n     title AS t\nWHERE cn.country_code ='[us]'\n  AND it.info = 'release dates'\n  AND mc.note IS NOT NULL\n  AND mi.info IS NOT NULL\n  AND n.gender ='f'\n  AND rt.role ='actress'\n  AND t.id = mi.movie_id\n  AND t.id = mc.movie_id\n  AND t.id = ci.movie_id\n  AND mc.movie_id = ci.movie_id\n  AND mc.movie_id = mi.movie_id\n  AND mi.movie_id = ci.movie_id\n  AND cn.id = mc.company_id\n  AND it.id = mi.info_type_id\n  AND n.id = ci.person_id\n  AND rt.id = ci.role_id\n  AND n.id = an.person_id\n  AND ci.person_id = an.person_id\n  AND (mi.info LIKE 'Japan:%200%'\n       OR mi.info LIKE 'USA:%200%')\n  AND (mc.note LIKE '%(USA)%'\n       OR mc.note LIKE '%(worldwide)%')\n  AND chn.id = ci.person_role_id\n  AND ci.note IN ('(voice)',\n'(executive producer)',\n'(producer)',\n'(uncredited)')\nAND n.name like '%ten%'\nAND t.production_year BETWEEN 2002  AND 2010;",
    "hint_str": "/*+ HashJoin(an rt n ci t mc cn chn mi it)\n HashJoin(an rt n ci t mc cn chn mi)\n MergeJoin(an rt n ci t mc cn chn)\n HashJoin(an rt n ci t mc cn)\n HashJoin(an rt n ci t mc)\n HashJoin(rt n ci t mc)\n HashJoin(n ci t mc)\n MergeJoin(ci t mc)\n HashJoin(t mc)\n TidScan(an)\n TidScan(rt)\n IndexScan(n)\n BitmapScan(ci)\n IndexScan(t)\n SeqScan(mc)\n IndexScan(cn)\n TidScan(chn)\n BitmapScan(mi)\n BitmapScan(it)\n Leading((((((an (rt (n (ci (t mc))))) cn) chn) mi) it)) */",
    "inference_time": 3.7980892658233643,
    "planning_time": 21.997,
    "predicted_latency": -10995.12109375,
    "actual_latency": 12380.299
}