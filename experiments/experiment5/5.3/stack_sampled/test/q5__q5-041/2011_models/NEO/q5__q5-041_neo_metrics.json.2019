{
    "query_name": "q5__q5-041",
    "sql": "select COUNT(distinct account.display_name)\nfrom\ntag t1, site s1, question q1, tag_question tq1, so_user u1, comment c1,\naccount\nwhere\n-- underappreciated (high votes, low views) questions with at least one comment\ns1.site_name='quant' and\nt1.name in ('equities', 'stochastic-processes', 'fixed-income', 'brownian-motion', 'python', 'optimization', 'black-scholes', 'market-data') and\nt1.site_id = s1.site_id and\nq1.site_id = s1.site_id and\ntq1.site_id = s1.site_id and\ntq1.question_id = q1.id and\ntq1.tag_id = t1.id and\nq1.owner_user_id = u1.id and\nq1.site_id = u1.site_id and\nq1.score > 9 and\nq1.view_count < 2310 and\nc1.site_id = q1.site_id and\nc1.post_id = q1.id and\n\n-- to get the display name\naccount.id = u1.account_id;",
    "hint_str": "/*+ HashJoin(s1 tq1 t1 q1 c1 u1 account)\n HashJoin(s1 tq1 t1 q1 c1 u1)\n HashJoin(s1 tq1 t1 q1 c1)\n MergeJoin(s1 tq1 t1 q1)\n HashJoin(s1 tq1 t1)\n HashJoin(s1 tq1)\n IndexScan(s1)\n TidScan(tq1)\n BitmapScan(t1)\n BitmapScan(q1)\n TidScan(c1)\n BitmapScan(u1)\n BitmapScan(account)\n Leading(((((((s1 tq1) t1) q1) c1) u1) account)) */",
    "inference_time": 0.9312272071838379,
    "planning_time": 11.516,
    "predicted_latency": 10598.583984375,
    "actual_latency": 55799.998
}