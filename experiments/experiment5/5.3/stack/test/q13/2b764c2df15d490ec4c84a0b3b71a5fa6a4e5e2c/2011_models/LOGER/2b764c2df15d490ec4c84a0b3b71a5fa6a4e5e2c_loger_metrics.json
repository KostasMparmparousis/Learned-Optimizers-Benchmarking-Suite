{
  "query": "/*+ NoHashJoin(a1 q1 t1 tq1 u1) NoHashJoin(a1 b q1 s t1 tq1 u1 acc) */ select acc.location,\ncount(*)\nfrom question AS q1\ninner join tag_question AS tq1\non q1.id = tq1.question_id AND q1.score >= 10 AND q1.score <= 1000\ninner join tag AS t1\non t1.id = tq1.tag_id AND t1.name IN ('amazon-s3',\n'audio',\n'batch-file',\n'compiler-construction',\n'configuration',\n'cookies',\n'dependency-injection',\n'for-loop',\n'indexing',\n'machine-learning',\n'random',\n'url',\n'visual-studio-2012',\n'visual-studio-code')\ninner join answer AS a1\non q1.id = a1.question_id\ninner join so_user AS u1\non a1.owner_user_id = u1.id AND u1.reputation >= 10 AND u1.reputation <= 100000\ninner join site AS s\non s.site_id = a1.site_id AND s.site_id = t1.site_id AND s.site_id = tq1.site_id AND s.site_id = u1.site_id AND s.site_id = q1.site_id AND s.site_name IN ('stackoverflow')\ninner join badge AS b\non s.site_id = b.site_id AND b.user_id = u1.id AND b.name IN ('Altruist',\n'Beta',\n'Copy Editor',\n'Deputy',\n'Documentation User',\n'Great Question',\n'Lifeboat',\n'Proofreader',\n'Publicist',\n'Quorum',\n'Socratic',\n'Vox Populi')\ninner join account AS acc\non acc.id = u1.account_id group by acc.location order by count(*) desc LIMIT 100;",
  "predicted_latency": 1532.5827598571777,
  "actual_latency": 5715.167,
  "q_error": 3.7291082411318524,
  "inference_time": 0.2481858730316162
}