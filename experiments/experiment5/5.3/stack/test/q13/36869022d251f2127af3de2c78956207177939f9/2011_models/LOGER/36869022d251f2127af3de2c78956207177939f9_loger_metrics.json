{
  "query": "/*+ NoHashJoin(a1 acc q1 s t1 tq1 u1 b) */ select acc.location,\ncount(*)\nfrom question AS q1\ninner join tag_question AS tq1\non q1.id = tq1.question_id AND q1.view_count >= 0 AND q1.view_count <= 100\ninner join site AS s\non s.site_id = q1.site_id AND s.site_id = tq1.site_id AND s.site_name IN ('stackoverflow',\n'superuser')\ninner join tag AS t1\non s.site_id = t1.site_id AND t1.id = tq1.tag_id AND t1.name IN ('dynamics-crm',\n'global',\n'leaflet',\n'oauth',\n'react-native-android',\n'shopify',\n'spring-batch')\ninner join answer AS a1\non s.site_id = a1.site_id AND q1.id = a1.question_id\ninner join so_user AS u1\non s.site_id = u1.site_id AND a1.owner_user_id = u1.id AND u1.downvotes >= 0 AND u1.downvotes <= 1\ninner join account AS acc\non acc.id = u1.account_id\ninner join badge AS b\non s.site_id = b.site_id AND b.user_id = u1.id AND b.name IN ('Census',\n'Constituent',\n'Custodian',\n'Enthusiast',\n'Excavator',\n'Good Answer',\n'Good Question',\n'Nice Answer',\n'Notable Question',\n'Peer Pressure',\n'Popular Question',\n'Self-Learner',\n'Supporter',\n'Tumbleweed') group by acc.location order by count(*) desc LIMIT 100;",
  "predicted_latency": 1355.1051616668701,
  "actual_latency": 6105.278,
  "q_error": 4.50539055765244,
  "inference_time": 0.09117436408996582
}