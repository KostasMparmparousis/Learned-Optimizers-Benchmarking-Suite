{
  "query": "/*+ NoHashJoin(a1 acc q1 s t1 tq1 u1 b) */ select acc.location,\ncount(*)\nfrom question AS q1\ninner join tag_question AS tq1\non q1.id = tq1.question_id AND q1.view_count >= 100 AND q1.view_count <= 100000\ninner join tag AS t1\non t1.id = tq1.tag_id AND t1.name IN ('aws-sdk',\n'bar-chart',\n'collision-detection',\n'dialogflow',\n'django-admin',\n'google-maps-android-api-2',\n'mariadb',\n'shared-ptr',\n'twisted',\n'visual-studio-code',\n'web-crawler')\ninner join answer AS a1\non q1.id = a1.question_id\ninner join so_user AS u1\non a1.owner_user_id = u1.id AND u1.reputation >= 0 AND u1.reputation <= 100\ninner join account AS acc\non acc.id = u1.account_id\ninner join site AS s\non s.site_id = a1.site_id AND s.site_id = t1.site_id AND s.site_id = tq1.site_id AND s.site_id = u1.site_id AND s.site_id = q1.site_id AND s.site_name IN ('stackoverflow',\n'superuser')\ninner join badge AS b\non s.site_id = b.site_id AND b.user_id = u1.id AND b.name IN ('Civic Duty',\n'Critic',\n'Documentation User',\n'Explainer',\n'Not a Robot',\n'Promoter',\n'Self-Learner') group by acc.location order by count(*) desc LIMIT 100;",
  "predicted_latency": 1220.7362651824951,
  "actual_latency": 6683.017,
  "q_error": 5.4745789001368905,
  "inference_time": 0.08676838874816895
}