{
    "query_name": "b368a6a5464b72ca4a3ea9fa2e4811e42b4b0ad5",
    "sql": "SELECT t1.name, count(*)\nFROM\nsite as s,\nso_user as u1,\nquestion as q1,\nanswer as a1,\ntag as t1,\ntag_question as tq1\nWHERE\nq1.owner_user_id = u1.id\nAND a1.question_id = q1.id\nAND a1.owner_user_id = u1.id\nAND s.site_id = q1.site_id\nAND s.site_id = a1.site_id\nAND s.site_id = u1.site_id\nAND s.site_id = tq1.site_id\nAND s.site_id = t1.site_id\nAND q1.id = tq1.question_id\nAND t1.id = tq1.tag_id\nAND (s.site_name in ('math','mathoverflow','pt','serverfault'))\nAND (t1.name in ('ac.commutative-algebra','android','approximation','conditional-expectation','contour-integration','differential-geometry','domain-name-system','group-theory','harmonic-analysis','javascript','partial-derivative','pde','set-theory','stochastic-calculus','ubuntu'))\nAND (q1.view_count >= 10)\nAND (q1.view_count <= 1000)\nAND (u1.downvotes >= 0)\nAND (u1.downvotes <= 1)\nGROUP BY t1.name",
    "hint_str": "/*+ HashJoin(s a1 u1 q1 t1 tq1)\n HashJoin(s a1 u1 q1 t1)\n MergeJoin(s a1 u1 q1)\n MergeJoin(u1 q1)\n MergeJoin(s a1)\n BitmapScan(s)\n SeqScan(a1)\n IndexScan(u1)\n BitmapScan(q1)\n BitmapScan(t1)\n BitmapScan(tq1)\n Leading(((((s a1) (u1 q1)) t1) tq1)) */",
    "inference_time": 0.17481184005737305,
    "planning_time": 6.572,
    "predicted_latency": 4529.3232421875,
    "actual_latency": 17409.49
}